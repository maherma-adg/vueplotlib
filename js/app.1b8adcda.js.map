{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/components/plots/MultiDataTrackPlot.vue?0dc6","webpack:///./src/components/plots/StackedBarPlot.vue?c991","webpack:///./src/components/PlotContainer.vue?c4e8","webpack:///./src/components/plots/RectPlot.vue?3648","webpack:///./src/components/plots/StratifiedScatterPlot.vue?024a","webpack:///./src/components/plots/DoubleStratifiedScatterPlot.vue?26c3","webpack:///./src/components/axes/Axis.vue?bbca","webpack:///./src/components/plots/TrackPlot.vue?79ef","webpack:///./src/components/plots/MultiTrackPlot.vue?3e46","webpack:///./src/components/plots/MultiBoxPlot.vue?e36d","webpack:///./src/components/plots/BarPlot.vue?ebcf","webpack:///./src/components/plots/DoubleStratifiedSinaPlot.vue?f0d9","webpack:///./src/components/plots/ScatterPlot.vue?c74e","webpack:///./src/components/plots/GenomeTrackPlot.vue?e7fe","webpack:///./src/components/plots/GenomeMultiTrackPlot.vue?3bb7","webpack:///./src/components/plots/HierarchicalMultiTrackPlot.vue?517c","webpack:///./src/components/plots/BoxPlot.vue?294d","webpack:///./src/components/plots/CountBarPlot.vue?d33a","webpack:///./src/components/plots/StratifiedKaplanMeierPlot.vue?8833","webpack:///./src/components/legends/CategoricalLegend.vue?a4d5","webpack:///./examples-src/App.vue?65c4","webpack:///./src/components/plots/DoubleStratifiedBoxPlot.vue?20f1","webpack:///./src/components/legends/ContinuousLegend.vue?2bfe","webpack:///./src/components/plots/StratifiedSinaPlot.vue?34c7","webpack:///./src/components/axes/GenomeAxis.vue?5dc1","webpack:///./src/components/PlotContainer.vue?0abb","webpack:///./examples-src/App.vue?60ec","webpack:///./src/icons.js","webpack:///./src/helpers.js","webpack:///src/components/PlotContainer.vue","webpack:///./src/components/PlotContainer.vue?5981","webpack:///./src/components/SortOptions.vue?30f0","webpack:///./src/history/HistoryEvent.js","webpack:///./src/history/HistoryStack.js","webpack:///./src/history/base-events.js","webpack:///src/components/SortOptions.vue","webpack:///./src/components/SortOptions.vue?e574","webpack:///./src/components/SortOptions.vue","webpack:///./src/components/axes/Axis.vue?4e12","webpack:///./src/scales/AbstractScaleDispatcher.js","webpack:///./src/scales/AbstractScale.js","webpack:///./src/data/DataContainer.js","webpack:///./src/scales/CategoricalScale.js","webpack:///./src/scales/ContinuousScale.js","webpack:///src/components/axes/Axis.vue","webpack:///./src/components/axes/Axis.vue?8379","webpack:///./src/components/axes/Axis.vue","webpack:///./src/components/axes/GenomeAxis.vue?5cbd","webpack:///./src/scales/GenomeScale.js","webpack:///src/components/axes/GenomeAxis.vue","webpack:///./src/components/axes/GenomeAxis.vue?2dcd","webpack:///./src/components/axes/GenomeAxis.vue?bc44","webpack:///./src/components/axes/DendrogramAxis.vue?d0e0","webpack:///./src/two.js","webpack:///./src/constants.js","webpack:///src/components/axes/DendrogramAxis.vue","webpack:///./src/components/axes/DendrogramAxis.vue?31d2","webpack:///./src/components/axes/DendrogramAxis.vue","webpack:///./src/components/plots/StackedBarPlot.vue?0fab","webpack:///./src/components/plots/mixin.js","webpack:///src/components/plots/StackedBarPlot.vue","webpack:///./src/components/plots/StackedBarPlot.vue?7de4","webpack:///./src/components/plots/StackedBarPlot.vue","webpack:///./src/components/plots/BarPlot.vue?2243","webpack:///src/components/plots/BarPlot.vue","webpack:///./src/components/plots/BarPlot.vue?9ad2","webpack:///./src/components/plots/BarPlot.vue","webpack:///./src/components/plots/ScatterPlot.vue?053b","webpack:///src/components/plots/ScatterPlot.vue","webpack:///./src/components/plots/ScatterPlot.vue?7e4b","webpack:///./src/components/plots/ScatterPlot.vue","webpack:///./src/components/plots/BoxPlot.vue?6e9c","webpack:///src/components/plots/BoxPlot.vue","webpack:///./src/components/plots/BoxPlot.vue?e485","webpack:///./src/components/plots/BoxPlot.vue","webpack:///./src/components/plots/MultiBoxPlot.vue?79f0","webpack:///src/components/plots/MultiBoxPlot.vue","webpack:///./src/components/plots/MultiBoxPlot.vue?7cd0","webpack:///./src/components/plots/MultiBoxPlot.vue","webpack:///./src/components/plots/TrackPlot.vue?b30c","webpack:///src/components/plots/TrackPlot.vue","webpack:///./src/components/plots/TrackPlot.vue?5c72","webpack:///./src/components/plots/TrackPlot.vue","webpack:///./src/components/plots/RectPlot.vue?27de","webpack:///src/components/plots/RectPlot.vue","webpack:///./src/components/plots/RectPlot.vue?d13a","webpack:///./src/components/plots/RectPlot.vue","webpack:///./src/components/plots/MultiDataRectPlot.vue?8b7b","webpack:///src/components/plots/MultiDataRectPlot.vue","webpack:///./src/components/plots/MultiDataRectPlot.vue?42aa","webpack:///./src/components/plots/MultiDataRectPlot.vue","webpack:///./src/components/plots/MultiTrackPlot.vue?41f6","webpack:///src/components/plots/MultiTrackPlot.vue","webpack:///./src/components/plots/MultiTrackPlot.vue?f4d7","webpack:///./src/components/plots/MultiTrackPlot.vue","webpack:///./src/components/plots/MultiDataTrackPlot.vue?3f10","webpack:///src/components/plots/MultiDataTrackPlot.vue","webpack:///./src/components/plots/MultiDataTrackPlot.vue?2e81","webpack:///./src/components/plots/MultiDataTrackPlot.vue","webpack:///./src/components/plots/HierarchicalMultiTrackPlot.vue?95ff","webpack:///src/components/plots/HierarchicalMultiTrackPlot.vue","webpack:///./src/components/plots/HierarchicalMultiTrackPlot.vue?a434","webpack:///./src/components/plots/HierarchicalMultiTrackPlot.vue","webpack:///./src/components/plots/StratifiedBoxPlot.vue?1b85","webpack:///src/components/plots/StratifiedBoxPlot.vue","webpack:///./src/components/plots/StratifiedBoxPlot.vue?14c8","webpack:///./src/components/plots/StratifiedBoxPlot.vue","webpack:///./src/components/plots/DoubleStratifiedBoxPlot.vue?dc0b","webpack:///src/components/plots/DoubleStratifiedBoxPlot.vue","webpack:///./src/components/plots/DoubleStratifiedBoxPlot.vue?7712","webpack:///./src/components/plots/DoubleStratifiedBoxPlot.vue","webpack:///./src/components/plots/StratifiedScatterPlot.vue?5896","webpack:///src/components/plots/StratifiedScatterPlot.vue","webpack:///./src/components/plots/StratifiedScatterPlot.vue?7b6f","webpack:///./src/components/plots/StratifiedScatterPlot.vue","webpack:///./src/components/plots/DoubleStratifiedScatterPlot.vue?ce4d","webpack:///src/components/plots/DoubleStratifiedScatterPlot.vue","webpack:///./src/components/plots/DoubleStratifiedScatterPlot.vue?06d6","webpack:///./src/components/plots/DoubleStratifiedScatterPlot.vue","webpack:///./src/components/plots/StratifiedSinaPlot.vue?9289","webpack:///src/components/plots/StratifiedSinaPlot.vue","webpack:///./src/components/plots/StratifiedSinaPlot.vue?5370","webpack:///./src/components/plots/StratifiedSinaPlot.vue","webpack:///./src/components/plots/DoubleStratifiedSinaPlot.vue?da20","webpack:///src/components/plots/DoubleStratifiedSinaPlot.vue","webpack:///./src/components/plots/DoubleStratifiedSinaPlot.vue?3229","webpack:///./src/components/plots/DoubleStratifiedSinaPlot.vue","webpack:///./src/components/plots/StratifiedKaplanMeierPlot.vue?d544","webpack:///src/components/plots/StratifiedKaplanMeierPlot.vue","webpack:///./src/components/plots/StratifiedKaplanMeierPlot.vue?44a2","webpack:///./src/components/plots/StratifiedKaplanMeierPlot.vue","webpack:///./src/components/plots/CountBarPlot.vue?f408","webpack:///src/components/plots/CountBarPlot.vue","webpack:///./src/components/plots/CountBarPlot.vue?0764","webpack:///./src/components/plots/CountBarPlot.vue","webpack:///./src/components/plots/GenomeScatterPlot.vue?bd01","webpack:///src/components/plots/GenomeScatterPlot.vue","webpack:///./src/components/plots/GenomeScatterPlot.vue?3c63","webpack:///./src/components/plots/GenomeScatterPlot.vue","webpack:///./src/components/plots/GenomeTrackPlot.vue?6209","webpack:///src/components/plots/GenomeTrackPlot.vue","webpack:///./src/components/plots/GenomeTrackPlot.vue?6d84","webpack:///./src/components/plots/GenomeTrackPlot.vue","webpack:///./src/components/plots/GenomeMultiTrackPlot.vue?7b41","webpack:///src/components/plots/GenomeMultiTrackPlot.vue","webpack:///./src/components/plots/GenomeMultiTrackPlot.vue?c206","webpack:///./src/components/plots/GenomeMultiTrackPlot.vue","webpack:///./src/components/plots/GenomeStackedBarPlot.vue?ceba","webpack:///src/components/plots/GenomeStackedBarPlot.vue","webpack:///./src/components/plots/GenomeStackedBarPlot.vue?7eb4","webpack:///./src/components/plots/GenomeStackedBarPlot.vue","webpack:///./src/components/legends/CategoricalLegend.vue?184d","webpack:///./src/components/modals/ColorScalePicker.vue?c0de","webpack:///./src/components/modals/Modal.vue?9abc","webpack:///src/components/modals/Modal.vue","webpack:///./src/components/modals/Modal.vue?59f3","webpack:///./src/components/modals/Modal.vue","webpack:///src/components/modals/ColorScalePicker.vue","webpack:///./src/components/modals/ColorScalePicker.vue?5033","webpack:///./src/components/modals/ColorScalePicker.vue","webpack:///./src/components/modals/ColorPicker.vue?dd9a","webpack:///src/components/modals/ColorPicker.vue","webpack:///./src/components/modals/ColorPicker.vue?3a81","webpack:///./src/components/modals/ColorPicker.vue?ee00","webpack:///src/components/legends/CategoricalLegend.vue","webpack:///./src/components/legends/CategoricalLegend.vue?08e5","webpack:///./src/components/legends/CategoricalLegend.vue","webpack:///./src/components/legends/ContinuousLegend.vue?b6d5","webpack:///src/components/legends/ContinuousLegend.vue","webpack:///./src/components/legends/ContinuousLegend.vue?7614","webpack:///./src/components/legends/ContinuousLegend.vue","webpack:///./src/components/legends/Legend.vue?e799","webpack:///src/components/legends/Legend.vue","webpack:///./src/components/legends/Legend.vue?9467","webpack:///./src/components/legends/Legend.vue","webpack:///./src/expected.js","webpack:///./src/index.js","webpack:///./examples-src/Stack.vue?0fac","webpack:///examples-src/Stack.vue","webpack:///./examples-src/Stack.vue?5eb0","webpack:///./examples-src/Stack.vue?7b66","webpack:///examples-src/App.vue","webpack:///./examples-src/App.vue?03c9","webpack:///./examples-src/App.vue?999d","webpack:///./examples-src/index.js","webpack:///./src/components/plots/GenomeStackedBarPlot.vue?ccca","webpack:///./src/components/modals/Modal.vue?b913","webpack:///./src/components/plots/GenomeScatterPlot.vue?3c19","webpack:///./src/components/axes/DendrogramAxis.vue?9f23","webpack:///./src/components/plots/MultiDataRectPlot.vue?372a","webpack:///./src/components/modals/ColorPicker.vue?868b","webpack:///./src/components/plots/StratifiedBoxPlot.vue?e884","webpack:///./examples-src/Stack.vue?cedf"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","_vm","this","_h","$createElement","_c","_self","attrs","_v","staticClass","style","display","on","$event","showStack","dynamicPlotHeight","getScale","getStack","slot","getData","exampleClickHandler","exampleDynamicPlotHeight","exampleModifyData","exampleModifyScale","countBarPlotFilterFunction","togglePlot","_e","directives","rawName","expression","staticRenderFns","COLOR_PICKER_PATH","EYE_PATH","EYE_DISABLED_PATH","PAINT_BUCKET_PATH","DOWNLOAD_PATH","getRetinaRatio","devicePixelRatio","backingStoreRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","backingStorePixelRatio","reduce","a","b","filterHierarchy","domainFiltered","filterNode","node","children","includes","newChildren","child","newChild","undefined","getDelaunay","points","randomness","map","el","Math","random","filter","Number","isNaN","Delaunay","from","find","x","y","d0","sqrt","pow","d1","seededRandom","seed","internalSeed","sin","floor","svgToUri","svg","serializer","XMLSerializer","source","serializeToString","match","replace","downloadSvg","fileName","svgContent","blob","Blob","url","URL","createObjectURL","downloadAnchorNode","document","createElement","setAttribute","body","appendChild","click","remove","v","toString","component","_s","variable","$$selectedVal","Array","target","options","selected","val","_value","selectedKey","multiple","_l","sortVarKey","domProps","_optionScale","toHuman","hasOptionScale","optionName","sortAscending","validSelection","go","HistoryEvent","type","subtype","id","action","params","_type","_subtype","_id","_action","_params","event","VDP_COMPUTED_PARAM","GETTER_FUNCTION_KEY","GETTER_PARAMS","computedParam","getterFunctionKey","getterParams","HistoryStack","getterFunctionMapping","resetFunctionNameMapping","_getters","_resetters","_stack","_pointer","canGoForward","prune","incrementPointer","decrementPointer","pop","pointer","isRelated","canGoBack","curr","prev","getPrevRelated","execute","isEmpty","next","console","assert","getterFunction","isArray","getTargetFunc","parsedParams","parseParams","error","toJson","stack","EVENT_TYPES","freeze","SCALE","DATA","EVENT_SUBTYPES","SCALE_DOMAIN_FILTER","SCALE_DOMAIN_SORT","SCALE_COLOR_SCALE","SCALE_COLOR_OVERRIDE","EVENT_SUBTYPE_RESETS","computedHeight","computedWidth","computedTop","computedLeft","axisElemID","DISPATCH_EVENT_UPDATE","DISPATCH_EVENT_HIGHLIGHT","DISPATCH_EVENT_HIGHLIGHT_DESTROY","AbstractScaleDispatcher","_dispatch","d3_dispatch","componentId","callback","arguments","AbstractScale","domain","colorScaleKey","expected","_name","_colorScaleOriginal","defaultColorScale","_colorScale","colorScales","_domain","_domainFiltered","_domainOriginal","_isLoading","Promise","resolve","then","emitUpdate","onData","constructor","expectedData","domainValue","Error","ascending","isUnknown","unknownString","newDomain","newDomainFiltered","scaleKey","keys","setDomainFiltered","d3_interpolateBrBG","d3_interpolatePRGn","d3_interpolatePiYG","d3_interpolatePuOr","d3_interpolateRdBu","d3_interpolateRdGy","d3_interpolateRdYlBu","d3_interpolateRdYlGn","d3_interpolateSpectral","d3_interpolateBlues","d3_interpolateGreens","d3_interpolateGreys","d3_interpolateOranges","d3_interpolatePurples","d3_interpolateReds","d3_interpolateViridis","d3_interpolateInferno","d3_interpolateMagma","d3_interpolatePlasma","d3_interpolateWarm","d3_interpolateCool","d3_interpolateCubehelixDefault","d3_interpolateBuGn","d3_interpolateBuPu","d3_interpolateGnBu","d3_interpolateOrRd","d3_interpolatePuBuGn","d3_interpolatePuBu","d3_interpolatePuRd","d3_interpolateRdPu","d3_interpolateYlGnBu","d3_interpolateYlGn","d3_interpolateYlOrBr","d3_interpolateYlOrRd","d3_interpolateRainbow","d3_interpolateSinebow","DataContainer","_data","newData","CategoricalScale","humanDomain","colorOverrides","_humanDomain","_colorOverrides","_colorOverridesOriginal","assign","humanScale","unknownColor","colorScale","findIndex","parseFloat","compareFunc","d3_ascending","d3_descending","indexOf","newMinIndex","newMaxIndex","elementsFiltered","indicesToKeep","index","dataContainer","var1D","comparatorScale","isLoading","dataCopy","comparator","domainA","domainB","dataA","dataB","domainCopy","domainFilteredCopy","sort","setDomain","hierarchyData","cleanedHierarchyData","root","d3_hierarchy","leaves","newParentKey","getParent","possibleParent","filteredParent","filteredRoot","filteredLeaves","setColorOverrides","d3_scaleOrdinal","range","ContinuousScale","newMin","newMax","computedTranslateX","onChromosomeChange","isWholeGenome","chromosomeName","selectedChromosome","selectedChromosomeStart","toLocaleString","onChromosomeStartChange","selectedChromosomeEnd","onChromosomeEndChange","onChromosomeShiftLeft","onChromosomeShiftRight","onChromosomeZoomIn","onChromosomeZoomOut","CHROMOSOMES","CHROMOSOME_LENGTHS","GenomeScale","_chromosomes","_chromosomesFiltered","_domains","_domainsFiltered","chromosome","cumsum","h","ratios","getChromosomeRatios","ratiosCumulative","ratio","getChromosomeRatiosFiltered","position","genomeLength","d3_sum","chromosomeIndex","currChromosomeIndex","currChromosomeDomain","start","end","highlightX","highlightY","TwoRectangle","width","height","stroke","fill","linewidth","opacity","rotation","TwoCircle","size","TwoLine","x1","y1","x2","y2","TwoPath","TwoText","text","fontsize","font","textalign","Two","domElement","elements","init","d3_select","attr","g","append","context","getContext","scaledWidth","scaledHeight","scale","nodeName","toLowerCase","initCanvas","initSvg","warn","rect","circle","line","args","path","obj","forEach","PI","pathD","lineWidth","globalAlpha","save","translate","rotate","fillStyle","fillRect","strokeStyle","strokeRect","restore","beginPath","arc","moveTo","lineTo","textAlign","fillText","renderCanvas","renderSvg","TOOLTIP_DEBOUNCE","BAR_MARGIN_DEFAULT","BAR_WIDTH_MIN","BAR_HEIGHT_MIN","GENOME_EVENT_COLOR_DEFAULT","plotElemID","hiddenPlotElemID","highlightX1","pMarginLeft","highlightX2","tooltipElemID","_xScale","tooltipInfo","_cScale","_yScale","props","String","Function","tooltipPosition","left","top","showHighlight","computed","uuid","highlightElemID","plotSelector","hiddenPlotSelector","highlightSelector","tooltipSelector","tooltipPositionAttribute","watch","pWidth","drawPlot","pHeight","methods","tooltipHide","tooltipDestroy","removePlot","highlightY1","pMarginTop","min","q1","median","mean","q3","max","highlightXY","_zScale","z","highlightHeight","highlightWidth","cName","highlightY2","count","highlightX1Secondary","highlightX2Secondary","_x2Scale","_oScale","legendElemID","changeColorScale","showColorScalePicker","changeColor","initialColor","showColorPicker","$emit","pickerElemID","title","_t","selectColor","ref","lHeight","lWidth","legendType","lStyle","lItemHeight","clickHandler","showDownloadButton","downloadName","DISPATCH_RECEIVED_EXPECTED_DATA","Expected","receiverType","receiverId","_getBBox","SVGGraphicsElement","getBBox","bbox","tempDiv","tempSvg","contains","tagName","cloneNode","createElementNS","removeChild","goBack","goForward","exportStack","isCurrent","exposuresDataContainer","exposuresSingleDataContainer","exposuresErrorSingleDataContainer","rainfallDataContainer","xyDataContainer","clinicalDataContainer","clusteringDataContainer","randomGenomeDataContainer","randomGenomeMultiDataContainer","genomeBinsDataContainer","carsAsyncDataContainer","vueDataContainer","survivalDataContainer","sampleIdScale","numSamplesScale","exposureScale","signatureScale","xyYScale","xyXScale","ageScale","sexScale","genomeScale","catScale","mutDistScale","projScale","eventScale","genomeExposureScale","carsCylinderScale","carsHorsepowerScale","vueXScale","vueYScale","vueColorScale","exposureErrorScale","survivalPctScale","survivalTimeScale","survivalPatientScale","multiRectPlotScale","components","PlotContainer","Axis","GenomeAxis","DendrogramAxis","StackedBarPlot","BarPlot","SortOptions","Stack","ScatterPlot","BoxPlot","MultiBoxPlot","TrackPlot","RectPlot","MultiTrackPlot","MultiDataRectPlot","MultiDataTrackPlot","HierarchicalMultiTrackPlot","StratifiedBoxPlot","DoubleStratifiedBoxPlot","StratifiedScatterPlot","DoubleStratifiedScatterPlot","StratifiedSinaPlot","DoubleStratifiedSinaPlot","StratifiedKaplanMeierPlot","CountBarPlot","GenomeScatterPlot","GenomeTrackPlot","GenomeMultiTrackPlot","GenomeStackedBarPlot","CategoricalLegend","ContinuousLegend","Legend","mounted","alert","JSON","stringify","expectedDataSource","emitData","Vue","render","App"],"mappings":"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,GACI,IAAK,iBACH,OAAO+D,GACT,IAAK,wBACH,OAAOC,GACT,IAAK,8BACH,OAAOC,GACT,IAAK,gBACH,OAAOC,GACT,IAAK,UACH,OAAOC,GACT,IAAK,gBACH,OAAOC,GACT,IAAK,aACH,OAAOC,GACT,IAAK,mBACH,OAAOC,GACT,IAAK,yBACH,OAAOC,GACT,IAAK,mBACH,OAAOC,GACT,IAAK,kBACH,OAAOC,GACT,IAAK,WACH,OAAOC,GACT,IAAK,gBACH,OAAOC,KAMb,UACA,YACA,SACA,mCAAE,OAAF,0BAEA,UACA,cACA,oBACA,sCAAE,OAAF,kCAEA,UACA,WACA,WACA,SAEA,UACA,iBACA,QACA,UAEA,UACA,YACA,YACA,6WACA,EACA,CAAE,OAAF,YAEA,UACA,IACA,WACA,aACA,EACA,IAEA,UACA,IACA,WACA,QAEA,UACA,MACA,MACA,SAEA,UACA,MACA,MACA,mBAEA,6BACA,IACA,wCACA,wCACA,wCACA,wCAEA,wCACA,wCACA,wCACA,wCAEA,wCACA,wCACA,wCACA,wCAEA,wCACA,wCACA,wCACA,wCAEA,wCACA,wCACA,wCACA,wCAEA,wCACA,wCACA,wCACA,yCAEA,UACA,MACA,oBACA,IAEA,UACA,WACA,gCACA,SAEA,UACA,UACA,UACA,0CAEA,UACA,SACA,aACA,iBACA,0CAGA,UACA,kBACA,0BACA,QAGA,UACA,YACA,YACA,QAEA,UACA,aACA,aACA,SAGA,UACA,QACA,QACA,QAEA,UACA,QACA,QACA,UAEA,UACA,QACA,YACA,mBACA,EACA,CAAE,EAAF,UAAE,EAAF,YAIA,UACA,eACA,mBACA,SAGA,UACA,gBACA,OACA,UAGA,UACA,wBACA,WACA,eAGA,UACA,mBACA,UACA,uCAAE,OAAF,qCAMA,eACE,OAAF,GACI,IAAK,YACH,OAAOC,GACT,IAAK,cACH,OAAOC,GACT,IAAK,WACH,OAAOC,GACT,IAAK,YACH,OAAOC,GACT,IAAK,IACH,OAAOC,GACT,IAAK,IACH,OAAOC,GACT,IAAK,MACH,OAAOC,GACT,IAAK,MACH,OAAOC,GACT,IAAK,SACH,OAAOC,GACT,IAAK,MACH,OAAOC,GACT,IAAK,WACH,OAAOC,GACT,IAAK,UACH,OAAOC,GACT,IAAK,SACH,OAAOC,GACT,IAAK,kBACH,OAAOC,GACT,IAAK,YACH,OAAOC,GACT,IAAK,aACH,OAAOC,GACT,IAAK,QACH,OAAOC,GACT,IAAK,QACH,OAAOC,GACT,IAAK,QACH,OAAOC,GACT,IAAK,iBACH,OAAOC,GACT,IAAK,eACH,OAAOC,GACT,IAAK,gBACH,OAAOC,GACT,IAAK,mBACH,OAAOC,GACT,IAAK,wBACH,OAAOC,KAMb,kCAEA,YAFA,kBAGA,WAHA,IAKA,GAKA,cACE,OAAO,IAKT,IACEzkB,KAAM,MACN0kB,WAAY,CACVC,cAAJ,EACIC,KAAJ,GACIC,WAAJ,GACIC,eAAJ,GACIC,eAAJ,GACIC,QAAJ,GACIC,YAAJ,EACIC,MAAJ,GACIC,YAAJ,GACIC,QAAJ,GACIC,aAAJ,GACIC,UAAJ,GACIC,SAAJ,GACIC,eAAJ,GACIC,kBAAJ,GACIC,mBAAJ,GACIC,2BAAJ,GACIC,kBAAJ,GACIC,wBAAJ,GACIC,sBAAJ,GACIC,4BAAJ,GACIC,mBAAJ,GACIC,yBAAJ,GACIC,0BAAJ,GACIC,aAAJ,GACIC,kBAAJ,GACIC,gBAAJ,GACIC,qBAAJ,GACIC,qBAAJ,GACIC,kBAAJ,GACIC,iBAAJ,GACIC,OAAJ,IAEE9oB,KApCF,WAqCI,MAAO,CACL2E,kBAAmB,IACnBI,QAASA,GACTH,SAAUA,GACVC,SAAUA,GACVH,WAAW,EACXW,YAAY,IAGhB0jB,QA9CF,aAiDErI,QAAS,CACP1b,oBADJ,WAEMgkB,MAAM,oCAAsCC,KAAKC,UAAU,MAAjE,mCAEI9jB,2BAJJ,SAIA,GACM,OAAO,EAAb,GAEIH,yBAPJ,WAQMnB,KAAKa,mBAAqB,KAE5BO,kBAVJ,WAWMikB,GAAmBC,SAAS,CAC1B,KAAR,CACU,QAAV,oBAAY,MAAZ,CAAc,EAAd,MAAc,EAAd,cAIIjkB,mBAjBJ,WAkBMgkB,GAAmBC,SAAS,CAC1B,OAAR,CACU,EAAV,cC1jD8T,MCQ1T,I,UAAY,eACd,GACA,EACA1jB,GACA,EACA,KACA,KACA,OAIa,M,QChBH,IAAI2jB,OAAI,CAClB5hB,GAAI,OACJ6hB,OAAQ,SAAAhQ,GAAC,OAAIA,EAAEiQ,Q,uGCLjB,yBAA0e,EAAG,G,kCCA7e,yBAAsjB,EAAG,G,yDCAzjB,yBAAue,EAAG,G,kCCA1e,yBAAoe,EAAG,G,yDCAve,yBAAue,EAAG,G,kCCA1e,yBAAie,EAAG,G,8uDCApe,yBAAue,EAAG,G,yDCA1e,yBAAub,EAAG","file":"js/app.1b8adcda.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/vueplotlib/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([\"cff0\",\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MultiDataTrackPlot.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MultiDataTrackPlot.vue?vue&type=style&index=0&lang=css&\"","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./StackedBarPlot.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./StackedBarPlot.vue?vue&type=style&index=0&lang=css&\"","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PlotContainer.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PlotContainer.vue?vue&type=style&index=0&lang=css&\"","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./RectPlot.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./RectPlot.vue?vue&type=style&index=0&lang=css&\"","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./StratifiedScatterPlot.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./StratifiedScatterPlot.vue?vue&type=style&index=0&lang=css&\"","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./DoubleStratifiedScatterPlot.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./DoubleStratifiedScatterPlot.vue?vue&type=style&index=0&lang=css&\"","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Axis.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Axis.vue?vue&type=style&index=0&lang=css&\"","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TrackPlot.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TrackPlot.vue?vue&type=style&index=0&lang=css&\"","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MultiTrackPlot.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MultiTrackPlot.vue?vue&type=style&index=0&lang=css&\"","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MultiBoxPlot.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MultiBoxPlot.vue?vue&type=style&index=0&lang=css&\"","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BarPlot.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BarPlot.vue?vue&type=style&index=0&lang=css&\"","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./DoubleStratifiedSinaPlot.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./DoubleStratifiedSinaPlot.vue?vue&type=style&index=0&lang=css&\"","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ScatterPlot.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ScatterPlot.vue?vue&type=style&index=0&lang=css&\"","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./GenomeTrackPlot.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./GenomeTrackPlot.vue?vue&type=style&index=0&lang=css&\"","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./GenomeMultiTrackPlot.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./GenomeMultiTrackPlot.vue?vue&type=style&index=0&lang=css&\"","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./HierarchicalMultiTrackPlot.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./HierarchicalMultiTrackPlot.vue?vue&type=style&index=0&lang=css&\"","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BoxPlot.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BoxPlot.vue?vue&type=style&index=0&lang=css&\"","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CountBarPlot.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CountBarPlot.vue?vue&type=style&index=0&lang=css&\"","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./StratifiedKaplanMeierPlot.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./StratifiedKaplanMeierPlot.vue?vue&type=style&index=0&lang=css&\"","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CategoricalLegend.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CategoricalLegend.vue?vue&type=style&index=0&lang=css&\"","import mod from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=css&\"","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./DoubleStratifiedBoxPlot.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./DoubleStratifiedBoxPlot.vue?vue&type=style&index=0&lang=css&\"","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ContinuousLegend.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ContinuousLegend.vue?vue&type=style&index=0&lang=css&\"","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./StratifiedSinaPlot.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./StratifiedSinaPlot.vue?vue&type=style&index=0&lang=css&\"","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./GenomeAxis.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./GenomeAxis.vue?vue&type=style&index=0&lang=css&\"","var render, staticRenderFns\nimport script from \"./PlotContainer.vue?vue&type=script&lang=js&\"\nexport * from \"./PlotContainer.vue?vue&type=script&lang=js&\"\nimport style0 from \"./PlotContainer.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('h1',[_vm._v(\"vueplotlib\")]),_c('div',{staticClass:\"top-links\"},[_c('a',{attrs:{\"href\":\"https://keller-mark.github.io/vueplotlib/docs/\",\"title\":\"Read the docs\"}},[_c('svg',{attrs:{\"xmlns\":\"http://www.w3.org/2000/svg\",\"width\":\"40\",\"height\":\"40\",\"viewBox\":\"0 0 24 24\"}},[_c('path',{attrs:{\"d\":\"M5.495 2h16.505v-2h-17c-1.657 0-3 1.343-3 3v18c0 1.657 1.343 3 3 3h17v-20h-16.505c-1.375 0-1.375-2 0-2zm.505 4h14v16h-14v-16z\"}})])]),_c('a',{attrs:{\"href\":\"https://github.com/keller-mark/vueplotlib\",\"title\":\"View on GitHub\"}},[_c('svg',{attrs:{\"xmlns\":\"http://www.w3.org/2000/svg\",\"width\":\"40\",\"height\":\"40\",\"viewBox\":\"0 0 16 16\"}},[_c('path',{attrs:{\"fill-rule\":\"evenodd\",\"d\":\"M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0 0 16 8c0-4.42-3.58-8-8-8z\"}})])])]),_c('button',{style:({display: 'block'}),on:{\"click\":function($event){_vm.showStack = !_vm.showStack}}},[_vm._v(\"Toggle Stack\")]),_c('PlotContainer',{attrs:{\"pWidth\":500,\"pHeight\":_vm.dynamicPlotHeight,\"pMarginTop\":100,\"pMarginLeft\":100,\"pMarginRight\":100,\"pMarginBottom\":100,\"showDownloadButton\":true,\"downloadButtonOffsetX\":0,\"downloadButtonOffsetY\":60,\"showResizeButton\":true}},[_c('Axis',{attrs:{\"slot\":\"axisTop\",\"variable\":\"vue_x\",\"side\":\"top\",\"tickRotation\":0,\"getScale\":_vm.getScale,\"getStack\":_vm.getStack},slot:\"axisTop\"}),_c('Axis',{attrs:{\"slot\":\"axisLeft\",\"variable\":\"vue_y\",\"side\":\"left\",\"tickRotation\":-35,\"getScale\":_vm.getScale,\"getStack\":_vm.getStack},slot:\"axisLeft\"}),_c('ScatterPlot',{attrs:{\"slot\":\"plot\",\"data\":\"vue_data\",\"x\":\"vue_x\",\"y\":\"vue_y\",\"c\":\"vue_c\",\"pointSize\":5,\"fillPoints\":true,\"getData\":_vm.getData,\"getScale\":_vm.getScale,\"clickHandler\":_vm.exampleClickHandler},slot:\"plot\"}),_c('Axis',{attrs:{\"slot\":\"axisRight\",\"variable\":\"vue_y\",\"side\":\"right\",\"tickRotation\":-35,\"getScale\":_vm.getScale,\"getStack\":_vm.getStack},slot:\"axisRight\"}),_c('Axis',{attrs:{\"slot\":\"axisBottom\",\"variable\":\"vue_x\",\"side\":\"bottom\",\"tickRotation\":0,\"getScale\":_vm.getScale,\"getStack\":_vm.getStack},slot:\"axisBottom\"})],1),_c('button',{on:{\"click\":_vm.exampleDynamicPlotHeight}},[_vm._v(\"Change Plot Height\")]),_c('h3',[_vm._v(\"<StackedBarPlot/>\")]),_c('PlotContainer',{attrs:{\"pWidth\":800,\"pHeight\":300,\"pMarginTop\":10,\"pMarginLeft\":120,\"pMarginRight\":10,\"pMarginBottom\":150,\"showDownloadButton\":true,\"showResizeButton\":true}},[_c('Axis',{attrs:{\"slot\":\"axisLeft\",\"variable\":\"exposure\",\"side\":\"left\",\"tickRotation\":-35,\"getScale\":_vm.getScale,\"getStack\":_vm.getStack},slot:\"axisLeft\"}),_c('StackedBarPlot',{attrs:{\"slot\":\"plot\",\"data\":\"exposures_data\",\"x\":\"sample_id\",\"y\":\"exposure\",\"c\":\"signature\",\"getData\":_vm.getData,\"getScale\":_vm.getScale,\"clickHandler\":_vm.exampleClickHandler},slot:\"plot\"}),_c('Axis',{attrs:{\"slot\":\"axisBottom\",\"variable\":\"sample_id\",\"side\":\"bottom\",\"tickRotation\":-65,\"maxCharacters\":3,\"getScale\":_vm.getScale,\"getStack\":_vm.getStack},slot:\"axisBottom\"})],1),_c('h3',[_vm._v(\"<CategoricalLegend/>\")]),_c('CategoricalLegend',{attrs:{\"variable\":\"signature\",\"lStyle\":\"bar\",\"lWidth\":250,\"getScale\":_vm.getScale,\"getStack\":_vm.getStack,\"showDownloadButton\":true}}),_c('h3',[_vm._v(\"<ContinuousLegend/>\")]),_c('ContinuousLegend',{attrs:{\"variable\":\"age\",\"lWidth\":250,\"getScale\":_vm.getScale,\"getStack\":_vm.getStack,\"showDownloadButton\":true}}),_c('h3',[_vm._v(\"<BarPlot/>\")]),_c('PlotContainer',{attrs:{\"pWidth\":500,\"pHeight\":300,\"pMarginTop\":10,\"pMarginLeft\":120,\"pMarginRight\":10,\"pMarginBottom\":100,\"showDownloadButton\":true}},[_c('Axis',{attrs:{\"slot\":\"axisLeft\",\"variable\":\"exposure\",\"side\":\"left\",\"tickRotation\":-35,\"getScale\":_vm.getScale,\"getStack\":_vm.getStack},slot:\"axisLeft\"}),_c('BarPlot',{attrs:{\"slot\":\"plot\",\"data\":\"exposures_single_data\",\"x\":\"signature\",\"y\":\"exposure\",\"getData\":_vm.getData,\"getScale\":_vm.getScale,\"clickHandler\":_vm.exampleClickHandler},slot:\"plot\"}),_c('Axis',{attrs:{\"slot\":\"axisBottom\",\"variable\":\"signature\",\"side\":\"bottom\",\"tickRotation\":-65,\"getScale\":_vm.getScale,\"getStack\":_vm.getStack,\"disableBrushing\":true},slot:\"axisBottom\"})],1),_c('PlotContainer',{attrs:{\"pWidth\":500,\"pHeight\":300,\"pMarginTop\":10,\"pMarginLeft\":120,\"pMarginRight\":10,\"pMarginBottom\":100,\"showDownloadButton\":true}},[_c('Axis',{attrs:{\"slot\":\"axisLeft\",\"variable\":\"exposure_error\",\"side\":\"left\",\"tickRotation\":-35,\"getScale\":_vm.getScale,\"getStack\":_vm.getStack},slot:\"axisLeft\"}),_c('BarPlot',{attrs:{\"slot\":\"plot\",\"data\":\"exposures_error_single_data\",\"x\":\"signature\",\"y\":\"exposure_error\",\"barColor\":\"gray\",\"getData\":_vm.getData,\"getScale\":_vm.getScale,\"clickHandler\":_vm.exampleClickHandler},slot:\"plot\"}),_c('Axis',{attrs:{\"slot\":\"axisBottom\",\"variable\":\"signature\",\"side\":\"bottom\",\"tickRotation\":-65,\"getScale\":_vm.getScale,\"getStack\":_vm.getStack,\"disableBrushing\":true},slot:\"axisBottom\"})],1),_c('h3',[_vm._v(\"<ScatterPlot/>\")]),_c('PlotContainer',{attrs:{\"pWidth\":500,\"pHeight\":300,\"pMarginTop\":10,\"pMarginLeft\":120,\"pMarginRight\":10,\"pMarginBottom\":100,\"showDownloadButton\":true}},[_c('Axis',{attrs:{\"slot\":\"axisLeft\",\"variable\":\"y\",\"side\":\"left\",\"tickRotation\":-35,\"getScale\":_vm.getScale,\"getStack\":_vm.getStack},slot:\"axisLeft\"}),_c('ScatterPlot',{attrs:{\"slot\":\"plot\",\"data\":\"xy_data\",\"x\":\"x\",\"y\":\"y\",\"getData\":_vm.getData,\"getScale\":_vm.getScale,\"clickHandler\":_vm.exampleClickHandler},slot:\"plot\"}),_c('Axis',{attrs:{\"slot\":\"axisBottom\",\"variable\":\"x\",\"side\":\"bottom\",\"tickRotation\":0,\"getScale\":_vm.getScale,\"getStack\":_vm.getStack},slot:\"axisBottom\"})],1),_c('button',{on:{\"click\":_vm.exampleModifyData}},[_vm._v(\"Modify data: double all coordinates\")]),_c('button',{on:{\"click\":_vm.exampleModifyScale}},[_vm._v(\"Modify scales: triple Y range\")]),_c('h3',[_vm._v(\"<ScatterPlot/> and asynchronous data\")]),_c('PlotContainer',{attrs:{\"pWidth\":500,\"pHeight\":300,\"pMarginTop\":10,\"pMarginLeft\":120,\"pMarginRight\":10,\"pMarginBottom\":100,\"showDownloadButton\":true}},[_c('Axis',{attrs:{\"slot\":\"axisLeft\",\"variable\":\"Horsepower\",\"side\":\"left\",\"tickRotation\":-35,\"getScale\":_vm.getScale,\"getStack\":_vm.getStack},slot:\"axisLeft\"}),_c('ScatterPlot',{attrs:{\"slot\":\"plot\",\"data\":\"async_cars_data\",\"x\":\"Cylinders\",\"y\":\"Horsepower\",\"getData\":_vm.getData,\"getScale\":_vm.getScale,\"clickHandler\":_vm.exampleClickHandler},slot:\"plot\"}),_c('Axis',{attrs:{\"slot\":\"axisBottom\",\"variable\":\"Cylinders\",\"side\":\"bottom\",\"tickRotation\":0,\"getScale\":_vm.getScale,\"getStack\":_vm.getStack},slot:\"axisBottom\"})],1),_c('h3',[_vm._v(\"<BoxPlot/>\")]),_c('PlotContainer',{attrs:{\"pWidth\":200,\"pHeight\":300,\"pMarginTop\":10,\"pMarginLeft\":120,\"pMarginRight\":10,\"pMarginBottom\":50,\"showDownloadButton\":true}},[_c('Axis',{attrs:{\"slot\":\"axisLeft\",\"variable\":\"exposure\",\"side\":\"left\",\"tickRotation\":-35,\"getScale\":_vm.getScale,\"getStack\":_vm.getStack},slot:\"axisLeft\"}),_c('BoxPlot',{attrs:{\"slot\":\"plot\",\"data\":\"exposures_data\",\"variable\":\"COSMIC 3\",\"y\":\"exposure\",\"o\":\"sample_id\",\"getData\":_vm.getData,\"getScale\":_vm.getScale,\"clickHandler\":_vm.exampleClickHandler,\"drawOutliers\":true},slot:\"plot\"})],1),_c('h3',[_vm._v(\"<MultiBoxPlot/>\")]),_c('PlotContainer',{attrs:{\"pWidth\":500,\"pHeight\":300,\"pMarginTop\":10,\"pMarginLeft\":120,\"pMarginRight\":10,\"pMarginBottom\":180,\"showDownloadButton\":true}},[_c('Axis',{attrs:{\"slot\":\"axisLeft\",\"variable\":\"exposure\",\"side\":\"left\",\"tickRotation\":-35,\"getScale\":_vm.getScale,\"getStack\":_vm.getStack},slot:\"axisLeft\"}),_c('MultiBoxPlot',{attrs:{\"slot\":\"plot\",\"data\":\"exposures_data\",\"x\":\"signature\",\"y\":\"exposure\",\"o\":\"sample_id\",\"getData\":_vm.getData,\"getScale\":_vm.getScale,\"clickHandler\":_vm.exampleClickHandler,\"drawOutliers\":true},slot:\"plot\"}),_c('Axis',{attrs:{\"slot\":\"axisBottom\",\"variable\":\"signature\",\"side\":\"bottom\",\"tickRotation\":-65,\"getScale\":_vm.getScale,\"getStack\":_vm.getStack},slot:\"axisBottom\"})],1),_c('h3',[_vm._v(\"<TrackPlot/>\")]),_c('PlotContainer',{attrs:{\"pWidth\":700,\"pHeight\":40,\"pMarginTop\":10,\"pMarginLeft\":40,\"pMarginRight\":10,\"pMarginBottom\":180,\"showDownloadButton\":true}},[_c('TrackPlot',{attrs:{\"slot\":\"plot\",\"data\":\"clinical_data\",\"x\":\"sample_id\",\"c\":\"age\",\"getData\":_vm.getData,\"getScale\":_vm.getScale,\"clickHandler\":_vm.exampleClickHandler},slot:\"plot\"}),_c('Axis',{attrs:{\"slot\":\"axisBottom\",\"variable\":\"sample_id\",\"side\":\"bottom\",\"tickRotation\":-65,\"getScale\":_vm.getScale,\"getStack\":_vm.getStack},slot:\"axisBottom\"})],1),_c('h3',[_vm._v(\"<GenomeScatterPlot/>\")]),_c('PlotContainer',{attrs:{\"pWidth\":800,\"pHeight\":500,\"pMarginTop\":20,\"pMarginLeft\":150,\"pMarginRight\":20,\"pMarginBottom\":80,\"showDownloadButton\":true}},[_c('Axis',{attrs:{\"slot\":\"axisLeft\",\"variable\":\"mut_dist\",\"side\":\"left\",\"log\":true,\"getScale\":_vm.getScale,\"getStack\":_vm.getStack},slot:\"axisLeft\"}),_c('GenomeScatterPlot',{attrs:{\"slot\":\"plot\",\"data\":\"rainfall_data\",\"g\":\"genome\",\"chromosomeVariable\":\"chr\",\"positionVariable\":\"pos\",\"c\":\"cat\",\"y\":\"mut_dist\",\"log\":true,\"getData\":_vm.getData,\"getScale\":_vm.getScale,\"clickHandler\":_vm.exampleClickHandler},slot:\"plot\"}),_c('GenomeAxis',{attrs:{\"slot\":\"axisBottom\",\"scaleKey\":\"genome\",\"side\":\"bottom\",\"getScale\":_vm.getScale,\"getStack\":_vm.getStack},slot:\"axisBottom\"})],1),_c('h3',[_vm._v(\"<GenomeStackedBarPlot/>\")]),_c('PlotContainer',{attrs:{\"pWidth\":800,\"pHeight\":500,\"pMarginTop\":20,\"pMarginLeft\":150,\"pMarginRight\":20,\"pMarginBottom\":80,\"showDownloadButton\":true}},[_c('Axis',{attrs:{\"slot\":\"axisLeft\",\"variable\":\"genome_exposure\",\"side\":\"left\",\"getScale\":_vm.getScale,\"getStack\":_vm.getStack},slot:\"axisLeft\"}),_c('GenomeStackedBarPlot',{attrs:{\"slot\":\"plot\",\"data\":\"genome_bins_data\",\"g\":\"genome\",\"chromosomeVariable\":\"chr\",\"positionVariable\":\"pos\",\"c\":\"signature\",\"y\":\"genome_exposure\",\"getData\":_vm.getData,\"getScale\":_vm.getScale,\"clickHandler\":_vm.exampleClickHandler},slot:\"plot\"}),_c('GenomeAxis',{attrs:{\"slot\":\"axisBottom\",\"scaleKey\":\"genome\",\"side\":\"bottom\",\"getScale\":_vm.getScale,\"getStack\":_vm.getStack},slot:\"axisBottom\"})],1),_c('h3',[_vm._v(\"<MultiTrackPlot/>\")]),_c('PlotContainer',{attrs:{\"pWidth\":780,\"pHeight\":500,\"pMarginTop\":20,\"pMarginLeft\":180,\"pMarginRight\":20,\"pMarginBottom\":20,\"showDownloadButton\":true}},[_c('Axis',{attrs:{\"slot\":\"axisLeft\",\"variable\":\"signature\",\"side\":\"left\",\"getScale\":_vm.getScale,\"getStack\":_vm.getStack},slot:\"axisLeft\"}),_c('MultiTrackPlot',{attrs:{\"slot\":\"plot\",\"data\":\"exposures_data\",\"x\":\"sample_id\",\"y\":\"signature\",\"c\":\"exposure\",\"getScale\":_vm.getScale,\"getStack\":_vm.getStack,\"getData\":_vm.getData,\"clickHandler\":_vm.exampleClickHandler},slot:\"plot\"})],1),_c('h3',[_vm._v(\"<DendrogramAxis/> and <HierarchicalMultiTrackPlot/>\")]),_c('PlotContainer',{attrs:{\"pWidth\":780,\"pHeight\":500,\"pMarginTop\":200,\"pMarginLeft\":180,\"pMarginRight\":20,\"pMarginBottom\":200,\"showDownloadButton\":true}},[_c('DendrogramAxis',{attrs:{\"slot\":\"axisTop\",\"variable\":\"sample_id\",\"h\":\"clustering\",\"side\":\"top\",\"getScale\":_vm.getScale,\"getStack\":_vm.getStack,\"getData\":_vm.getData,\"clickHandler\":_vm.exampleClickHandler},slot:\"axisTop\"}),_c('Axis',{attrs:{\"slot\":\"axisLeft\",\"variable\":\"signature\",\"side\":\"left\",\"getScale\":_vm.getScale,\"getStack\":_vm.getStack},slot:\"axisLeft\"}),_c('HierarchicalMultiTrackPlot',{attrs:{\"slot\":\"plot\",\"data\":\"exposures_data\",\"h\":\"clustering\",\"x\":\"sample_id\",\"y\":\"signature\",\"c\":\"exposure\",\"getScale\":_vm.getScale,\"getStack\":_vm.getStack,\"getData\":_vm.getData,\"clickHandler\":_vm.exampleClickHandler},slot:\"plot\"}),_c('DendrogramAxis',{attrs:{\"slot\":\"axisBottom\",\"variable\":\"sample_id\",\"h\":\"clustering\",\"side\":\"bottom\",\"getScale\":_vm.getScale,\"getStack\":_vm.getStack,\"getData\":_vm.getData,\"clickHandler\":_vm.exampleClickHandler},slot:\"axisBottom\"})],1),_c('h3',[_vm._v(\"<GenomeTrackPlot/>\")]),_c('PlotContainer',{attrs:{\"pWidth\":800,\"pHeight\":40,\"pMarginTop\":20,\"pMarginLeft\":20,\"pMarginRight\":20,\"pMarginBottom\":80,\"showDownloadButton\":true}},[_c('GenomeTrackPlot',{attrs:{\"slot\":\"plot\",\"data\":\"rand_genome_data\",\"g\":\"genome\",\"eventColor\":\"#fa0000\",\"lineColor\":\"#DCDCDC\",\"chromosomeVariable\":\"chr\",\"positionVariable\":\"pos\",\"getData\":_vm.getData,\"getScale\":_vm.getScale,\"clickHandler\":_vm.exampleClickHandler},slot:\"plot\"}),_c('GenomeAxis',{attrs:{\"slot\":\"axisBottom\",\"scaleKey\":\"genome\",\"side\":\"bottom\",\"getScale\":_vm.getScale,\"getStack\":_vm.getStack},slot:\"axisBottom\"})],1),_c('h3',[_vm._v(\"<GenomeMultiTrackPlot/>\")]),_c('PlotContainer',{attrs:{\"pWidth\":800,\"pHeight\":700,\"pMarginTop\":20,\"pMarginLeft\":150,\"pMarginRight\":20,\"pMarginBottom\":80,\"showDownloadButton\":true}},[_c('Axis',{attrs:{\"slot\":\"axisLeft\",\"variable\":\"sample_id\",\"side\":\"left\",\"getScale\":_vm.getScale,\"getStack\":_vm.getStack},slot:\"axisLeft\"}),_c('GenomeMultiTrackPlot',{attrs:{\"slot\":\"plot\",\"data\":\"rand_genome_multi_data\",\"g\":\"genome\",\"c\":\"e_type\",\"y\":\"sample_id\",\"lineColor\":\"#DCDCDC\",\"chromosomeVariable\":\"chr\",\"positionVariable\":\"pos\",\"getData\":_vm.getData,\"getScale\":_vm.getScale,\"clickHandler\":_vm.exampleClickHandler},slot:\"plot\"}),_c('GenomeAxis',{attrs:{\"slot\":\"axisBottom\",\"scaleKey\":\"genome\",\"side\":\"bottom\",\"getScale\":_vm.getScale,\"getStack\":_vm.getStack},slot:\"axisBottom\"})],1),_c('h3',[_vm._v(\"<SortOptions/>\")]),_c('SortOptions',{attrs:{\"variable\":\"sample_id\",\"data\":\"exposures_data\",\"optionScale\":\"signature\",\"comparatorScale\":\"exposure\",\"getScale\":_vm.getScale,\"getData\":_vm.getData,\"getStack\":_vm.getStack}}),_c('SortOptions',{attrs:{\"variable\":\"sample_id\",\"data\":\"clinical_data\",\"optionVariable\":\"age\",\"optionName\":\"Age\",\"comparatorScale\":\"age\",\"getScale\":_vm.getScale,\"getData\":_vm.getData,\"getStack\":_vm.getStack}}),_c('h3',[_vm._v(\"<StratifiedBoxPlot/>\")]),_c('PlotContainer',{attrs:{\"pWidth\":500,\"pHeight\":300,\"pMarginTop\":10,\"pMarginLeft\":120,\"pMarginRight\":10,\"pMarginBottom\":180}},[_c('Axis',{attrs:{\"slot\":\"axisLeft\",\"variable\":\"exposure\",\"side\":\"left\",\"tickRotation\":-35,\"getScale\":_vm.getScale,\"getStack\":_vm.getStack},slot:\"axisLeft\"}),_c('StratifiedBoxPlot',{attrs:{\"slot\":\"plot\",\"data\":\"exposures_data\",\"variable\":\"COSMIC 1\",\"s\":\"clinical_data\",\"x\":\"sex\",\"y\":\"exposure\",\"o\":\"sample_id\",\"getData\":_vm.getData,\"getScale\":_vm.getScale,\"clickHandler\":_vm.exampleClickHandler,\"drawOutliers\":true},slot:\"plot\"}),_c('Axis',{attrs:{\"slot\":\"axisBottom\",\"variable\":\"sex\",\"side\":\"bottom\",\"tickRotation\":-65,\"getScale\":_vm.getScale,\"getStack\":_vm.getStack},slot:\"axisBottom\"})],1),_c('h3',[_vm._v(\"<DoubleStratifiedBoxPlot/>\")]),_c('PlotContainer',{attrs:{\"pWidth\":500,\"pHeight\":300,\"pMarginTop\":10,\"pMarginLeft\":120,\"pMarginRight\":10,\"pMarginBottom\":180,\"showDownloadButton\":true}},[_c('Axis',{attrs:{\"slot\":\"axisLeft\",\"variable\":\"exposure\",\"side\":\"left\",\"tickRotation\":-35,\"getScale\":_vm.getScale,\"getStack\":_vm.getStack},slot:\"axisLeft\"}),_c('DoubleStratifiedBoxPlot',{attrs:{\"slot\":\"plot\",\"data\":\"exposures_data\",\"variable\":\"COSMIC 1\",\"s\":\"clinical_data\",\"x\":\"sex\",\"s2\":\"clinical_data\",\"x2\":\"sex\",\"y\":\"exposure\",\"o\":\"sample_id\",\"getData\":_vm.getData,\"getScale\":_vm.getScale,\"clickHandler\":_vm.exampleClickHandler,\"drawOutliers\":true},slot:\"plot\"}),_c('Axis',{attrs:{\"slot\":\"axisBottom\",\"variable\":\"sex\",\"side\":\"bottom\",\"tickRotation\":-65,\"getScale\":_vm.getScale,\"getStack\":_vm.getStack},slot:\"axisBottom\"})],1),_c('h3',[_vm._v(\"<StratifiedSinaPlot/>\")]),_c('PlotContainer',{attrs:{\"pWidth\":500,\"pHeight\":300,\"pMarginTop\":10,\"pMarginLeft\":120,\"pMarginRight\":10,\"pMarginBottom\":180,\"showDownloadButton\":true}},[_c('Axis',{attrs:{\"slot\":\"axisLeft\",\"variable\":\"exposure\",\"side\":\"left\",\"tickRotation\":-35,\"getScale\":_vm.getScale,\"getStack\":_vm.getStack},slot:\"axisLeft\"}),_c('StratifiedSinaPlot',{attrs:{\"slot\":\"plot\",\"data\":\"exposures_data\",\"variable\":\"COSMIC 1\",\"s\":\"clinical_data\",\"x\":\"sex\",\"y\":\"exposure\",\"o\":\"sample_id\",\"getData\":_vm.getData,\"getScale\":_vm.getScale,\"clickHandler\":_vm.exampleClickHandler,\"fillPoints\":true,\"strokeColor\":\"gray\"},slot:\"plot\"}),_c('Axis',{attrs:{\"slot\":\"axisBottom\",\"variable\":\"sex\",\"side\":\"bottom\",\"tickRotation\":-65,\"getScale\":_vm.getScale,\"getStack\":_vm.getStack},slot:\"axisBottom\"})],1),_c('h3',[_vm._v(\"<DoubleStratifiedSinaPlot/>\")]),_c('PlotContainer',{attrs:{\"pWidth\":500,\"pHeight\":300,\"pMarginTop\":10,\"pMarginLeft\":120,\"pMarginRight\":10,\"pMarginBottom\":180,\"showDownloadButton\":true}},[_c('Axis',{attrs:{\"slot\":\"axisLeft\",\"variable\":\"exposure\",\"side\":\"left\",\"tickRotation\":-35,\"getScale\":_vm.getScale,\"getStack\":_vm.getStack},slot:\"axisLeft\"}),_c('DoubleStratifiedSinaPlot',{attrs:{\"slot\":\"plot\",\"data\":\"exposures_data\",\"variable\":\"COSMIC 1\",\"s\":\"clinical_data\",\"x\":\"sex\",\"s2\":\"clinical_data\",\"x2\":\"sex\",\"y\":\"exposure\",\"o\":\"sample_id\",\"getData\":_vm.getData,\"getScale\":_vm.getScale,\"clickHandler\":_vm.exampleClickHandler,\"fillPoints\":true,\"strokeColor\":\"gray\"},slot:\"plot\"}),_c('Axis',{attrs:{\"slot\":\"axisBottom\",\"variable\":\"sex\",\"side\":\"bottom\",\"tickRotation\":-65,\"getScale\":_vm.getScale,\"getStack\":_vm.getStack},slot:\"axisBottom\"})],1),_c('h3',[_vm._v(\"<StratifiedScatterPlot/>\")]),_c('PlotContainer',{attrs:{\"pWidth\":500,\"pHeight\":300,\"pMarginTop\":10,\"pMarginLeft\":120,\"pMarginRight\":10,\"pMarginBottom\":180,\"showDownloadButton\":true}},[_c('Axis',{attrs:{\"slot\":\"axisLeft\",\"variable\":\"exposure\",\"side\":\"left\",\"tickRotation\":-35,\"getScale\":_vm.getScale,\"getStack\":_vm.getStack},slot:\"axisLeft\"}),_c('StratifiedScatterPlot',{attrs:{\"slot\":\"plot\",\"data\":\"exposures_data\",\"variable\":\"COSMIC 1\",\"s\":\"clinical_data\",\"x\":\"age\",\"y\":\"exposure\",\"o\":\"sample_id\",\"fillPoints\":true,\"strokeColor\":\"gray\",\"getData\":_vm.getData,\"getScale\":_vm.getScale,\"clickHandler\":_vm.exampleClickHandler},slot:\"plot\"}),_c('Axis',{attrs:{\"slot\":\"axisBottom\",\"variable\":\"age\",\"side\":\"bottom\",\"getScale\":_vm.getScale,\"getStack\":_vm.getStack},slot:\"axisBottom\"})],1),_c('h3',[_vm._v(\"<DoubleStratifiedScatterPlot/>\")]),_c('PlotContainer',{attrs:{\"pWidth\":500,\"pHeight\":300,\"pMarginTop\":10,\"pMarginLeft\":120,\"pMarginRight\":10,\"pMarginBottom\":180,\"showDownloadButton\":true}},[_c('Axis',{attrs:{\"slot\":\"axisLeft\",\"variable\":\"exposure\",\"side\":\"left\",\"tickRotation\":-35,\"getScale\":_vm.getScale,\"getStack\":_vm.getStack},slot:\"axisLeft\"}),_c('DoubleStratifiedScatterPlot',{attrs:{\"slot\":\"plot\",\"data\":\"exposures_data\",\"variable\":\"COSMIC 1\",\"s\":\"clinical_data\",\"x\":\"age\",\"s2\":\"clinical_data\",\"x2\":\"sex\",\"y\":\"exposure\",\"o\":\"sample_id\",\"fillPoints\":true,\"strokeColor\":\"gray\",\"getData\":_vm.getData,\"getScale\":_vm.getScale,\"clickHandler\":_vm.exampleClickHandler},slot:\"plot\"}),_c('Axis',{attrs:{\"slot\":\"axisBottom\",\"variable\":\"age\",\"side\":\"bottom\",\"getScale\":_vm.getScale,\"getStack\":_vm.getStack},slot:\"axisBottom\"})],1),_c('h3',[_vm._v(\"<RectPlot/>\")]),_c('PlotContainer',{attrs:{\"pWidth\":50,\"pHeight\":30,\"pMarginTop\":5,\"pMarginLeft\":40,\"pMarginRight\":40,\"pMarginBottom\":50,\"showDownloadButton\":true}},[_c('RectPlot',{attrs:{\"slot\":\"plot\",\"data\":\"clinical_data\",\"z\":\"sample_id\",\"o\":\"SA569315\",\"c\":\"age\",\"getData\":_vm.getData,\"getScale\":_vm.getScale,\"clickHandler\":_vm.exampleClickHandler},slot:\"plot\"})],1),_c('h3',[_vm._v(\"<MultiDataRectPlot/> with value labels\")]),_c('PlotContainer',{attrs:{\"pWidth\":200,\"pHeight\":60,\"pMarginTop\":5,\"pMarginLeft\":100,\"pMarginRight\":40,\"pMarginBottom\":50,\"showDownloadButton\":true}},[_c('Axis',{attrs:{\"slot\":\"axisLeft\",\"variable\":\"multi_rect_plot_scale\",\"side\":\"left\",\"disableBrushing\":true,\"tickRotation\":0,\"getScale\":_vm.getScale,\"getStack\":_vm.getStack},slot:\"axisLeft\"}),_c('MultiDataRectPlot',{attrs:{\"slot\":\"plot\",\"dataArray\":['clinical_data', 'clinical_data'],\"cArray\":['age', 'sex'],\"z\":\"sample_id\",\"o\":\"SA569952\",\"disableText\":false,\"disableTooltip\":true,\"rectSize\":30,\"textSize\":14,\"textColor\":\"#2c3e50\",\"getData\":_vm.getData,\"getScale\":_vm.getScale,\"clickHandler\":_vm.exampleClickHandler},slot:\"plot\"})],1),_c('h3',[_vm._v(\"<MultiDataTrackPlot/>\")]),_c('PlotContainer',{attrs:{\"pWidth\":700,\"pHeight\":60,\"pMarginTop\":10,\"pMarginLeft\":100,\"pMarginRight\":10,\"pMarginBottom\":180,\"showDownloadButton\":true}},[_c('Axis',{attrs:{\"slot\":\"axisLeft\",\"variable\":\"multi_rect_plot_scale\",\"side\":\"left\",\"disableBrushing\":true,\"tickRotation\":0,\"getScale\":_vm.getScale,\"getStack\":_vm.getStack},slot:\"axisLeft\"}),_c('MultiDataTrackPlot',{attrs:{\"slot\":\"plot\",\"dataArray\":['clinical_data', 'clinical_data'],\"cArray\":['age', 'sex'],\"x\":\"sample_id\",\"getData\":_vm.getData,\"getScale\":_vm.getScale,\"clickHandler\":_vm.exampleClickHandler},slot:\"plot\"}),_c('Axis',{attrs:{\"slot\":\"axisBottom\",\"variable\":\"sample_id\",\"side\":\"bottom\",\"tickRotation\":-65,\"getScale\":_vm.getScale,\"getStack\":_vm.getStack},slot:\"axisBottom\"})],1),_c('h3',[_vm._v(\"<StratifiedKaplanMeierPlot/>\")]),_c('PlotContainer',{attrs:{\"pWidth\":500,\"pHeight\":300,\"pMarginTop\":10,\"pMarginLeft\":120,\"pMarginRight\":10,\"pMarginBottom\":180,\"showDownloadButton\":true}},[_c('Axis',{attrs:{\"slot\":\"axisLeft\",\"variable\":\"survival_pct\",\"side\":\"left\",\"tickRotation\":-35,\"getScale\":_vm.getScale,\"getStack\":_vm.getStack},slot:\"axisLeft\"}),_c('StratifiedKaplanMeierPlot',{attrs:{\"slot\":\"plot\",\"data\":\"survival_data\",\"deathVariable\":\"Days to Death\",\"followupVariable\":\"Days to Last Followup\",\"s\":\"survival_data\",\"c\":\"sex\",\"variable\":\"Sex\",\"x\":\"survival_time\",\"y\":\"survival_pct\",\"o\":\"survival_patient\",\"getData\":_vm.getData,\"getScale\":_vm.getScale,\"clickHandler\":_vm.exampleClickHandler},slot:\"plot\"}),_c('Axis',{attrs:{\"slot\":\"axisBottom\",\"variable\":\"survival_time\",\"side\":\"bottom\",\"getScale\":_vm.getScale,\"getStack\":_vm.getStack},slot:\"axisBottom\"})],1),_c('h3',[_vm._v(\"<CountBarPlot/>\")]),_c('PlotContainer',{attrs:{\"pWidth\":500,\"pHeight\":300,\"pMarginTop\":10,\"pMarginLeft\":120,\"pMarginRight\":10,\"pMarginBottom\":180}},[_c('Axis',{attrs:{\"slot\":\"axisLeft\",\"variable\":\"num_samples\",\"side\":\"left\",\"tickRotation\":-35,\"getScale\":_vm.getScale,\"getStack\":_vm.getStack},slot:\"axisLeft\"}),_c('CountBarPlot',{attrs:{\"slot\":\"plot\",\"data\":\"exposures_data\",\"x\":\"signature\",\"y\":\"num_samples\",\"o\":\"sample_id\",\"filterFunction\":_vm.countBarPlotFilterFunction,\"getData\":_vm.getData,\"getScale\":_vm.getScale,\"clickHandler\":_vm.exampleClickHandler},slot:\"plot\"}),_c('Axis',{attrs:{\"slot\":\"axisBottom\",\"variable\":\"signature\",\"side\":\"bottom\",\"tickRotation\":-65,\"getScale\":_vm.getScale,\"getStack\":_vm.getStack},slot:\"axisBottom\"})],1),_c('h3',[_vm._v(\"v-if\")]),_c('button',{on:{\"click\":function($event){_vm.togglePlot = !_vm.togglePlot}}},[_vm._v(\"Toggle Plot\")]),(_vm.togglePlot)?_c('PlotContainer',{attrs:{\"pWidth\":500,\"pHeight\":300,\"pMarginTop\":10,\"pMarginLeft\":120,\"pMarginRight\":10,\"pMarginBottom\":180}},[_c('Axis',{attrs:{\"slot\":\"axisLeft\",\"variable\":\"exposure\",\"side\":\"left\",\"tickRotation\":-35,\"getScale\":_vm.getScale,\"getStack\":_vm.getStack},slot:\"axisLeft\"}),_c('StratifiedBoxPlot',{attrs:{\"slot\":\"plot\",\"data\":\"exposures_data\",\"variable\":\"COSMIC 1\",\"s\":\"clinical_data\",\"x\":\"sex\",\"y\":\"exposure\",\"o\":\"sample_id\",\"getData\":_vm.getData,\"getScale\":_vm.getScale,\"clickHandler\":_vm.exampleClickHandler,\"drawOutliers\":true},slot:\"plot\"}),_c('Axis',{attrs:{\"slot\":\"axisBottom\",\"variable\":\"sex\",\"side\":\"bottom\",\"tickRotation\":-65,\"getScale\":_vm.getScale,\"getStack\":_vm.getStack},slot:\"axisBottom\"})],1):_vm._e(),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.showStack),expression:\"showStack\"}],staticClass:\"stack-wrapper\"},[_c('h3',[_vm._v(\"<Stack/>\")]),_c('Stack',{attrs:{\"getStack\":_vm.getStack}})],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","/*\n * Icons by iconmonstr\n * https://iconmonstr.com/\n */\nexport const COLOR_PICKER_PATH = \"M18.717 8.831c-.734.824-.665 2.087.158 2.825l-1.333 1.491-7.455-6.667 1.334-1.49c.822.736 2.087.666 2.822-.159l3.503-3.831c.593-.663 1.414-1 2.238-1 1.666 0 3.016 1.358 3.016 2.996 0 .723-.271 1.435-.779 2.005l-3.504 3.83zm-8.217 6.169h-2.691l3.928-4.362-1.491-1.333-7.9 8.794c-1.277 1.423-.171 2.261-1.149 4.052-.135.244-.197.48-.197.698 0 .661.54 1.151 1.141 1.151.241 0 .492-.079.724-.256 1.733-1.332 2.644-.184 3.954-1.647l7.901-8.792-1.491-1.333-2.729 3.028z\";\n\nexport const EYE_PATH = \"M12.015 7c4.751 0 8.063 3.012 9.504 4.636-1.401 1.837-4.713 5.364-9.504 5.364-4.42 0-7.93-3.536-9.478-5.407 1.493-1.647 4.817-4.593 9.478-4.593zm0-2c-7.569 0-12.015 6.551-12.015 6.551s4.835 7.449 12.015 7.449c7.733 0 11.985-7.449 11.985-7.449s-4.291-6.551-11.985-6.551zm-.015 3c-2.209 0-4 1.792-4 4 0 2.209 1.791 4 4 4s4-1.791 4-4c0-2.208-1.791-4-4-4z\";\n\nexport const EYE_DISABLED_PATH = \"M19.604 2.562l-3.346 3.137c-1.27-.428-2.686-.699-4.243-.699-7.569 0-12.015 6.551-12.015 6.551s1.928 2.951 5.146 5.138l-2.911 2.909 1.414 1.414 17.37-17.035-1.415-1.415zm-6.016 5.779c-3.288-1.453-6.681 1.908-5.265 5.206l-1.726 1.707c-1.814-1.16-3.225-2.65-4.06-3.66 1.493-1.648 4.817-4.594 9.478-4.594.927 0 1.796.119 2.61.315l-1.037 1.026zm-2.883 7.431l5.09-4.993c1.017 3.111-2.003 6.067-5.09 4.993zm13.295-4.221s-4.252 7.449-11.985 7.449c-1.379 0-2.662-.291-3.851-.737l1.614-1.583c.715.193 1.458.32 2.237.32 4.791 0 8.104-3.527 9.504-5.364-.729-.822-1.956-1.99-3.587-2.952l1.489-1.46c2.982 1.9 4.579 4.327 4.579 4.327z\";\n\nexport const PAINT_BUCKET_PATH = \"M21.143 9.667c-.733-1.392-1.914-3.05-3.617-4.753-2.977-2.978-5.478-3.914-6.785-3.914-.414 0-.708.094-.86.246l-1.361 1.36c-1.899-.236-3.42.106-4.294.983-.876.875-1.164 2.159-.792 3.523.492 1.806 2.305 4.049 5.905 5.375.038.323.157.638.405.885.588.588 1.535.586 2.121 0s.588-1.533.002-2.119c-.588-.587-1.537-.588-2.123-.001l-.17.256c-2.031-.765-3.395-1.828-4.232-2.9l3.879-3.875c.496 2.73 6.432 8.676 9.178 9.178l-7.115 7.107c-.234.153-2.798-.316-6.156-3.675-3.393-3.393-3.175-5.271-3.027-5.498l1.859-1.856c-.439-.359-.925-1.103-1.141-1.689l-2.134 2.131c-.445.446-.685 1.064-.685 1.82 0 1.634 1.121 3.915 3.713 6.506 2.764 2.764 5.58 4.243 7.432 4.243.648 0 1.18-.195 1.547-.562l8.086-8.078c.91.874-.778 3.538-.778 4.648 0 1.104.896 1.999 2 1.999 1.105 0 2-.896 2-2 0-3.184-1.425-6.81-2.857-9.34zm-16.209-5.371c.527-.53 1.471-.791 2.656-.761l-3.209 3.206c-.236-.978-.049-1.845.553-2.445zm9.292 4.079l-.03-.029c-1.292-1.292-3.803-4.356-3.096-5.063.715-.715 3.488 1.521 5.062 3.096.862.862 2.088 2.247 2.937 3.458-1.717-1.074-3.491-1.469-4.873-1.462z\";\n\nexport const DOWNLOAD_PATH = \"M12 21l-8-9h6v-12h4v12h6l-8 9zm9-1v2h-18v-2h-2v4h22v-4h-2z\";","import { Delaunay } from 'd3-delaunay';\n\n/**\n * Get the retina ratio to be able to scale up a canvas context.\n * @private\n * @param {context} c The canvas context.\n * @returns {float} The ratio.\n */\nexport const getRetinaRatio = function(c) {\n    let devicePixelRatio = window.devicePixelRatio || 1;\n    let backingStoreRatio = [\n        c.webkitBackingStorePixelRatio,\n        c.mozBackingStorePixelRatio,\n        c.msBackingStorePixelRatio,\n        c.oBackingStorePixelRatio,\n        c.backingStorePixelRatio,\n        1\n    ].reduce(function(a, b) { return a || b });\n\n    return devicePixelRatio / backingStoreRatio;\n}\n\n/**\n * Filters a hierarchy based on a scale's filtered domain values.\n * @private\n * @param {object} data The object containing the full hierarchy.\n * @param {array} domainFiltered The domain used to filter the nodes.\n * @returns {object} The filtered hierarchy object.\n */\nexport const filterHierarchy = (data, domainFiltered) => {\n    const filterNode = (node) => {\n        if(node.children.length === 0) {\n            if(domainFiltered.includes(node.name)) {\n                return node;\n            } else {\n                return undefined;\n            }\n        } else {\n            let newChildren = [];\n            for(let child of node.children) {\n                let newChild = filterNode(child);\n                if(newChild !== undefined) {\n                    newChildren.push(newChild);\n                }\n            }\n            if(newChildren.length > 0) {\n                return {name: node.name, children: newChildren};\n            } else {\n                return undefined;\n            }\n        }\n    };\n    return filterNode(data);\n};\n\n/**\n * Returns a delaunay \"implementation\" that works around the\n * current bugs in the d3-delaunay package.\n * @private\n * @param {array} points array of xy points as arrays [[x,y], [x,y], ...]\n * @param {boolean} randomness Whether or not to inject randomness into points to work around d3-delaunay colinearity issue\n * @returns {object} The delaunay object with find(x,y) method\n */\nexport const getDelaunay = (points, randomness) => {\n    if(randomness) {\n        points = points.map((el) => [el[0] + Math.random()*0.0001, el[1] + Math.random()*0.0001]);\n    }\n    points = points.filter((el) => (!Number.isNaN(el[0]) && !Number.isNaN(el[1])));\n    if(points.length > 2) {\n        return Delaunay.from(points);\n    } else if(points.length == 2) {\n        return {\n            find: (x, y) => {\n                let d0 = Math.sqrt(Math.pow((points[0][0] - x), 2) + Math.pow((points[0][1] - y), 2));\n                let d1 = Math.sqrt(Math.pow((points[1][0] - x), 2) + Math.pow((points[1][1] - y), 2));\n                if(d0 < d1) {\n                    return 0;\n                } else {\n                    return 1;\n                }\n            }\n        }\n    } else if(points.length == 1) {\n        return {\n            find: () => {\n                return 0;\n            }\n        }\n    } else {\n        return {\n            find: () => {\n                return undefined;\n            }\n        }\n    }\n\n}\n\n/**\n * Generate seeded random numbers, e.g. for jitter plot\n * @param {number} seed The seed.\n * @returns {function} The random number generator function.\n */\nexport const seededRandom = (seed) => {\n    // Adapted from this StackOverflow answer https://stackoverflow.com/a/19303725\n    // Note: not a high-quality random number generator, just a quick and dirty one\n    let internalSeed = seed;\n    return () => {\n        var x = Math.sin(internalSeed++) * 10000;\n        return x - Math.floor(x);\n    }\n}\n\n/**\n * Given an SVG DOM node, return the SVG contents as a data URI that can be saved to a file.\n * @private\n * @param {any} svg The SVG node.\n * @returns {string}\n */\nexport const svgToUri = (svg) => {\n    // Reference: https://stackoverflow.com/a/23218877\n    const serializer = new XMLSerializer();\n    var source = serializer.serializeToString(svg);\n\n    // Add namespace.\n    if(!source.match(/^<svg[^>]+xmlns=\"http\\:\\/\\/www\\.w3\\.org\\/2000\\/svg\"/)){\n        source = source.replace(/^<svg/, '<svg xmlns=\"http://www.w3.org/2000/svg\"');\n    }\n    if(!source.match(/^<svg[^>]+\"http\\:\\/\\/www\\.w3\\.org\\/1999\\/xlink\"/)){\n        source = source.replace(/^<svg/, '<svg xmlns:xlink=\"http://www.w3.org/1999/xlink\"');\n    }\n\n    // Add xml declaration.\n    source = '<?xml version=\"1.0\" standalone=\"no\"?>\\r\\n' + source;\n\n    // Convert svg source to URI.\n    //return \"data:image/svg+xml;charset=utf-8,\" + encodeURIComponent(source);\n    return source;\n};\n\n/**\n * Save an SVG object to a file.\n * @private\n * @param {any} svg The SVG as a D3 object.\n */\nexport const downloadSvg = (svg, fileName) => {\n    const svgContent = svgToUri(svg.node());\n    const blob = new Blob([svgContent], {'type': 'image/svg+xml'});\n\n    const url = URL.createObjectURL(blob);\n    const downloadAnchorNode = document.createElement('a');\n    downloadAnchorNode.setAttribute(\"href\", url);\n    downloadAnchorNode.setAttribute(\"download\", `${fileName}.svg`);\n    document.body.appendChild(downloadAnchorNode); // required for firefox\n    downloadAnchorNode.click();\n    downloadAnchorNode.remove();\n};\n","<script>\nimport { create as d3_create, event as d3_event } from 'd3';\nimport { select as d3_select } from 'd3-selection';\nimport { drag as d3_drag } from 'd3-drag';\n\nimport { DOWNLOAD_PATH } from './../icons.js';\nimport { downloadSvg } from './../helpers.js';\n\n\n/**\n * Function that takes in array of VNodes and adds props from a provided props object.\n * @private\n * @param {array} slotArray Array of named slot VNodes.\n * @param {object} newProps Object mapping prop keys to values.\n * @return {array} The updated array of VNode with the added props.\n */\nconst addProp = function(slotArray, newProps) {\n    if (slotArray) {\n        slotArray = slotArray.map((vnode) => {\n            if (vnode.componentOptions && vnode.componentOptions.propsData) {\n                const newNode = vnode;\n                for(let propName of Object.keys(newProps)) {\n                    newNode.componentOptions.propsData[propName] = newProps[propName];\n                }\n                return newNode;\n            }\n            return vnode;\n        });\n        return slotArray\n    }\n    return [];\n}\n\n/**\n * Returns a uuid string.\n * Reference: https://stackoverflow.com/a/2117523\n * @private\n * @return {string}\n */\nconst uuidv4 = function() {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n    var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n  });\n}\n\n\n/**\n * This component is a container for axis and plot components, \n * which passes its props to its children and imposes styles.\n * @prop {number} pWidth The plot width.\n * @prop {number} pHeight The plot height.\n * @prop {number} pMarginTop The plot top margin.\n * @prop {number} pMarginLeft The plot left margin.\n * @prop {number} pMarginRight The plot right margin.\n * @prop {number} pMarginBottom The plot bottom margin.\n * @prop {boolean} showDownloadButton Show a download button (in top left corner). Optional. Default: false.\n * @prop {number} downloadButtonOffsetX x-offset of the download button. Optional. Only makes sense to use if showDownloadButton is true.\n * @prop {number} downloadButtonOffsetY y-offset of the download button. Optional. Only makes sense to use if showDownloadButton is true.\n * @prop {number} downloadButtonSize size of the download button. Optional. Default: 16. Only makes sense to use if showDownloadButton is true.\n * @prop {string} downloadButtonFill color of the download button. Optional. Default: \"#C0C0C0\". Only makes sense to use if showDownloadButton is true.\n * \n * @example\n * <PlotContainer\n *    :pWidth=\"500\"\n *    :pHeight=\"300\"\n *    :pMarginTop=\"10\"\n *    :pMarginLeft=\"120\"\n *    :pMarginRight=\"10\"\n *    :pMarginBottom=\"150\"\n *  >\n *    <Axis\n *      slot=\"axisLeft\" <!-- note the slot prop -->\n *      variable=\"exposure\"\n *      side=\"left\" \n *      :tickRotation=\"-35\"\n *      :getScale=\"getScale\"\n *      :getStack=\"getStack\"\n *      <!-- note the axis props that are omitted because they are being inherited -->\n *    />\n *    <BarPlot\n *      slot=\"plot\" <!-- note the slot prop -->\n *      data=\"exposures_single_data\"\n *      x=\"signature\" \n *      y=\"exposure\"\n *      :getData=\"getData\"\n *      :getScale=\"getScale\"\n *      <!-- note the plot props that are omitted because they are being inherited -->\n *    />\n *    <Axis\n *      slot=\"axisBottom\" <!-- note the slot prop -->\n *      variable=\"signature\"\n *      side=\"bottom\" \n *      :tickRotation=\"-65\"\n *      :getScale=\"getScale\"\n *      :getStack=\"getStack\"\n *      :disableBrushing=\"true\"\n *      <!-- note the axis props that are omitted because they are being inherited -->\n *    />\n *  </PlotContainer>\n */\nexport default {\n    name: 'PlotContainer',\n    props: {\n        'pWidth': {\n            type: Number\n        },\n        'pHeight': {\n            type: Number\n        },\n        'pMarginTop': {\n            type: Number\n        },\n        'pMarginLeft': {\n            type: Number\n        },\n        'pMarginRight': {\n            type: Number\n        },\n        'pMarginBottom': {\n            type: Number\n        },\n        'showDownloadButton': {\n            type: Boolean,\n            default: false\n        },\n        'downloadButtonOffsetX': {\n            type: Number,\n            default: 0\n        },\n        'downloadButtonOffsetY': {\n            type: Number,\n            default: 0\n        },\n        'downloadButtonSize': {\n            type: Number,\n            default: 16\n        },\n        'downloadButtonFill': {\n            type: String,\n            default: \"#C0C0C0\"\n        },\n        'downloadName': {\n            type: String,\n            default: \"plot\"\n        },\n        'showResizeButton': {\n            type: Boolean,\n            default: false\n        },\n        'resizeButtonSize': {\n            type: Number,\n            default: 16\n        },\n        'resizeButtonColor': {\n            type: String,\n            default: \"gray\"\n        },\n    },\n    data() {\n        return {\n            initialKey: 1,\n            initialY: 0,\n            offsetY: 0,\n        };\n    },\n    mounted() {\n        this.initResizeButton();\n    },\n    render(h) {\n        const props = Object.assign({}, this.$props);\n        props[\"pHeight\"] = this.pHeight + this.offsetY;\n\n        this.$slots.axisTop = addProp(this.$slots.axisTop, props);\n        this.$slots.axisLeft = addProp(this.$slots.axisLeft, props);\n        this.$slots.plot = addProp(this.$slots.plot, props);\n        this.$slots.axisRight = addProp(this.$slots.axisRight, props);\n        this.$slots.axisBottom = addProp(this.$slots.axisBottom, props);\n\n        const buttonChildren = [];\n        if(this.showDownloadButton) {\n            buttonChildren.push(h('svg', \n                { \n                    key: `dl-btn-${this.initialKey}`,\n                    class: 'vdp-plot-container-dl-btn', \n                    attrs: {\n                        'width': this.downloadButtonSize, \n                        'height': this.downloadButtonSize, \n                        'viewBox': '0 0 24 24'\n                    }, \n                    style: {\n                        'top': (this.downloadButtonOffsetY + 'px'), \n                        'left': (this.downloadButtonOffsetX + 'px')\n                    }, \n                    on: { click: ()=>{this.downloadViaButton();} } \n                }, \n                [h('path', {attrs: {'d': DOWNLOAD_PATH, 'fill': this.downloadButtonFill }})]\n            ));\n        }\n        if(this.showResizeButton) {\n            buttonChildren.push(h('svg', \n                { \n                    ref: 'resizeButton',\n                    class: 'vdp-plot-container-rs-btn', \n                    attrs: {\n                        'width': this.resizeButtonSize, \n                        'height': this.resizeButtonSize, \n                        'viewBox': '0 0 24 24'\n                    }, \n                    style: {\n                        'left': ((this.pMarginLeft + this.pWidth + this.pMarginRight - this.resizeButtonSize) + 'px'),\n                        'top': ((this.pMarginTop + props[\"pHeight\"] + this.pMarginBottom - this.resizeButtonSize) + 'px'),\n                    }\n                }, \n                [\n                    h('line', {attrs: {\n                        'x1': 0,\n                        'y1': 26,\n                        'x2': 26,\n                        'y2': 0,\n                        'stroke': this.resizeButtonColor, \n                        'stroke-width': 1 \n                    }}),\n                    h('line', {attrs: {\n                        'x1': 0,\n                        'y1': 32,\n                        'x2': 32,\n                        'y2': 0,\n                        'stroke': this.resizeButtonColor, \n                        'stroke-width': 1 \n                    }}),\n                    h('line', {attrs: {\n                        'x1': 0,\n                        'y1': 38,\n                        'x2': 38,\n                        'y2': 0,\n                        'stroke': this.resizeButtonColor, \n                        'stroke-width': 1 \n                    }}),\n                    h('line', {attrs: {\n                        'x1': 0,\n                        'y1': 44,\n                        'x2': 44,\n                        'y2': 0,\n                        'stroke': this.resizeButtonColor, \n                        'stroke-width': 1 \n                    }})\n                ]\n            ));\n        }\n        \n        const children = ([]).concat(\n            h('div', { key: `axisTop-${this.initialKey}` }, [ this.$slots.axisTop ]), \n            h('div', { key: `axisLeft-${this.initialKey}` }, [ this.$slots.axisLeft ]),\n            h('div', { key: `plot-${this.initialKey}` }, [ this.$slots.plot ]),\n            h('div', { key: `axisRight-${this.initialKey}` }, [ this.$slots.axisRight ]),\n            h('div', { key: `axisBottom-${this.initialKey}` }, [ this.$slots.axisBottom ]),\n            h('div', { key: `buttons-${this.initialKey}` }, buttonChildren)\n        );  \n\n        let classes = ['vdp-plot-container'];\n        let styles = {\n            width: this.fullWidth + 'px',\n            height: this.fullHeight + 'px'\n        };\n\n        this.$nextTick(this.initResizeButton);\n\n        return h('div', { class: classes, style: styles }, children);\n    },\n    computed: {\n        fullWidth() {\n            return this.pMarginLeft + this.pWidth + this.pMarginRight;\n        },\n        fullHeight() {\n            return this.pMarginTop + this.pHeight + this.offsetY + this.pMarginBottom;\n        }\n    },\n    watch: {\n        pWidth() {\n            this.initialKey++;\n        },\n        pHeight() {\n            this.initialKey++;\n        },\n        pMarginTop() {\n            this.initialKey++;\n        },\n        pMarginLeft() {\n            this.initialKey++;\n        },\n        pMarginRight() {\n            this.initialKey++;\n        },\n        pMarginBottom() {\n            this.initialKey++;\n        }\n    },\n    methods: {\n        downloadViaButton() {\n            const svg = this.download();\n            downloadSvg(svg, this.downloadName);\n        },\n        initResizeButton() {\n            if(this.showResizeButton) {\n                if(this.$refs.resizeButton) {\n                    const resizeDiv = d3_select(this.$refs.resizeButton);\n                    resizeDiv.call(\n                        d3_drag()\n                            .on(\"start\", () => {\n                                this.dragState = 0;\n                                this.initialY = d3_event.sourceEvent.pageY - this.offsetY;\n                                this.initialKey++;\n                            })\n                            .on(\"drag\", () => {\n                                this.offsetY = Math.max(-this.pHeight, d3_event.sourceEvent.pageY - this.initialY);\n                                this.initialKey++;\n                            })\n                            .on(\"end\", () => {\n                                this.initialY = d3_event.sourceEvent.pageY;\n                                this.initialKey++;\n                            })\n                    );\n                }\n            }\n        },\n        download() {\n            const pHeight = this.pHeight + this.offsetY;\n\n            const svg = d3_create(\"svg\")\n                .attr(\"width\", this.fullWidth)\n                .attr(\"height\", this.fullHeight)\n                .attr(\"viewBox\", `0 0 ${this.fullWidth} ${this.fullHeight}`);\n            \n            const defs = svg\n                .append(\"defs\");\n            \n            const renderAxisToContext = (axisType) => {\n                if(this.$slots[axisType].length > 0) {\n                    try {\n                        this.$slots[axisType][0].componentInstance.pHeight = pHeight;\n                        this.$slots.plot[0].componentInstance.pHeight = pHeight;\n                    } catch(e) {\n                        console.log(e);\n                    }\n\n                    const x = this.$slots[axisType][0].componentInstance.computedLeft;\n                    let y = this.$slots[axisType][0].componentInstance.computedTop;\n                    const width = this.$slots[axisType][0].componentInstance.computedWidth;\n                    let height = this.$slots[axisType][0].componentInstance.computedHeight\n                    \n                    if(axisType === \"axisLeft\" || axisType === \"axisRight\") {\n                        height += this.offsetY;\n                    }\n                    if(axisType === \"axisBottom\") {\n                        y += this.offsetY;\n                    }\n\n                    const clipPathUid = uuidv4();\n                    defs\n                        .append(\"clipPath\")\n                            .attr(\"id\", `cp-${clipPathUid}`)\n                        .append(\"rect\")\n                            .attr(\"width\", width)\n                            .attr(\"height\", height);\n\n                    const axisSvg = d3_create(\"svg\")\n                        .attr(\"width\", width)\n                        .attr(\"height\", height);\n\n                    this.$slots[axisType][0].componentInstance.drawAxis(axisSvg, true);\n                    this.$slots[axisType][0].componentInstance.drawAxis();\n\n                    const axisG = svg\n                        .append(\"g\")\n                            .attr(\"class\", `download-g-${axisType}`)\n                            .attr(\"width\", width)\n                            .attr(\"height\", height)\n                            .attr(\"transform\", `translate(${x},${y})`)\n                            .attr(\"clip-path\", `url(#cp-${clipPathUid})`);\n                    \n                    axisG.html(axisSvg.node().innerHTML);\n                }\n            };\n\n            const renderPlotToContext = () => {\n                if(this.$slots.plot.length > 0) {\n                    try {\n                        this.$slots.plot[0].componentInstance.pHeight = pHeight;\n                    } catch(e) {\n                        console.log(e);\n                    }\n\n                    const x = this.pMarginLeft;\n                    const y = this.pMarginTop;\n                    const width = this.pWidth;\n                    const height = pHeight;\n\n                    const clipPathUid = uuidv4();\n                    defs\n                        .append(\"clipPath\")\n                            .attr(\"id\", `cp-${clipPathUid}`)\n                        .append(\"rect\")\n                            .attr(\"width\", width)\n                            .attr(\"height\", height);\n\n                    const plotSvg = d3_create(\"svg\")\n                        .attr(\"width\", width)\n                        .attr(\"height\", height);\n                    \n                    this.$slots.plot[0].componentInstance.drawPlot(plotSvg);\n                    this.$slots.plot[0].componentInstance.drawPlot();\n\n                    const plotG = svg\n                        .append(\"g\")\n                            .attr(\"class\", `download-g-plot`)\n                            .attr(\"width\", width)\n                            .attr(\"height\", height)\n                            .attr(\"transform\", `translate(${x},${y})`)\n                            .attr(\"clip-path\", `url(#cp-${clipPathUid})`);\n                    plotG.html(plotSvg.node().innerHTML);\n                }\n            };\n            \n            renderAxisToContext(\"axisTop\");\n            renderAxisToContext(\"axisLeft\");\n            renderPlotToContext();\n            renderAxisToContext(\"axisRight\");\n            renderAxisToContext(\"axisBottom\");\n\n            return svg;\n        }\n    }\n}\n</script>\n\n<style>\n.vdp-plot-container {\n    position: relative;\n    \n}\n.vdp-plot-container .vdp-plot-container-dl-btn {\n    position: absolute;\n    cursor: pointer;\n}\n\n.vdp-plot-container .vdp-plot-container-rs-btn {\n    position: absolute;\n    cursor: ns-resize;\n}\n</style>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PlotContainer.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PlotContainer.vue?vue&type=script&lang=js&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_vm._v(\"\\n    Sort \"),_c('em',[_vm._v(_vm._s(_vm.getScale(_vm.variable).name))]),_vm._v(\" by \"),_c('em',[_vm._v(_vm._s(_vm.getData(_vm.data).name))]),_vm._v(\" data\\n    \"),_c('span',[_vm._v(\"\\n        on\\n        \"),(_vm.hasOptionScale)?_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.selectedKey),expression:\"selectedKey\"}],on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.selectedKey=$event.target.multiple ? $$selectedVal : $$selectedVal[0]}}},[_c('option',{attrs:{\"disabled\":\"\",\"value\":\"\"}},[_vm._v(\"Please select one\")]),_vm._l((_vm.sortVarKeys),function(sortVarKey){return _c('option',{key:sortVarKey,domProps:{\"value\":sortVarKey}},[_vm._v(\"\\n                \"+_vm._s(_vm._optionScale.toHuman(sortVarKey))+\"\\n            \")])})],2):_vm._e(),(!_vm.hasOptionScale)?_c('span',[_c('em',[_vm._v(_vm._s(_vm.optionName))])]):_vm._e(),_vm._v(\"\\n         \\n    \")]),_c('span',[_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.sortAscending),expression:\"sortAscending\"}],on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.sortAscending=$event.target.multiple ? $$selectedVal : $$selectedVal[0]}}},[_c('option',{domProps:{\"value\":true}},[_vm._v(\"Ascending\")]),_c('option',{domProps:{\"value\":false}},[_vm._v(\"Descending\")])]),_vm._v(\"\\n         \\n    \")]),_c('button',{attrs:{\"disabled\":!_vm.validSelection(_vm.selectedKey)},on:{\"click\":_vm.go}},[_vm._v(\"Go\")])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","/**\n * Represents a single event in the application's history.\n * Given an event type, ID, action, and parameters,\n * the event will be able to be executed in the following way:\n * - the history stack will use the type (e.g. SCALE) to identify a function that it knows about (e.g. getScale)\n * - the event-type-specific function will be called using the provided ID (e.g. getScale(ID) ), which will return an object\n * - the function specified by `action` will be invoked on the returned object, using the array of params as parameters\n */\nexport default class HistoryEvent {\n\n    /**\n     * \n     * @param {number} type Event type, such as SCALE, etc...\n     * @param {number} subtype Event subtype, such as SCALE_DOMAIN, etc...\n     * @param {string} id Event identifier, used for history\n     * @param {string} action Method to call on the object.\n     * @param {array} params Parameters with which to call the method.\n     */\n    constructor(type, subtype, id, action, params) {\n        this._type = type;\n        this._subtype = subtype;\n        this._id = id;\n        this._action = action;\n        this._params = params || [];\n    }\n\n    /**\n     * @returns {number} The event type.\n     */\n    get type() {\n        return this._type;\n    }\n\n    /**\n     * @returns {number} The event subtype.\n     */\n    get subtype() {\n        return this._subtype;\n    }\n\n    /**\n     * @returns {string} The event identifier.\n     */\n    get id() { \n        return this._id;\n    }\n\n    /**\n     * @returns {string} The name of the method to call on the target object.\n     */\n    get action() {\n        return this._action;\n    }\n\n    /**\n     * @returns {array} The params to pass to the method specified by `action`.\n     */\n    get params() {\n        return this._params;\n    }\n\n    /**\n     * \n     * @param {HistoryEvent} event Another history event.\n     * @returns {boolean} Whether the other history event is related to this.\n     */\n    isRelated(event) {\n        return (event._type === this._type && event._subtype === this._subtype && event._id === this._id);\n    } \n\n    /**\n     * @returns {object} JSON representation of the event.\n     */\n    toJson() {\n        return {\n            \"type\": this._type,\n            \"subtype\": this._subtype,\n            \"id\": this._id,\n            \"action\": this._action,\n            \"params\": this._params\n        }\n    }\n}","import HistoryEvent from './HistoryEvent.js';\n\nconst VDP_COMPUTED_PARAM = \"$vdp_vfg\";\nconst GETTER_FUNCTION_KEY = \"gfk\";\nconst GETTER_PARAMS = \"gp\";\n\n/**\n * Returns an object that represents a \"computed\" history event parameter.\n * @param {int} getterFunctionKey Key of function to be called (match to getterFunctionMapping passed to HistoryStack).\n * @param {array} getterParams Params passed to the function to be called.\n * @returns {object} Returns an object with an identifier signifying that this parameter should be computed.\n */\nexport const computedParam = (getterFunctionKey, getterParams) => {\n    return {\n        [VDP_COMPUTED_PARAM]: true,\n        [GETTER_FUNCTION_KEY]: getterFunctionKey,\n        [GETTER_PARAMS]: getterParams\n    };\n};\n\n/**\n * Represents a history of all application interaction events,\n * which can be used for forward(redo)/backward(undo) navigation.\n */\nexport default class HistoryStack {\n\n    /**\n     * Create a new history stack.\n     * @param {object} getterFunctionMapping Mapping from event type (int) -> getter function (function).\n     * @param {object} resetFunctionNameMapping Mapping from event subtype (int) -> reset function name (string).\n     */\n    constructor(getterFunctionMapping, resetFunctionNameMapping) {\n        this._getters = getterFunctionMapping;\n        this._resetters = resetFunctionNameMapping;\n        this._stack = []; // user-event stack\n        this._pointer = undefined; // user-event stack pointer\n    }\n\n    /**\n     * Push an event onto the stack.\n     * @param {HistoryEvent} event The event to push.\n     */\n    push(event) {\n        if(this.canGoForward()) {\n            this.prune();\n        }\n        this._stack.push(event);\n        this.incrementPointer();\n    }\n\n    /**\n     * Pop an event from the top of the stack.\n     * @returns {HistoryStack} The last event.\n     */\n    pop() {\n        this.decrementPointer();\n        return this._stack.pop();\n    }\n\n    /**\n     * Prune the stack, \n     * removing any events \"above\" the current pointer\n     */\n    prune() {\n        if(this._pointer === undefined) {\n            // clear the stack\n            while(this._stack.length) {\n                this._stack.pop();\n            }\n        } else {\n            // remove all events above the pointer\n            while(this._pointer < (this._stack.length-1)) {\n                this._stack.pop();\n            }\n        }\n    }\n\n    /**\n     * Find the most recent \"related\" event. \n     * Dips into the \"initial\" events if needed.\n     * @param {HistoryEvent} event The event to reference.\n     * @returns {HistoryEvent} A \"related\", but previous event.\n     */\n    getPrevRelated(event, pointer) {\n        for(let i = pointer - 1; i >= 0; i--) {\n            if(this._stack[i].isRelated(event)) {\n                return this._stack[i];\n            }\n        }\n        return new HistoryEvent(event.type, event.subtype, event.id, this._resetters[event.subtype]);\n    }\n\n    /**\n     * @returns {boolean}\n     */\n    canGoBack() {\n        return (this._pointer !== undefined);\n    }\n\n    /**\n     * Goes back by executing the most recent \"related\" event,\n     * in relation to the currently-pointed-to event.\n     * Decrements the stack pointer.\n     */\n    goBack() {\n        if(this.canGoBack()) {\n            // get the current event\n            let curr = this._stack[this._pointer];\n            // get the most recent \"related\" event\n            let prev = this.getPrevRelated(curr, this._pointer);\n            this.decrementPointer();\n            \n            // Execute \"prev\" event\n            this.execute(prev);\n        }\n    }\n\n    /**\n     * @returns {boolean}\n     */\n    canGoForward() {\n        return (!this.isEmpty() && (this._pointer < (this._stack.length - 1) || this._pointer === undefined));\n    }\n\n    /**\n     * Goes forward by executing the next event.\n     * Increments the stack pointer.\n     */\n    goForward() {\n        if(this.canGoForward()) {\n            // get the next event\n            this.incrementPointer();\n            let next = this._stack[this._pointer];\n            \n            // Execute \"next\" event\n            this.execute(next);\n        }\n    }\n\n    /**\n     * @returns {boolean}\n     */\n    isEmpty() {\n        return (this._stack.length === 0);\n    }\n\n    /**\n     * Decrements the stack pointer, or sets to undefined.\n     */\n    decrementPointer() {\n        this._pointer = (this._pointer === 0 ? undefined : this._pointer - 1);\n    }\n\n    /**\n     * Increments the stack pointer, or sets to zero.\n     */\n    incrementPointer() {\n        this._pointer = (this._pointer === undefined ? 0 : this._pointer + 1);\n    }\n\n    /**\n     * Parse parameters to check for the need to call a getter function.\n     * @param {array} params The serialized parameter array.\n     * @returns {array} Parsed params, replacing with calls to getter functions if necessary.\n     */\n    parseParams(params) {\n        return params.map((p) => {\n            if(p !== null && p !== undefined && typeof p === \"object\") {\n                if(p.hasOwnProperty(VDP_COMPUTED_PARAM)) {\n                    // can assume that this object represents a call to a \"getter\": getScale, getStack, etc...\n                    console.assert(typeof p[GETTER_FUNCTION_KEY] === \"number\");\n                    console.assert(this._getters.hasOwnProperty(p[GETTER_FUNCTION_KEY]));\n                    let getterFunction = this._getters[p[GETTER_FUNCTION_KEY]];\n                    console.assert(Array.isArray(p[GETTER_PARAMS]));\n                    let getterParams = p[GETTER_PARAMS];\n                    \n                    return getterFunction( ...getterParams );\n                }\n            }\n            return p;\n        });\n    }\n\n    /**\n     * Execute a provided event.\n     * @param {HistoryEvent} event \n     */\n    execute(event) {\n\n        if(event === undefined) {\n            console.error(\"Error: the event passed to HistoryStack.execute is undefined\");\n            return;\n        }\n\n        let getTargetFunc = this._getters[event.type];\n\n        if(getTargetFunc !== undefined) {\n            let target = getTargetFunc(event.id);\n            let parsedParams = this.parseParams(event.params)\n            target[event.action]( ...parsedParams );\n        } else {\n            console.error(\"Error: the target function specified by the HistoryEvent type is undefined\");\n        }\n    }\n\n    /**\n     * Get the complete history stack as an array.\n     * Prunes the stack if necessary.\n     * @returns {array} The current stack as an array.\n     */\n    export() {\n        if(this.canGoForward()) {\n            this.prune();\n        }\n        \n        return this._stack.map(el => el.toJson());\n    }\n\n    /**\n     * Set the history stack array, but do not increment the pointer.\n     * Assumes the history stack is empty.\n     * @param {array} stack The array of events to set as the stack.\n     */\n    import(stack) {\n        console.assert(this._pointer === undefined);\n        console.assert(this._stack.length === 0);\n        for(let event of stack) {\n            console.assert(event.hasOwnProperty(\"type\"))\n            console.assert(event.hasOwnProperty(\"subtype\"))\n            console.assert(event.hasOwnProperty(\"id\"))\n            console.assert(event.hasOwnProperty(\"action\"))\n            console.assert(event.hasOwnProperty(\"params\"))\n            this._stack.push(new HistoryEvent(event.type, event.subtype, event.id, event.action, event.params));\n        }\n    }\n\n}","/**\n * Enum of the base event types.\n */\nexport const EVENT_TYPES = Object.freeze({ \n    SCALE: \"SCALE\",\n    DATA: \"DATA\"\n});\n\n/**\n * Enum of the base event subtypes.\n */\nexport const EVENT_SUBTYPES = Object.freeze({ \n    SCALE_DOMAIN_FILTER: \"FILTER\",\n    SCALE_DOMAIN_SORT: \"SORT\",\n    SCALE_COLOR_SCALE: \"COLOR_SCALE\",\n    SCALE_COLOR_OVERRIDE: \"COLOR_OVERRIDE\" \n});\n\n/**\n * Enum of the base event subtype resets.\n */\nexport const EVENT_SUBTYPE_RESETS = Object.freeze({ \n    [EVENT_SUBTYPES.SCALE_DOMAIN_FILTER]: \"resetFilter\",\n    [EVENT_SUBTYPES.SCALE_DOMAIN_SORT]: \"resetSort\",\n    [EVENT_SUBTYPES.SCALE_COLOR_SCALE]: \"resetColorScale\",\n    [EVENT_SUBTYPES.SCALE_COLOR_OVERRIDE]: \"resetColorOverride\",\n});\n\n","<template>\n    <div>\n        Sort <em>{{ getScale(variable).name }}</em> by <em>{{ getData(data).name }}</em> data\n        <span>\n            on\n            <select v-model=\"selectedKey\" v-if=\"hasOptionScale\">\n                <option disabled value=\"\">Please select one</option>\n                <option v-for=\"sortVarKey in sortVarKeys\" :key=\"sortVarKey\" :value=\"sortVarKey\">\n                    {{ _optionScale.toHuman(sortVarKey) }}\n                </option>\n            </select>\n            <span v-if=\"!hasOptionScale\">\n                <em>{{ optionName }}</em>\n            </span>\n            &nbsp;\n        </span>\n        <span>\n            <select v-model=\"sortAscending\">\n                <option :value=\"true\">Ascending</option>\n                <option :value=\"false\">Descending</option>\n            </select>\n            &nbsp;\n        </span>\n        <button @click=\"go\" :disabled=\"!validSelection(selectedKey)\">Go</button>\n    </div>\n</template>\n\n<script>\nimport HistoryEvent from '../history/HistoryEvent.js';\nimport { computedParam } from '../history/HistoryStack.js';\nimport { EVENT_TYPES, EVENT_SUBTYPES } from '../history/base-events.js';\n\nlet uuid = 0;\n/**\n * This component helps make simple sorting controls. \n * To sort by an individual variable use optionName and optionVariable props. \n * To give provide sort-by options in terms of a scale's domain use optionScale prop instead.\n * @prop {string} variable The key of the scale to be sorted.\n * @prop {string} data The key of the data that will be used to do the sorting.\n * @prop {string} optionScale A categorical scale of variables to sort by. Ignored if using optionVar and optionName props instead.\n * @prop {string} optionVariable A variable to sort by. Ignored if using optionScale instead.\n * @prop {string} optionName The human-readable name of the variable to sort by. Ignored if using optionScale instead.\n * @prop {string} comparatorScale The key of the scale whose comparator is to be used to do the sorting.\n * @prop {function} getScale The scale getter function.\n * @prop {function} getStack The stack getter function.\n * @prop {function} getData The data getter function.\n * \n * @example\n * <SortOptions \n *    variable=\"sample_id\" \n *    data=\"exposure_sbs\" \n *    optionScale=\"sig_sbs\"\n *    :getScale=\"getScale\" \n *    :getData=\"getData\"\n *    :getStack=\"getStack\"\n * />\n * <SortOptions \n *    variable=\"sample_id\" \n *    data=\"exposure_sbs\"\n *    optionVariable=\"age\"\n *    optionName=\"Age\"\n *    :getScale=\"getScale\" \n *    :getData=\"getData\"\n *    :getStack=\"getStack\"\n * />\n */\nexport default {\n    name: 'SortOptions',\n    props: {\n        'variable': {\n            type: String\n        },\n        'data': {\n            type: String \n        },\n        'optionScale': {\n            type: String \n        },\n        'optionVariable': {\n            type: String \n        },\n        'optionName': {\n            type: String \n        },\n        'comparatorScale': {\n            type: String \n        },\n        'getScale': {\n            type: Function\n        },\n        'getData': {\n            type: Function\n        },\n        'getStack': {\n            type: Function\n        }\n    },\n    data() {\n        return {\n            hasOptionScale: false,\n            selectedKey: null,\n            sortAscending: true,\n            sortVarKeys: []\n        }\n    },\n    beforeCreate() {\n        this.uuid = this.$options.name + uuid.toString();\n        uuid += 1;\n    },\n    created() {\n        if(this.optionScale !== undefined && this.optionScale !== null) {\n            this.hasOptionScale = true;\n            this._optionScale = this.getScale(this.optionScale);\n            this.sortVarKeys = this._optionScale.domain;\n            this._optionScale.onUpdate(this.uuid, () => {\n                this.sortVarKeys = this._optionScale.domain;\n            })\n        } else {\n            this.selectedKey = this.optionVariable;\n        }\n\n        this._stack = this.getStack();\n\n    },\n    methods: {\n        validSelection(varValue) {\n            return (varValue !== null);\n        },\n        go() {\n            if(this.validSelection(this.selectedKey)) {\n                this.getScale(this.variable).sort(this.getData(this.data), this.selectedKey, this.getScale(this.comparatorScale), this.sortAscending);\n                this._stack.push(new HistoryEvent(\n                    EVENT_TYPES.SCALE, \n                    EVENT_SUBTYPES.SCALE_DOMAIN_SORT, \n                    this.variable, \n                    \"sort\", \n                    [\n                        computedParam(EVENT_TYPES.DATA, [this.data]),\n                        this.selectedKey,\n                        computedParam(EVENT_TYPES.SCALE, [this.comparatorScale]),\n                        this.sortAscending\n                    ]\n                ));\n                this.$emit('sort');\n            }\n        }\n    }\n}\n</script>\n\n<style>\n\n\n</style>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SortOptions.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SortOptions.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./SortOptions.vue?vue&type=template&id=5bdba675&\"\nimport script from \"./SortOptions.vue?vue&type=script&lang=js&\"\nexport * from \"./SortOptions.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"vdp-axis\",style:({\n        'height': this.computedHeight + 'px', \n        'width': this.computedWidth + 'px',\n        'top': this.computedTop + 'px',\n        'left': this.computedLeft + 'px'\n    }),attrs:{\"id\":this.axisElemID}})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import { dispatch as d3_dispatch } from \"d3-dispatch-nosplit\";\n\nconst DISPATCH_EVENT_UPDATE = \"update\";\nconst DISPATCH_EVENT_HIGHLIGHT = \"highlight\";\nconst DISPATCH_EVENT_HIGHLIGHT_DESTROY = \"highlight-destroy\";\n\n\n/**\n * Scale parent class to handle dispatching for highlights, updates.\n */\nexport default class AbstractScaleDispatcher {\n\n    /**\n     * Create a scale dispatcher.\n     */\n    constructor() {\n        this._dispatch = d3_dispatch(\n            DISPATCH_EVENT_UPDATE, \n            DISPATCH_EVENT_HIGHLIGHT, \n            DISPATCH_EVENT_HIGHLIGHT_DESTROY\n        );\n    }\n    \n    /**\n     * Subscribe to highlight events.\n     * @param {string} componentId \n     * @param {function} callback \n     */\n    onHighlight(componentId, callback) {\n        this._dispatch.on(DISPATCH_EVENT_HIGHLIGHT + \".\" + componentId, callback);\n    }\n\n    /**\n     * Subscribe to highlight destroy events.\n     * @param {string} componentId \n     * @param {function} callback \n     */\n    onHighlightDestroy(componentId, callback) {\n        this._dispatch.on(DISPATCH_EVENT_HIGHLIGHT_DESTROY + \".\" + componentId, callback);\n    }\n\n    /**\n     * Subscribe to update events.\n     * @param {string} componentId \n     * @param {function} callback \n     */\n    onUpdate(componentId, callback) {\n        this._dispatch.on(DISPATCH_EVENT_UPDATE + \".\" + componentId, callback);\n    }\n\n    /**\n     * Emit the highlight event.\n     */\n    emitHighlight() {\n        this._dispatch.call(DISPATCH_EVENT_HIGHLIGHT, null, ...arguments);\n    }\n\n    /**\n     * Emit the highlight destroy event.\n     */\n    emitHighlightDestroy() {\n        this._dispatch.call(DISPATCH_EVENT_HIGHLIGHT_DESTROY);\n    }\n\n    /**\n     * Emit the update event.\n     */\n    emitUpdate() {\n        this._dispatch.call(DISPATCH_EVENT_UPDATE);\n    }\n   \n}","import AbstractScaleDispatcher from './AbstractScaleDispatcher.js';\nimport { \n    interpolateBrBG as d3_interpolateBrBG,\n    interpolatePRGn as d3_interpolatePRGn,\n    interpolatePiYG as d3_interpolatePiYG,\n    interpolatePuOr as d3_interpolatePuOr,\n    interpolateRdBu as d3_interpolateRdBu,\n    interpolateRdGy as d3_interpolateRdGy,\n    interpolateRdYlBu as d3_interpolateRdYlBu,\n    interpolateRdYlGn as d3_interpolateRdYlGn,\n    interpolateSpectral as d3_interpolateSpectral,\n    interpolateBlues as d3_interpolateBlues,\n    interpolateGreens as d3_interpolateGreens,\n    interpolateGreys as d3_interpolateGreys,\n    interpolateOranges as d3_interpolateOranges,\n    interpolatePurples as d3_interpolatePurples,\n    interpolateReds as d3_interpolateReds,\n    interpolateViridis as d3_interpolateViridis,\n    interpolateInferno as d3_interpolateInferno,\n    interpolateMagma as d3_interpolateMagma,\n    interpolatePlasma as d3_interpolatePlasma,\n    interpolateWarm as d3_interpolateWarm,\n    interpolateCool as d3_interpolateCool,\n    interpolateCubehelixDefault as d3_interpolateCubehelixDefault,\n    interpolateBuGn as d3_interpolateBuGn,\n    interpolateBuPu as d3_interpolateBuPu,\n    interpolateGnBu as d3_interpolateGnBu,\n    interpolateOrRd as d3_interpolateOrRd,\n    interpolatePuBuGn as d3_interpolatePuBuGn,\n    interpolatePuBu as d3_interpolatePuBu,\n    interpolatePuRd as d3_interpolatePuRd,\n    interpolateRdPu as d3_interpolateRdPu,\n    interpolateYlGnBu as d3_interpolateYlGnBu,\n    interpolateYlGn as d3_interpolateYlGn,\n    interpolateYlOrBr as d3_interpolateYlOrBr,\n    interpolateYlOrRd as d3_interpolateYlOrRd,\n    interpolateRainbow as d3_interpolateRainbow,\n    interpolateSinebow as d3_interpolateSinebow\n} from \"d3-scale-chromatic\";\n\n\n/**\n * Abstract class representing a scale.\n * @interface\n */\nexport default class AbstractScale extends AbstractScaleDispatcher {\n\n    /**\n     * @enum\n     * @readonly\n     */\n    static colorScales = Object.freeze({\n        \"BrBG\": d3_interpolateBrBG,\n        \"PRGn\": d3_interpolatePRGn,\n        \"PiYG\": d3_interpolatePiYG,\n        \"PuOr\": d3_interpolatePuOr,\n        \"RdBu\": d3_interpolateRdBu,\n        \"RdGy\": d3_interpolateRdGy,\n        \"RdYlBu\": d3_interpolateRdYlBu,\n        \"RdYlGn\": d3_interpolateRdYlGn,\n        \"Spectral\": d3_interpolateSpectral,\n        \"Blues\": d3_interpolateBlues,\n        \"Greens\": d3_interpolateGreens,\n        \"Greys\": d3_interpolateGreys,\n        \"Oranges\": d3_interpolateOranges,\n        \"Purples\": d3_interpolatePurples,\n        \"Reds\": d3_interpolateReds,\n        \"Viridis\": d3_interpolateViridis,\n        \"Inferno\": d3_interpolateInferno,\n        \"Magma\": d3_interpolateMagma,\n        \"Plasma\": d3_interpolatePlasma,\n        \"Warm\": d3_interpolateWarm,\n        \"Cool\": d3_interpolateCool,\n        \"CubehelixDefault\": d3_interpolateCubehelixDefault,\n        \"BuGn\": d3_interpolateBuGn,\n        \"BuPu\": d3_interpolateBuPu,\n        \"GnBu\": d3_interpolateGnBu,\n        \"OrRd\": d3_interpolateOrRd,\n        \"PuBuGn\": d3_interpolatePuBuGn,\n        \"PuBu\": d3_interpolatePuBu,\n        \"PuRd\": d3_interpolatePuRd,\n        \"RdPu\": d3_interpolateRdPu,\n        \"YlGnBu\": d3_interpolateYlGnBu,\n        \"YlGn\": d3_interpolateYlGn,\n        \"YlOrBr\": d3_interpolateYlOrBr,\n        \"YlOrRd\": d3_interpolateYlOrRd,\n        \"Rainbow\": d3_interpolateRainbow,\n        \"Sinebow\": d3_interpolateSinebow\n    });\n    static unknownColor = \"#E3E3E3\";\n    static unknownString = \"Unknown\";\n\n    static defaultColorScale = d3_interpolateRdYlBu;\n\n    /**\n     * Create a scale.\n     * @param {*} id The ID for the scale.\n     * @param {*} name The name for the scale.\n     * @param {*} domain The domain for the scale.\n     * @param {*} colorScaleKey The key of the color scale to be used.\n     * @param {Expected} expected An object on which to subscribe to data.\n     */\n    constructor(id, name, domain, colorScaleKey, expected) {\n        super();\n        this._id = id;\n        this._name = name;\n        \n        if(colorScaleKey === undefined) {\n            this._colorScaleOriginal = AbstractScale.defaultColorScale;\n            this._colorScale = AbstractScale.defaultColorScale;\n        } else {\n            this._colorScaleOriginal = AbstractScale.colorScales[colorScaleKey];\n            this._colorScale = AbstractScale.colorScales[colorScaleKey];\n        }\n\n        this._domain = [];\n        this._domainFiltered = [];\n        this._domainOriginal = [];\n        \n        this._isLoading = true;\n        if(domain) {\n            Promise.resolve(domain).then((d) => {\n                this._domain = d.slice();\n                this._domainFiltered = d.slice();\n                this._domainOriginal = d.slice();\n                this._isLoading = false;\n                this.emitUpdate();\n            });\n        }\n\n        if(expected) {\n            expected.onData(this.constructor.name, this._id, (expectedData) => {\n                if(expectedData.hasOwnProperty(\"scales\") && expectedData[\"scales\"].hasOwnProperty(this._id)) {\n                    const d = expectedData[\"scales\"][this._id];\n                    this._domain = d.slice();\n                    this._domainFiltered = d.slice();\n                    this._domainOriginal = d.slice();\n                    this._isLoading = false;\n                    this.emitUpdate();\n                }\n            });\n        }\n    }\n    \n    /**\n     * @returns {string} The ID for the scale.\n     */\n    get id() {\n        return this._id;\n    }\n    \n    /**\n     * @returns {string} The name for the scale.\n     */\n    get name() {\n        return this._name;\n    }\n\n    /**\n     * @returns {boolean} The loading status.\n     */\n    get isLoading() {\n        return this._isLoading;\n    }\n\n\n    /**\n     * @returns {array} The values that variables using this scale can take.\n     */\n    get domain() {\n        return this._domain;\n    }\n\n    /**\n     * @returns {array} The values that variables using this scale can take after filtering.\n     */\n    get domainFiltered() {\n        return this._domainFiltered;\n    }\n\n    /**\n     * @returns {function} Function that converts a value between [0, 1] to a color\n     */\n    get colorScale() {\n        return this._colorScale;\n    }\n\n    /**\n     * Converts a domain value to a color\n     * @param {*} domainValue A domain value\n     * @returns {color} A color value\n     * \n     */\n    color(domainValue) {\n        throw new Error('You have to implement the method color!');\n    }\n\n    /**\n     * Compares two domain values\n     * @param {*} a A domain value\n     * @param {*} b Another domain value\n     * @returns {number} Comparison result of -1, 0, or 1.\n     */\n    comparator(a, b, ascending) {\n        throw new Error('You have to implement the method comparator!');\n    }\n\n    /**\n     * Check whether a domain value should be considered unknown\n     * @param {*} domainValue A domain value\n     * @returns {boolean} True if the domain value should be considered unknown\n     */\n    static isUnknown(domainValue) {\n        return (domainValue == \"nan\" || domainValue === undefined);\n    }\n\n    /**\n     * Convert a domain value to a human-readable value.\n     * @param {*} domainValue A domain value\n     * @returns {*} The corresponding humanDomain value\n     */\n    toHuman(domainValue) {\n        if(AbstractScale.isUnknown(domainValue)) {\n            return AbstractScale.unknownString;\n        }\n        // The default implementation does nothing except the unknown check\n        return domainValue;\n    }\n\n    /**\n     * Set the domain directly.\n     * @param {array} newDomain An array of new domain values, or a promise that will return the array.\n     */\n    setDomain(newDomain) {\n        this._isLoading = true;\n        this.emitUpdate();\n        Promise.resolve(newDomain).then((d) => {\n            this._domain = d.slice();\n            this._isLoading = false;\n            this.emitUpdate();\n        });\n    }\n\n    /**\n     * Set the filtered domain directly.\n     * @param {array} newDomainFiltered An array of new filtered domain values.\n     */\n    setDomainFiltered(newDomainFiltered) {\n        this._isLoading = true;\n        this.emitUpdate();\n        Promise.resolve(newDomainFiltered).then((d) => {\n            this._domainFiltered = d.slice();\n            this._isLoading = false;\n            this.emitUpdate();\n        });\n    }\n\n    /**\n     * Set the color scale function by its name.\n     * @param {string} scaleKey The string key for the color scale.\n     */\n    setColorScaleByKey(scaleKey) {\n        if(Object.keys(AbstractScale.colorScales).includes(scaleKey)) {\n            this._colorScale = AbstractScale.colorScales[scaleKey];\n            this.emitUpdate();\n        }\n    }\n\n    /**\n     * Resets the color scale.\n     */\n    resetColorScale() {\n        this._colorScale = this._colorScaleOriginal;\n        this.emitUpdate();\n    }\n\n    /**\n     * Resets the filtered domain, using the full domain.\n     */\n    resetFilter() {\n        this.setDomainFiltered(this._domain.slice());\n    }\n\n}","import { dispatch as d3_dispatch } from \"d3-dispatch-nosplit\";\n\nconst DISPATCH_EVENT_UPDATE = \"update\";\n/**\n * Represents a container of a data array.\n */\nexport default class DataContainer {\n\n    /**\n     * Create a data container.\n     * @param {string} id The ID for the data.\n     * @param {string} name The name for the data.\n     * @param {*} data The data to hold, or a promise that will return the data.\n     * @param {Expected} expected An object on which to subscribe to data.\n     */\n    constructor(id, name, data, expected) {\n        this._id = id;\n        this._name = name;\n        this._isLoading = true;\n        this._data = null;\n        this._dispatch = d3_dispatch(DISPATCH_EVENT_UPDATE);\n\n        if(data) {\n            Promise.resolve(data).then((d) => {\n                this._data = d;\n                this._isLoading = false;\n                this.emitUpdate();\n            });\n        }\n\n        if(expected) {\n            expected.onData(this.constructor.name, this._id, (expectedData) => {\n                if(expectedData.hasOwnProperty(\"data\") && expectedData[\"data\"].hasOwnProperty(this._id)) {\n                    const d = expectedData[\"data\"][this._id];\n                    this._data = d;\n                    this._isLoading = false;\n                    this.emitUpdate();\n                }\n            });\n        }\n    }\n    \n    /**\n     * @returns {string} The ID for the data.\n     */\n    get id() {\n        return this._id;\n    }\n\n    /**\n     * @returns {string} The name for the data.\n     */\n    get name() {\n        return this._name;\n    }\n    \n    /**\n     * @returns {array} The data.\n     */\n    get data() {\n        return this._data;\n    }\n\n    /**\n     * @returns {*} The data copied.\n     */\n    get dataCopy() {\n        if(this.data instanceof Array) {\n            // Shallow copy\n            // TODO: change to deep copy\n            return Array.from(this.data);\n        }\n        // TODO: deep copy if object\n        return this.data;\n    }\n\n    /**\n     * @returns {boolean} The loading status.\n     */\n    get isLoading() {\n        return this._isLoading;\n    }\n\n    /**\n     * Set the data variable.\n     * @param {*} newData The data to be set, or a promise that will return the data to be set..\n     */\n    setData(newData) {\n        this._isLoading = true;\n        this.emitUpdate();\n        Promise.resolve(newData).then((d) => {\n            this._data = d;\n            this._isLoading = false;\n            this.emitUpdate();\n        });\n    }\n    \n    /**\n     * Subscribe to update events.\n     * @param {string} componentId \n     * @param {function} callback \n     */\n    onUpdate(componentId, callback) {\n        this._dispatch.on(DISPATCH_EVENT_UPDATE + \".\" + componentId, callback);\n    }\n\n    /**\n     * Emit the update event.\n     */\n    emitUpdate() {\n        this._dispatch.call(DISPATCH_EVENT_UPDATE);\n    }\n}","import { descending as d3_descending, ascending as d3_ascending } from \"d3-array\";\nimport { scaleOrdinal as d3_scaleOrdinal } from 'd3-scale';\nimport { hierarchy as d3_hierarchy } from 'd3-hierarchy';\nimport AbstractScale from './AbstractScale.js';\nimport DataContainer from './../data/DataContainer.js';\nimport { filterHierarchy } from './../helpers.js';\n\n/**\n * Scale class for categorical variables.\n */\nexport default class CategoricalScale extends AbstractScale {\n\n    /**\n     * Create a categorical scale.\n     * @param {string} id The ID for the scale.\n     * @param {string} name The name for the scale.\n     * @param {array} domain The domain for the scale, or a promise.\n     * @param {array} humanDomain The humanDomain for the scale, or a promise. Optional.\n     * @param {object} colorOverrides The default colorOverrides for the scale. Optional.\n     * @param {Expected} expected An object on which to subscribe to data.\n     */\n    constructor(id, name, domain, humanDomain, colorOverrides, colorScaleKey, expected) {\n        super(id, name, domain, colorScaleKey, expected);\n\n        this._humanDomain = undefined;\n\n        if(humanDomain !== undefined) {\n            Promise.resolve(humanDomain).then((d) => {\n                this._humanDomain = d;\n                this.emitUpdate();\n            });\n        }\n        if(colorOverrides !== undefined) {\n            this._colorOverrides = colorOverrides;\n            this._colorOverridesOriginal = Object.assign({}, colorOverrides); // shallow copy\n        } else {\n            this._colorOverrides = {};\n            this._colorOverridesOriginal = {};\n        }\n    }\n\n    /**\n     * Human-readable domain values\n     * - Example domain:        [0, 1, 2]\n     * - Example humanDomain:   [\"string0\", \"string1\", \"string2\"]\n     * @returns {array} The human-readable domain values\n     */\n    get humanDomain() {\n        // implementation example:\n        // return [\"string0\", \"string1\", \"string2\"];\n        return this._humanDomain;\n    }\n    \n    /**\n     * @returns {function} Function that converts domain value -> humanDomain value\n     */\n    get humanScale() {\n        if(this.humanDomain !== undefined && this.humanDomain.length > 0) {\n            return d3_scaleOrdinal()\n                .domain(this.domain)\n                .range(this.humanDomain);\n        }\n    }\n\n    /**\n     * @returns {object} Mapping from domain value to colors for overridden values.\n     */\n    get colorOverrides() {\n        return this._colorOverrides;\n    }\n\n    /** @inheritdoc */\n    toHuman(domainValue) {\n        if(AbstractScale.isUnknown(domainValue)) {\n            return AbstractScale.unknownString;\n        }\n        if(this.humanScale !== undefined) {\n            return this.humanScale(domainValue);\n        }\n        return domainValue;\n    }\n\n    /** @inheritdoc */\n    color(domainValue) {\n        if(AbstractScale.isUnknown(domainValue)) {\n            return AbstractScale.unknownColor;\n        }\n        if(Object.keys(this._colorOverrides).includes(domainValue)) {\n            return this._colorOverrides[domainValue];\n        }\n        return this.colorScale(this.domain.findIndex((el) => (el === domainValue)) / parseFloat(this.domain.length - 1));\n    }\n\n    /**\n     * Set overridden values for colors.\n     * @param {object} colorOverrides Mapping of domain values to colors.\n     */\n    setColorOverrides(colorOverrides) {\n        this._colorOverrides = colorOverrides;\n        this.emitUpdate();\n    }\n\n    /** @inheritdoc */\n    comparator(a, b, ascending=true) {\n        let compareFunc = d3_ascending;\n        if(!ascending) {\n            compareFunc = d3_descending;\n        }\n        return compareFunc(\n            (a == \"nan\" ? -1 : this.domain.indexOf(a)), \n            (b == \"nan\" ? -1 : this.domain.indexOf(b))\n        );\n    }\n\n    /**\n     * Zooms the scale.\n     * @param {number} newMinIndex Index of the new minimum element (inclusive)\n     * @param {number} newMaxIndex Index of the new maximum element (exclusive)\n     */\n    zoom(newMinIndex, newMaxIndex) {\n        let elementsFiltered = this._domain.slice(newMinIndex, newMaxIndex);\n        this.setDomainFiltered(elementsFiltered);\n    }\n\n    /**\n     * Filters the scale.\n     * @param {array} indicesToKeep Array of indices of elements to include.\n     */\n    filter(indicesToKeep) {\n        let elementsFiltered = indicesToKeep.map(index => this._domain[index]);\n        this.setDomainFiltered(elementsFiltered);\n    }\n\n    /**\n     * Sort the domain based on the data passed.\n     * @param {object} dataContainer DataContainer instance holding the data used to sort.\n     * @param {string} var1D\n     * @param {boolean} ascending Whether to sort ascending or descending.\n     */\n    sort(dataContainer, var1D, comparatorScale, ascending=true) {\n        console.assert(dataContainer instanceof DataContainer);\n        if(dataContainer.isLoading) {\n            return;\n        }\n        let data = dataContainer.dataCopy;\n        console.assert(Array.isArray(data));\n\n\n        let comparator = (domainA, domainB) => {\n            let dataA = data.find((el) => el[this.id] === domainA);\n            let dataB = data.find((el) => el[this.id] === domainB);\n            \n            let a, b;\n            if(dataA === undefined || dataA[var1D] === \"nan\") {\n                a = -1;\n            } else {\n                a = dataA[var1D];\n            }\n            if(dataB === undefined || dataB[var1D] === \"nan\") {\n                b = -1;\n            } else {\n                b = dataB[var1D];\n            }\n\n            return comparatorScale.comparator(a, b, ascending)\n        };\n        \n        let domainCopy = this.domain.slice();\n        let domainFilteredCopy = this.domainFiltered.slice();\n\n        let newDomain = domainCopy.sort(comparator);\n        this.setDomain(newDomain);\n\n        // Set filtered domain\n        let newDomainFiltered = domainFilteredCopy.sort(comparator);\n        this.setDomainFiltered(newDomainFiltered);\n\n    }\n\n    /**\n     * Sort the domain based on the hierarchy passed.\n     * @param {object} dataContainer DataContainer instance holding the hierarchy data.\n     */\n    sortByHierarchy(dataContainer) {\n        console.assert(dataContainer instanceof DataContainer);\n        if(dataContainer.isLoading) {\n            return;\n        }\n        const hierarchyData = dataContainer.dataCopy;\n        console.assert(typeof hierarchyData === \"object\");\n        \n        const cleanedHierarchyData = filterHierarchy(hierarchyData, this.domain);\n        \n        const root = d3_hierarchy(cleanedHierarchyData);\n        const leaves = root.leaves().map((el) => el.data.name);\n        // Set domain\n        this.setDomain(leaves);\n        // Set domain filtered\n        this.setDomainFiltered(leaves.slice());\n    }\n\n    /**\n     * Filter the domain based on the hierarchy passed.\n     * @param {object} dataContainer DataContainer instance holding the hierarchy data.\n     * @param {string} newParentKey Key of the node that will be used as the parent of the filtered nodes.\n     */\n    filterByHierarchy(dataContainer, newParentKey) {\n        console.assert(dataContainer instanceof DataContainer);\n        if(dataContainer.isLoading) {\n            return;\n        }\n        const hierarchyData = dataContainer.dataCopy;\n        console.assert(typeof hierarchyData === \"object\");\n        \n        const getParent = (node) => {\n            if(node.name === newParentKey) {\n                return node;\n            } else {\n                for(let child of node.children) {\n                    let possibleParent = getParent(child);\n                    if(possibleParent !== undefined) {\n                        return possibleParent;\n                    }\n                }\n            }\n        }\n        const cleanedHierarchyData = filterHierarchy(hierarchyData, this.domain);\n        \n        const filteredParent = getParent(cleanedHierarchyData);\n        const filteredRoot = d3_hierarchy(filteredParent);\n        const filteredLeaves = filteredRoot.leaves().map((el) => el.data.name);\n        // Set filtered domain\n        this.setDomainFiltered(filteredLeaves);\n    }\n\n    /**\n     * Resets the color override object.\n     */\n    resetColorOverride() {\n        this.setColorOverrides(this._colorOverridesOriginal);\n    }\n\n    /**\n     * Resets the color override object.\n     */\n    resetSort() {\n        this.setDomain(this._domainOriginal.slice());\n        const newDomainFiltered = this._domainOriginal.slice().filter((el) => this._domainFiltered.includes(el));\n        this.setDomainFiltered(newDomainFiltered);\n    }\n    \n\n}","import { descending as d3_descending, ascending as d3_ascending } from 'd3-array';\nimport AbstractScale from './AbstractScale.js';\n\n/**\n * Scale class for continuous variables.\n */\nexport default class ContinuousScale extends AbstractScale {\n\n    /** @inheritdoc */\n    color(domainValue) {\n        if(AbstractScale.isUnknown(domainValue)) {\n            return AbstractScale.unknownColor;\n        }\n        return this.colorScale((domainValue - this.domain[0]) / parseFloat(this.domain[1] - this.domain[0]));\n    }\n\n    /** @inheritdoc */\n    comparator(a, b, ascending=true) {\n        let compareFunc = d3_ascending;\n        if(!ascending) {\n            compareFunc = d3_descending;\n        }\n        return compareFunc(\n            (a == \"nan\" ? -1 : +a), \n            (b == \"nan\" ? -1 : +b)\n        );\n    }\n\n    /**\n     * Zooms the scale.\n     * @param {number} newMin New minimum domain element value.\n     * @param {number} newMax New maximum domain element value.\n     */\n    zoom(newMin, newMax) {\n        this.setDomainFiltered([newMin, newMax]);\n    }\n\n}","<template>\n    <div \n        :id=\"this.axisElemID\" \n        class=\"vdp-axis\" \n        :style=\"{\n            'height': this.computedHeight + 'px', \n            'width': this.computedWidth + 'px',\n            'top': this.computedTop + 'px',\n            'left': this.computedLeft + 'px'\n        }\"></div>\n</template>\n\n<script>\nimport { scaleBand as d3_scaleBand, scaleLinear as d3_scaleLinear, scaleLog as d3_scaleLog } from 'd3-scale';\nimport { select as d3_select } from 'd3-selection';\nimport { axisTop as d3_axisTop, axisLeft as d3_axisLeft, axisRight as d3_axisRight, axisBottom as d3_axisBottom } from 'd3-axis';\nimport { brushX as d3_brushX, brushY as d3_brushY } from 'd3-brush';\nimport { event as d3_event } from 'd3';\n\nimport AbstractScale from './../../scales/AbstractScale.js';\nimport HistoryEvent from './../../history/HistoryEvent.js';\nimport HistoryStack from './../../history/HistoryStack.js';\n\nimport { EVENT_TYPES, EVENT_SUBTYPES } from './../../history/base-events.js';\nimport CategoricalScale from './../../scales/CategoricalScale.js';\nimport ContinuousScale from './../../scales/ContinuousScale.js';\n\nconst SIDES = Object.freeze({ \"TOP\": 1, \"LEFT\": 2, \"RIGHT\": 3, \"BOTTOM\": 4 });\nconst ORIENTATIONS = Object.freeze({ \"VERTICAL\": 1, \"HORIZONTAL\": 2 }); // vertical = left/right, horizontal = top/bottom\n\nlet uuid = 0;\n/**\n * @prop {string} variable The axis variable key.\n * @prop {string} side The side for the scale.\n * @prop {number} tickRotation An angle used to rotate axis tick text.\n * @prop {number} pWidth The plot width.\n * @prop {number} pHeight The plot height.\n * @prop {number} pMarginTop The plot top margin.\n * @prop {number} pMarginLeft The plot left margin.\n * @prop {number} pMarginRight The plot right margin.\n * @prop {number} pMarginBottom The plot bottom margin.\n * @prop {function} getScale Function that takes a scale key string and returns a scale instance.\n * @prop {function} getStack Function that returns a HistoryStack instance.\n * @prop {boolean} disableBrushing Whether to disable brushing functionality and hide the zoomed-out \"context\" view. Default: false\n * @prop {boolean} log Whether to have log scaled variable. Default: false\n * @prop {boolean} showLabel Whether to show the label. Default: true\n * @prop {number} maxCharacters The maximum number of characters, where the rest will be trimmed. Optional.\n * \n * @example\n * <Axis\n *      variable=\"y\"\n *      side=\"left\" \n *      :tickRotation=\"-35\"\n *      :pWidth=\"500\"\n *      :pHeight=\"300\"\n *      :pMarginTop=\"10\"\n *      :pMarginLeft=\"120\"\n *      :pMarginRight=\"10\"\n *      :pMarginBottom=\"150\"\n *      :getScale=\"getScale\"\n *      :getStack=\"getStack\"\n *  />\n */\nexport default {\n    name: 'Axis',\n    props: {\n        'variable': {\n            type: String\n        },\n        'side': {\n            type: String\n        },\n        'tickRotation': {\n            type: Number,\n            default: 0\n        },\n        'pWidth': {\n            type: Number\n        },\n        'pHeight': {\n            type: Number\n        },\n        'pMarginTop': {\n            type: Number\n        },\n        'pMarginLeft': {\n            type: Number\n        },\n        'pMarginRight': {\n            type: Number\n        },\n        'pMarginBottom': {\n            type: Number\n        },\n        'getScale': {\n            type: Function\n        },\n        'getStack': {\n            type: Function\n        },\n        'disableBrushing': {\n            type: Boolean,\n            default: false\n        },\n        'showLabel': {\n            type: Boolean,\n            default: true\n        },\n        'autoRemoveTicks': {\n            type: Boolean,\n            default: true\n        },\n        'log': {\n            type: Boolean,\n            default: false\n        },\n        'maxCharacters': {\n            type: Number,\n            required: false\n        }\n    },\n    data() {\n        return {\n            \n        }\n    },\n    computed: {\n        axisElemID: function() {\n            return 'axis_' + this.uuid;\n        },\n        axisSelector: function() {\n            return \"#\" + this.axisElemID;\n        },\n        computedWidth: function() {\n            if(this._side === SIDES.BOTTOM || this._side === SIDES.TOP) {\n                return this.pMarginLeft + this.pWidth + this.pMarginRight;\n            } else if(this._side === SIDES.LEFT) {\n                return this.pMarginLeft + 1;\n            } else if(this._side === SIDES.RIGHT) {\n                return this.pMarginRight;\n            }\n        },\n        computedHeight: function() {\n            if(this._side === SIDES.LEFT || this._side === SIDES.RIGHT) {\n                return this.pMarginTop + this.pHeight + this.pMarginBottom;\n            } else if(this._side === SIDES.TOP) {\n                return this.pMarginTop + 1;\n            } else if(this._side === SIDES.BOTTOM) {\n                return this.pMarginBottom;\n            }\n        },\n        computedTop: function() {\n            if(this._side === SIDES.BOTTOM) {\n                return this.pMarginTop + this.pHeight;\n            }\n            return 0;\n        },\n        computedLeft: function() {\n            if(this._side === SIDES.RIGHT) {\n                return this.pMarginLeft + this.pWidth;\n            }\n            return 0;\n        },\n        computedTranslateX: function() {\n            if(this._side === SIDES.LEFT) {\n                return this.pMarginLeft;\n            } else if(this._side === SIDES.BOTTOM || this._side === SIDES.TOP) {\n                return this.pMarginLeft;\n            }\n            return 0;\n        },\n        computedTranslateY: function() {\n            if(this._side === SIDES.LEFT) {\n                return this.pMarginTop;\n            } else if(this._side === SIDES.RIGHT) {\n                return this.pMarginTop;\n            } else if(this._side === SIDES.TOP) {\n                return this.pMarginTop;\n            } else if(this._side === SIDES.BOTTOM) {\n                return 0;\n            }\n\n        }\n    },\n    watch: {\n        pMarginTop() {\n            this.drawAxis();\n        },\n        pMarginLeft() {\n            this.drawAxis();\n        },\n        pMarginRight() {\n            this.drawAxis();\n        },\n        pMarginBottom() {\n            this.drawAxis();\n        },\n        pWidth() {\n            this.drawAxis();\n        },\n        pHeight() {\n            this.drawAxis();\n        },\n        log() {\n            this.drawAxis();\n        }\n    },\n    beforeCreate() {\n        this.uuid = this.$options.name + uuid.toString();\n        uuid += 1;\n    },\n    created() {\n        // Set side and orientation enum values from side prop\n        let sideString = this.side.toUpperCase();\n        console.assert(Object.keys(SIDES).includes(sideString));\n        this._side = SIDES[sideString];\n        this._orientation = (this._side === SIDES.TOP || this._side === SIDES.BOTTOM ? ORIENTATIONS.HORIZONTAL : ORIENTATIONS.VERTICAL);\n        \n        // Set the scale variable\n        this._varScale = this.getScale(this.variable);\n        console.assert(this._varScale instanceof AbstractScale);\n        // Subscribe to event publishers\n        this._varScale.onUpdate(this.uuid, this.drawAxis);\n\n        this._stack = this.getStack();\n        console.assert(this._stack instanceof HistoryStack);\n    },\n    mounted() {\n        this.drawAxis();\n    },\n    beforeDestroy() {\n        // Unsubscribe to events\n        this._varScale.onUpdate(this.uuid, null);\n        this.removeAxis();\n    },\n    methods: {\n        removeAxis() {\n            d3_select(this.axisSelector).select(\"svg\").remove();\n        },\n        drawAxis(d3Node, brushingOverride) {\n            const vm = this;\n            vm.removeAxis();\n\n            if(vm._varScale.isLoading) {\n                return;\n            }\n\n            const disableBrushing = (brushingOverride === true) || vm.disableBrushing;\n            \n            const varScale = vm._varScale;\n            const stack = vm._stack;\n\n            let varScaleDomain = varScale.domain;\n            let varScaleDomainFiltered = varScale.domainFiltered;\n            if(varScale instanceof ContinuousScale) {\n                if(vm.log) {\n                    if(varScaleDomain[0] == 0) {\n                        varScaleDomain = varScaleDomain.slice();\n                        varScaleDomain[0] = 1;\n                    }\n                    if(varScaleDomainFiltered[0] == 0) {\n                        varScaleDomainFiltered = varScaleDomainFiltered.slice();\n                        varScaleDomainFiltered[0] = 1;\n                    }\n                }\n            }\n\n            let range;\n            if(vm._orientation === ORIENTATIONS.HORIZONTAL) {\n                range = [0, vm.pWidth];\n            } else if(vm._orientation === ORIENTATIONS.VERTICAL) {\n                range = [vm.pHeight, 0];\n            }\n\n            let axisFunction;\n            if(vm._side === SIDES.TOP) {\n                axisFunction = d3_axisTop;\n            } else if(vm._side === SIDES.LEFT) {\n                axisFunction = d3_axisLeft;\n            } else if(vm._side === SIDES.RIGHT) {\n                axisFunction = d3_axisRight;\n            } else if(vm._side === SIDES.BOTTOM) {\n                axisFunction = d3_axisBottom;\n            }\n\n            let scaleZoomedOut, scaleZoomedIn, tickSizeOuter;\n            if(varScale instanceof CategoricalScale) {\n                if(vm._orientation === ORIENTATIONS.HORIZONTAL) {\n                    scaleZoomedOut = d3_scaleBand()\n                        .domain(varScaleDomain)\n                        .range(range);\n                    scaleZoomedIn = d3_scaleBand()\n                        .domain(varScaleDomainFiltered)\n                        .range(range);\n                } else if(vm._orientation === ORIENTATIONS.VERTICAL) {\n                    scaleZoomedOut = d3_scaleBand()\n                        .domain(varScaleDomain.slice().reverse())\n                        .range(range);\n                    scaleZoomedIn = d3_scaleBand()\n                        .domain(varScaleDomainFiltered.slice().reverse())\n                        .range(range);\n                }\n                tickSizeOuter = 0;\n            } else if(varScale instanceof ContinuousScale) {\n                let continuousScaleFunc = d3_scaleLinear;\n                if(vm.log) {\n                    continuousScaleFunc = d3_scaleLog;\n                }\n                scaleZoomedOut = continuousScaleFunc()\n                    .domain(varScaleDomain)\n                    .range(range);\n                scaleZoomedIn = continuousScaleFunc()\n                    .domain(varScaleDomainFiltered)\n                    .range(range);\n                tickSizeOuter = 6;\n                // TODO: options for log, etc...\n            }\n\n            /*\n             * Create the SVG elements\n             */\n            \n            let container;\n            if(d3Node) {\n                container = d3Node;\n            } else {\n                container = d3_select(vm.axisSelector)\n                    .append(\"svg\")\n                        .attr(\"width\", vm.computedWidth)\n                        .attr(\"height\", vm.computedHeight);\n            }\n            \n            const containerZoomedIn = container.append(\"g\")\n                    .attr(\"class\", \"axis-zoomed-in\")\n                    .attr(\"transform\", \"translate(\" + vm.computedTranslateX + \",\" + vm.computedTranslateY + \")\");\n            \n            /*\n             * The zoomed-in axis\n             */\n            let tickFormatFunction = undefined;\n            if(varScale instanceof CategoricalScale) {\n                tickFormatFunction = ((d) => varScale.toHuman(d));\n            }\n\n            let tickFormatFunction2 = undefined;\n            if(vm.maxCharacters !== undefined) {\n                if(tickFormatFunction !== undefined) {\n                    tickFormatFunction2 = (d) => {\n                        let humanD = varScale.toHuman(d);\n                        if(humanD.length > vm.maxCharacters) {\n                            return (humanD.substring(0, vm.maxCharacters) + \"...\");\n                        }\n                        return humanD;\n                    }\n                } else {\n                    tickFormatFunction2 = (d) => {\n                        if(d.length > vm.maxCharacters) {\n                            return (d.substring(0, vm.maxCharacters) + \"...\");\n                        }\n                        return d;\n                    }\n                }\n            }\n            const ticksZoomedIn = containerZoomedIn.call(\n                axisFunction(scaleZoomedIn)\n                    .tickSizeOuter(tickSizeOuter)\n                    .tickFormat(tickFormatFunction2)\n            );\n\n\n            let textBboxZoomedIn;\n            try {\n                textBboxZoomedIn = ticksZoomedIn.select(\"text\").node().getBBox();\n            } catch(e) {\n                // Replace with dummy object on failure\n                // TODO: find better solution\n                textBboxZoomedIn = { height: 0 };\n            }\n\n            const tickTransformFunction = (d, i, v) => {\n                let tickBbox;\n                try {\n                    tickBbox = v[i].getBBox();\n                } catch(e) {\n                    tickBbox = { height: 0 };\n                }\n                let tickRotateX = 0;\n                let tickRotateY = 0;\n                if(vm._side === SIDES.TOP) {\n                    tickRotateY = -tickBbox.height;\n                } else if(vm._side === SIDES.BOTTOM) {\n                    tickRotateY = tickBbox.height;\n                } else if(vm._side === SIDES.LEFT) {\n                    tickRotateX = -tickBbox.height;\n                } else if(vm._side === SIDES.RIGHT) {\n                    tickRotateX = tickBbox.height;\n                }\n                return \"rotate(\" + vm.tickRotation + \",\" + tickRotateX + \",\" + tickRotateY + \")\";\n            }\n\n            let tickTextAnchor = \"middle\";\n            if(vm.tickRotation !== 0) {\n                if(vm._side === SIDES.LEFT || vm._side === SIDES.BOTTOM) {\n                    tickTextAnchor = \"end\";\n                } else {\n                    tickTextAnchor = \"start\";\n                }\n            } else {\n                if(vm._side === SIDES.LEFT) {\n                    tickTextAnchor = \"end\";\n                } else if(vm._side === SIDES.RIGHT) {\n                    tickTextAnchor = \"start\";\n                }\n            }\n\n            ticksZoomedIn.selectAll(\"text\")\t\n                    .attr(\"text-anchor\", tickTextAnchor)\n                    .attr(\"transform\", tickTransformFunction);\n\n            \n            \n            \n            // Get the width/height of the zoomed-in axis, before removing the text\n            let axisBboxZoomedIn;\n            try {\n                axisBboxZoomedIn = container.select(\".axis-zoomed-in\").node().getBBox();\n            } catch(e) {\n                axisBboxZoomedIn = {\n                    height: 0,\n                    width: 0,\n                };\n            }\n            \n            if(varScale instanceof CategoricalScale) {\n                if(vm._orientation === ORIENTATIONS.HORIZONTAL) {\n                    const barWidth = vm.pWidth / varScaleDomainFiltered.length;\n                    if(vm.autoRemoveTicks && barWidth < textBboxZoomedIn.height) {\n                        ticksZoomedIn.selectAll(\"text\")\n                            .remove();\n                    }\n                } else if(vm._orientation === ORIENTATIONS.VERTICAL) {\n                    const barHeight = vm.pHeight / varScaleDomainFiltered.length;\n                    if(vm.autoRemoveTicks && barHeight < textBboxZoomedIn.height) {\n                        ticksZoomedIn.selectAll(\"text\")\n                            .remove();\n                    }\n                }\n            }\n\n\n            \n\n            /*\n             * The zoomed-out axis\n             */\n\n            const betweenAxisMargin = 4;\n            let axisBboxZoomedOut;\n\n            let zoomedOutTranslateX = vm.computedTranslateX;\n            let zoomedOutTranslateY = vm.computedTranslateY;\n\n            if(vm._side === SIDES.LEFT) {\n                zoomedOutTranslateX -= (axisBboxZoomedIn.width + betweenAxisMargin);\n            } else if(vm._side === SIDES.BOTTOM) {\n                zoomedOutTranslateY += (axisBboxZoomedIn.height + betweenAxisMargin);\n            } else if(vm._side === SIDES.TOP) {\n                zoomedOutTranslateY -= (axisBboxZoomedIn.height + betweenAxisMargin);\n            } else if(vm._side === SIDES.RIGHT) {\n                zoomedOutTranslateX += (axisBboxZoomedIn.width + betweenAxisMargin);\n            }\n\n            if(!disableBrushing) {\n                \n                const containerZoomedOut = container.append(\"g\")\n                        .attr(\"class\", \"axis-zoomed-out\")\n                        .attr(\"transform\", \"translate(\" + zoomedOutTranslateX + \",\" + zoomedOutTranslateY + \")\");\n                \n                const ticksZoomedOut = containerZoomedOut.call(\n                    axisFunction(scaleZoomedOut)\n                        .tickSizeOuter(tickSizeOuter)\n                        .tickFormat(tickFormatFunction2)\n                );\n                let textBboxZoomedOut;\n                try {\n                    textBboxZoomedOut = ticksZoomedOut.select(\"text\").node().getBBox();\n                } catch(e) {\n                    textBboxZoomedOut = { height: 0 };\n                }\n\n                ticksZoomedOut.selectAll(\"text\")\t\n                        .style(\"text-anchor\", tickTextAnchor)\n                        .attr(\"transform\", tickTransformFunction);\n                \n                // Get the width/height of the zoomed-out axis, before removing the text\n                try {\n                    axisBboxZoomedOut = container.select(\".axis-zoomed-out\").node().getBBox();\n                } catch(e) {\n                    axisBboxZoomedOut = {\n                        height: 0,\n                        width: 0,\n                    };\n                }\n                \n                if(varScale instanceof CategoricalScale) {\n                    const barWidth = vm.pWidth / varScaleDomain.length;\n                    if(vm.autoRemoveTicks && barWidth < textBboxZoomedOut.height) {\n                        ticksZoomedOut.selectAll(\"text\")\n                            .remove();\n                    }\n                }\n\n            \n\n                /*\n                 * Add brushing to the zoomed-out axis\n                 */\n\n                \n\n                /*\n                 * Display current zoom state as overlay on zoomed-out axis\n                 */\n                \n                if(vm._orientation === ORIENTATIONS.VERTICAL) {\n                    let zoomRectTranslateX;\n                    if(vm._side === SIDES.LEFT) {\n                        zoomRectTranslateX = (-axisBboxZoomedOut.width-betweenAxisMargin);\n                    } else if(vm._side === SIDES.RIGHT) {\n                        zoomRectTranslateX = 0;\n                    }\n                    if(varScale instanceof ContinuousScale) {  \n                        let start = varScaleDomainFiltered[0];\n                        let end = varScaleDomainFiltered[1];\n                        containerZoomedOut.append(\"rect\")\n                            .attr(\"width\", axisBboxZoomedOut.width+betweenAxisMargin)\n                            .attr(\"height\", scaleZoomedOut(start) - scaleZoomedOut(end))\n                            .attr(\"x\", 0)\n                            .attr(\"y\", scaleZoomedOut(end))\n                            .attr(\"fill\", \"silver\")\n                            .attr(\"fill-opacity\", 0.5)\n                            .attr(\"transform\", \"translate(\" + zoomRectTranslateX + \",0)\");\n                    } else if(varScale instanceof CategoricalScale) {\n                        let eachBand = vm.pHeight / varScaleDomain.length;\n                        for(let domainFilteredItem of varScaleDomainFiltered) {\n                            containerZoomedOut.append(\"rect\")\n                                .attr(\"width\", axisBboxZoomedOut.width+betweenAxisMargin)\n                                .attr(\"height\", eachBand)\n                                .attr(\"x\", 0)\n                                .attr(\"y\", scaleZoomedOut(domainFilteredItem))\n                                .attr(\"fill\", \"silver\")\n                                .attr(\"fill-opacity\", 0.5)\n                                .attr(\"transform\", \"translate(\" + zoomRectTranslateX + \",0)\");\n                        }\n                    }\n                } else if(vm._orientation === ORIENTATIONS.HORIZONTAL) {\n                    let zoomRectTranslateY;\n                    if(vm._side === SIDES.TOP) {\n                        zoomRectTranslateY = (-axisBboxZoomedOut.height-betweenAxisMargin);\n                    } else if(vm._side === SIDES.BOTTOM) {\n                        zoomRectTranslateY = 0;\n                    }\n                    if(varScale instanceof CategoricalScale) {  \n                        let eachBand = vm.pWidth / varScaleDomain.length;\n                        for(let domainFilteredItem of varScaleDomainFiltered) {\n                            containerZoomedOut.append(\"rect\")\n                                .attr(\"width\", eachBand)\n                                .attr(\"height\", axisBboxZoomedOut.height)\n                                .attr(\"x\", scaleZoomedOut(domainFilteredItem))\n                                .attr(\"y\", 0)\n                                .attr(\"fill\", \"silver\")\n                                .attr(\"fill-opacity\", 0.5)\n                                .attr(\"transform\", \"translate(0,\" + zoomRectTranslateY + \")\");\n                        }\n                    } else if(varScale instanceof ContinuousScale) {\n                        let start = varScaleDomainFiltered[0];\n                        let end = varScaleDomainFiltered[1];\n                        containerZoomedOut.append(\"rect\")\n                            .attr(\"width\", scaleZoomedOut(end) - scaleZoomedOut(start))\n                            .attr(\"height\", axisBboxZoomedOut.height+betweenAxisMargin)\n                            .attr(\"x\", scaleZoomedOut(start))\n                            .attr(\"y\", 0)\n                            .attr(\"fill\", \"silver\")\n                            .attr(\"fill-opacity\", 0.5)\n                            .attr(\"transform\", \"translate(0,\" + zoomRectTranslateY + \")\");\n                    }\n                }\n\n\n                let axisContainerSize;\n                let brush, brushed;\n                if(vm._orientation === ORIENTATIONS.VERTICAL) {\n                    axisContainerSize = axisBboxZoomedOut.width;\n                    if(varScale instanceof ContinuousScale) {\n                        brushed = () => {\n                            if (!d3_event.sourceEvent) return;\n                            let s = d3_event.selection || scaleZoomedOut.range().slice().reverse();\n                            let s2 = s.map(scaleZoomedOut.invert, scaleZoomedOut);\n                            varScale.zoom(s2[1], s2[0]);\n                            stack.push(new HistoryEvent(\n                                EVENT_TYPES.SCALE, \n                                EVENT_SUBTYPES.SCALE_DOMAIN_FILTER, \n                                varScale.id, \n                                \"zoom\", \n                                [s2[1], s2[0]]\n                            ));\n                        }\n                    } else if(varScale instanceof CategoricalScale) {\n                        brushed = () => {\n                            if (!d3_event.sourceEvent) return;\n                            let s = d3_event.selection || scaleZoomedOut.range().slice().reverse();\n                            let eachBand = vm.pHeight / varScaleDomain.length;\n                            let startIndex = Math.floor((s[0] / eachBand));\n                            let endIndex = Math.ceil((s[1] / eachBand));\n                            varScale.zoom(startIndex, endIndex);\n                            stack.push(new HistoryEvent(\n                                EVENT_TYPES.SCALE, \n                                EVENT_SUBTYPES.SCALE_DOMAIN_FILTER,\n                                varScale.id, \n                                \"zoom\", \n                                [startIndex, endIndex]\n                            ));\n                        }\n                    }\n                    let brushExtent;\n                    if(vm._side === SIDES.LEFT) {\n                        brushExtent = [[-axisContainerSize-betweenAxisMargin, 0], [0, vm.pHeight]];\n                    } else if(vm._side === SIDES.RIGHT) {\n                        brushExtent = [[0, 0], [axisContainerSize+betweenAxisMargin, vm.pHeight]];\n                    }\n                    brush = d3_brushY()\n                        .extent(brushExtent)\n                        .on(\"end.\" + vm.axisElemID, brushed);\n                    \n                } else if(vm._orientation === ORIENTATIONS.HORIZONTAL) {\n                    axisContainerSize = axisBboxZoomedOut.height;\n                    if(varScale instanceof ContinuousScale) {\n                        brushed = () => {\n                            if (!d3_event.sourceEvent) return;\n                            let s = d3_event.selection || scaleZoomedOut.range().slice();\n                            let s2 = s.map(scaleZoomedOut.invert, scaleZoomedOut);\n                            varScale.zoom(s2[0], s2[1]);\n                            stack.push(new HistoryEvent(\n                                EVENT_TYPES.SCALE, \n                                EVENT_SUBTYPES.SCALE_DOMAIN_FILTER, \n                                varScale.id, \n                                \"zoom\", \n                                [s2[0], s2[1]]\n                            ));\n                        }\n                    } else if(varScale instanceof CategoricalScale) {\n                        brushed = () => {\n                            if (!d3_event.sourceEvent) return;\n                            let s = d3_event.selection || scaleZoomedOut.range().slice();\n                            let eachBand = vm.pWidth / varScaleDomain.length;\n                            let startIndex = Math.floor((s[0] / eachBand));\n                            let endIndex = Math.ceil((s[1] / eachBand));\n                            varScale.zoom(startIndex, endIndex);\n                            stack.push(new HistoryEvent(\n                                EVENT_TYPES.SCALE, \n                                EVENT_SUBTYPES.SCALE_DOMAIN_FILTER,\n                                varScale.id, \n                                \"zoom\", \n                                [startIndex, endIndex]\n                            ));\n                        }\n                    }\n                    let brushExtent;\n                    if(vm._side === SIDES.TOP) {\n                        brushExtent = [[0, -axisContainerSize-betweenAxisMargin], [vm.pWidth, 0]];\n                    } else if(vm._side === SIDES.BOTTOM) {\n                        brushExtent = [[0, 0], [vm.pWidth, axisContainerSize+betweenAxisMargin]];\n                    }\n                    brush = d3_brushX()\n                        .extent(brushExtent)\n                        .on(\"end.\" + vm.axisElemID, brushed);\n                }\n\n                if(varScale instanceof ContinuousScale) {\n                    let brushMoveDomain;\n                    if(vm._orientation === ORIENTATIONS.VERTICAL) {\n                        brushMoveDomain = scaleZoomedIn.domain().slice().reverse();\n                    } else if(vm._orientation === ORIENTATIONS.HORIZONTAL) {\n                        brushMoveDomain = scaleZoomedIn.domain().slice();\n                    }\n                    let brushMoveRange = brushMoveDomain.map(scaleZoomedOut);\n                    containerZoomedOut.append(\"g\")\n                        .attr(\"class\", \"brush\")\n                        .call(brush)\n                        .call(brush.move, brushMoveRange);\n                } else if(varScale instanceof CategoricalScale) {\n                    // Only allow \"moving\" of the brush if all domainFiltered elements are consecutive/no gaps between\n                    let hasGaps = false;\n                    let domain = varScaleDomain;\n                    let domainFiltered = varScaleDomainFiltered;\n                    let currDomainIndex = null;\n                    for(let domainFilteredElement of domainFiltered) {\n                        let elementIndex = domain.indexOf(domainFilteredElement);\n                        if(elementIndex === -1) {\n                            hasGaps = true; // stop if encounter any elements of filteredDomain that are not found in domain\n                            break;\n                        }\n                        if(currDomainIndex === null) {\n                            currDomainIndex = elementIndex;\n                        } else if(elementIndex - currDomainIndex > 1) {\n                            hasGaps = true;\n                            break;\n                        }\n                        currDomainIndex = elementIndex;\n                    }\n\n                    if(hasGaps) {\n                        // Do not allow \"moving\"\n                        containerZoomedOut.append(\"g\")\n                            .attr(\"class\", \"brush\")\n                            .call(brush);\n                    } else {\n                        // No gaps, allow \"moving\"\n                        let eachBand;\n                        if(vm._orientation === ORIENTATIONS.HORIZONTAL) {\n                            eachBand = vm.pWidth / varScaleDomain.length;\n                        } else if(vm._orientation === ORIENTATIONS.VERTICAL) {\n                            eachBand = vm.pHeight / varScaleDomain.length;\n                        }\n                        \n                        let brushMoveRange = [scaleZoomedOut(domainFiltered[0]), scaleZoomedOut(domainFiltered[domainFiltered.length - 1]) + eachBand];\n                        containerZoomedOut.append(\"g\")\n                            .attr(\"class\", \"brush\")\n                            .call(brush)\n                            .call(brush.move, brushMoveRange);\n                    }\n                }\n                \n\n\n            } // end if not disable brushing\n            \n            /*\n             * Axis label text\n             */\n\n            const containerLabel = container.append(\"g\")\n                    .attr(\"class\", \"axis-label\")\n                    .attr(\"transform\", \"translate(\" + zoomedOutTranslateX + \",\" + zoomedOutTranslateY + \")\");\n            \n            const labelText = containerLabel.append(\"text\")\n                .style(\"text-anchor\", \"middle\")\n                .style(\"font-family\", \"Avenir\")\n                .text(varScale.name);\n\n            let labelTextBbox;\n            try {\n                labelTextBbox = labelText.node().getBBox();\n                if(d3Node) {\n                    throw new Error(\"no bbox, use catch block\");\n                }\n            } catch(e) {\n                if(vm._orientation === ORIENTATIONS.HORIZONTAL) {\n                    labelTextBbox = {\n                        height: vm.computedHeight / 2,\n                        width: 0\n                    };\n                } else if(vm._orientation === ORIENTATIONS.VERTICAL) {\n                    labelTextBbox = {\n                        height: vm.computedWidth / 2,\n                        width: 0\n                    };\n                }\n            }\n\n            if(disableBrushing) {\n                axisBboxZoomedOut = { width: 0, height: 0 };\n            }\n\n            let labelX, labelY, labelRotate;\n            if(vm._side === SIDES.LEFT) {\n                labelY = -(axisBboxZoomedOut.width + (labelTextBbox.height / 2));\n                labelX = -(vm.pHeight / 2);\n                labelRotate = -90;\n            } else if(vm._side === SIDES.BOTTOM) {\n                labelX = (vm.pWidth / 2);\n                labelY = (axisBboxZoomedOut.height + (labelTextBbox.height / 2) + (betweenAxisMargin * 2));\n                labelRotate = 0;\n            } else if(vm._side === SIDES.TOP) {\n                labelX = (vm.pWidth / 2);\n                labelY = -(axisBboxZoomedOut.height + (labelTextBbox.height / 2));\n                labelRotate = 0;\n            } else if(vm._side === SIDES.RIGHT) {\n                labelY = -(axisBboxZoomedOut.width + (labelTextBbox.height / 2));\n                labelX = (vm.pHeight / 2);\n                labelRotate = 90;\n            }\n\n            labelText\n                .attr(\"x\", labelX)\n                .attr(\"y\", labelY)\n                .attr(\"transform\", \"rotate(\" + labelRotate + \")\");\n            \n            if(!vm.showLabel) {\n                labelText.attr(\"fill-opacity\", 0);\n            }\n            \n        }\n    }\n}\n</script>\n\n<style>\n@import '../../style/axis-style.css';\n</style>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Axis.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Axis.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Axis.vue?vue&type=template&id=ed0b8dde&\"\nimport script from \"./Axis.vue?vue&type=script&lang=js&\"\nexport * from \"./Axis.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Axis.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"vdp-axis\",style:({\n        'height': this.computedHeight + 'px', \n        'width': this.computedWidth + 'px',\n        'top': this.computedTop + 'px',\n        'left': this.computedLeft + 'px'\n    }),attrs:{\"id\":this.axisElemID}},[_c('svg',{attrs:{\"width\":this.computedWidth,\"height\":this.computedHeight,\"xmlns\":\"http://www.w3.org/2000/svg\"}}),_c('div',{staticClass:\"vdp-genome-input\",style:({ 'left': this.computedTranslateX + 'px' })},[_c('label',[_vm._v(\"Chromosome\")]),_vm._v(\" \\n        \"),_c('select',{on:{\"change\":_vm.onChromosomeChange}},[_c('option',{attrs:{\"value\":\"*\"},domProps:{\"selected\":_vm.isWholeGenome}},[_vm._v(\"*\")]),_vm._l((_vm.allChromosomes),function(chromosomeName){return _c('option',{key:chromosomeName,domProps:{\"selected\":_vm.selectedChromosome === chromosomeName}},[_vm._v(_vm._s(chromosomeName))])})],2),_vm._v(\" \\n        \"),(_vm.isSingleChromosome)?_c('span',[_c('input',{attrs:{\"type\":\"text\"},domProps:{\"value\":_vm.selectedChromosomeStart.toLocaleString()},on:{\"change\":_vm.onChromosomeStartChange}}),_vm._v(\"\\n             - \\n            \"),_c('input',{attrs:{\"type\":\"text\"},domProps:{\"value\":_vm.selectedChromosomeEnd.toLocaleString()},on:{\"change\":_vm.onChromosomeEndChange}}),_vm._v(\"\\n             \\n            \"),_c('button',{on:{\"click\":_vm.onChromosomeShiftLeft}},[_vm._v(\"<<\")]),_c('button',{on:{\"click\":_vm.onChromosomeShiftRight}},[_vm._v(\">>\")]),_vm._v(\"\\n             \\n            \"),_c('button',{on:{\"click\":_vm.onChromosomeZoomIn}},[_vm._v(\"+\")]),_c('button',{on:{\"click\":_vm.onChromosomeZoomOut}},[_vm._v(\"-\")])]):_vm._e()])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\nimport AbstractScaleDispatcher from \"./AbstractScaleDispatcher.js\";\nimport { sum as d3_sum } from \"d3-array\";\n\nexport const CHROMOSOMES = [\n    '1',\n    '2', \n    '3', \n    '4', \n    '5', \n    '6', \n    '7', \n    '8', \n    '9', \n    '10', \n    '11', \n    '12', \n    '13', \n    '14', \n    '15', \n    '16', \n    '17', \n    '18', \n    '19', \n    '20', \n    '21', \n    '22', \n    'X', \n    'Y', \n    'M'\n];\n\nexport const CHROMOSOME_LENGTHS = {\n    '1': 249250621,\n    '2': 243199373,\n    '3': 198022430,\n    '4': 191154276,\n    '5': 180915260,\n    '6': 171115067,\n    '7': 159138663,\n    '8': 146364022,\n    '9': 141213431,\n    '10': 135534747,\n    '11': 135006516,\n    '12': 133851895,\n    '13': 115169878,\n    '14': 107349540,\n    '15': 102531392,\n    '16': 90354753,\n    '17': 81195210,\n    '18': 78077248,\n    '19': 59128983,\n    '20': 63025520,\n    '21': 48129895,\n    '22': 51304566,\n    'X': 155270560,\n    'Y': 59373566,\n    'M': 16571\n};\n\n/**\n * Scale class for a genome variable.\n * Note: this does NOT inherit from AbstractScale.\n */\nexport default class GenomeScale extends AbstractScaleDispatcher {\n\n    /**\n     * Create a genomic scale.\n     * @param {*} id The ID for the scale.\n     * @param {*} name The name for the scale.\n     */\n    constructor(id, name) {\n        super();\n        this._id = id;\n        this._name = name;\n\n        this._chromosomes = CHROMOSOMES;\n        this._chromosomesFiltered = CHROMOSOMES.slice();\n\n        this._domains = CHROMOSOMES.map((el) => [0, CHROMOSOME_LENGTHS[el]]);\n        this._domainsFiltered = this._domains.slice();\n    }\n    \n    /**\n     * @returns {string} The ID for the scale.\n     */\n    get id() {\n        return this._id;\n    }\n    \n    /**\n     * @returns {string} The name for the scale.\n     */\n    get name() {\n        return this._name;\n    }\n\n    /**\n     * @returns {array} Array of chromosome names.\n     */\n    get chromosomes() {\n        return this._chromosomes;\n    }\n\n    /**\n     * @returns {array} Filtered array of chromosome names.\n     */\n    get chromosomesFiltered() {\n        return this._chromosomesFiltered;\n    }\n\n    /**\n     * @param {string} chromosome A chromosome name.\n     * @returns {array} Tuple-like array of inter-chromosome domain.\n     */\n    getDomain(chromosome) {\n        return this._domains[this._chromosomes.indexOf(chromosome)];\n    }\n\n    /**\n     * @returns {array} Array of tuple-like arrays of inter-chromosome domains.\n     */\n    getDomains() {\n        return this._domains;\n    }\n\n    /**\n     * @param {string} chromosome A chromosome name.\n     * @returns {array} Tuple-like array of inter-chromosome domain filtered.\n     */\n    getDomainFiltered(chromosome) {\n        return this._domainsFiltered[this._chromosomesFiltered.indexOf(chromosome)];\n    }\n\n    /**\n     * @returns {array} Array of tuple-like arrays of inter-chromosome domains filtered.\n     */\n    getDomainsFiltered() {\n        return this._domainsFiltered;\n    }\n\n    /**\n     * @returns {array} Array of ratios corresponding to chromosome length over genome length.\n     */\n    getChromosomeRatios() {\n        let cumsum = this._domains.reduce((a, h) => (a + (h[1] - h[0])), 0);\n        return this._domains.map((el) => ((el[1] - el[0]) / cumsum));\n    }\n\n    /**\n     * @returns {array} Array of ratios corresponding to chromosome length over genome length, for filtered chromosomes.\n     */\n    getChromosomeRatiosFiltered() {\n        let cumsum = this._domainsFiltered.reduce((a, h) => (a + (h[1] - h[0])), 0);\n        return this._domainsFiltered.map((el) => ((el[1] - el[0]) / cumsum));\n    }\n\n    /**\n     * @returns {array} Array of cumulative ratios corresponding to chromosome length over genome length.\n     */\n    getChromosomeRatiosCumulative() {\n        let ratios = this.getChromosomeRatios();\n        let ratiosCumulative = [];\n        let curr = 0;\n        for(let ratio of ratios) {\n            ratiosCumulative.push(curr);\n            curr += ratio;\n        }\n        return ratiosCumulative;\n    }\n\n    /**\n     * @returns {array} Array of cumulative ratios corresponding to chromosome length over genome length, for filtered chromosomes.\n     */\n    getChromosomeRatiosCumulativeFiltered() {\n        let ratios = this.getChromosomeRatiosFiltered();\n        let ratiosCumulative = [];\n        let curr = 0;\n        for(let ratio of ratios) {\n            ratiosCumulative.push(curr);\n            curr += ratio;\n        }\n        return ratiosCumulative;\n    }\n\n    /**\n     * Converts a genomic position to a proportion over the whole genome\n     * @param {string} chromosome The chromosome\n     * @param {number} position The position on the \n     * @returns {float} Ratio of position to total genome length\n     */\n    convertPositionToRatio(chromosome, position) {\n        let genomeLength = d3_sum(this._domains.map((el) => (el[1] - el[0])));\n        let chromosomeIndex = this._chromosomes.indexOf(chromosome);\n        return this._chromosomes.reduce((a, h) => {\n            let curr = a;\n            let currChromosomeIndex = this._chromosomes.indexOf(h);\n            let currChromosomeDomain = this._domains[currChromosomeIndex];\n            if(currChromosomeIndex == chromosomeIndex) {\n                curr += (position - currChromosomeDomain[0]);\n            } else if(currChromosomeIndex < chromosomeIndex) {\n                curr += (currChromosomeDomain[1] - currChromosomeDomain[0]);\n            }\n            return curr;\n        }, 0) / genomeLength;\n    }\n\n    /**\n     * Converts a genomic position to a proportion over the whole genome\n     * @param {string} chromosome The chromosome\n     * @param {number} position The position on the \n     * @returns {float} Ratio of position to total genome length\n     */\n    convertPositionToRatioFiltered(chromosome, position) {\n        let genomeLength = d3_sum(this._domainsFiltered.map((el) => (el[1] - el[0])));\n        let chromosomeIndex = this._chromosomesFiltered.indexOf(chromosome);\n        return this._chromosomesFiltered.reduce((a, h) => {\n            let curr = a;\n            let currChromosomeIndex = this._chromosomesFiltered.indexOf(h);\n            let currChromosomeDomain = this._domainsFiltered[currChromosomeIndex];\n            if(currChromosomeIndex == chromosomeIndex) {\n                curr += (position - currChromosomeDomain[0]);\n            } else if(currChromosomeIndex < chromosomeIndex) {\n                curr += (currChromosomeDomain[1] - currChromosomeDomain[0]);\n            }\n            return curr;\n        }, 0) / genomeLength;\n    }\n    \n    /**\n     * Convert a domain value to a human-readable value.\n     * @param {string} chromosome A chromosome value.\n     * @param {number} position A chromosome position value.\n     * @returns {string} The corresponding humanDomain value.\n     */\n    toHuman(chromosome, position) {\n        // TODO: number format for commas, etc...\n        return \"chr\" + chromosome + \":\" + position; \n    }\n    \n    /**\n     * Filter by limiting to a single chromosome.\n     * @param {string} selectedChromosome The chromosome to select.\n     */\n    filterByChromosome(selectedChromosome) {\n        let chromosomeIndex = this._chromosomes.indexOf(selectedChromosome);\n        this._chromosomesFiltered = [selectedChromosome];\n        this._domainsFiltered = [this._domains[chromosomeIndex]];\n        this.emitUpdate();\n    }\n\n    /**\n     * Filter by limiting to a single chromosome and specific position.\n     * @param {string} selectedChromosome The chromosome to select.\n     * @param {number} start The start position.\n     * @param {number} end The end position.\n     */\n    filterByChromosomeAndPosition(selectedChromosome, start, end) {\n        this._chromosomesFiltered = [selectedChromosome];\n        this._domainsFiltered = [[start, end]];\n        this.emitUpdate();\n    }\n\n    /**\n     * Resets the filtered domain, using the full original domain.\n     */\n    resetFilter() {\n        this._domainsFiltered = this._domains.slice();\n        this._chromosomesFiltered = this._chromosomes.slice();\n        this.emitUpdate();\n    }\n\n   \n}","<template>\n    <div \n        :id=\"this.axisElemID\" \n        class=\"vdp-axis\" \n        :style=\"{\n            'height': this.computedHeight + 'px', \n            'width': this.computedWidth + 'px',\n            'top': this.computedTop + 'px',\n            'left': this.computedLeft + 'px'\n        }\"\n    >\n        <svg :width=\"this.computedWidth\" :height=\"this.computedHeight\" xmlns=\"http://www.w3.org/2000/svg\"></svg>\n        <div class=\"vdp-genome-input\" :style=\"{ 'left': this.computedTranslateX + 'px' }\">\n            <label>Chromosome</label>&nbsp;\n            <select @change=\"onChromosomeChange\">\n                <option value=\"*\" :selected=\"isWholeGenome\">*</option>\n                <option v-for=\"chromosomeName in allChromosomes\" \n                    :key=\"chromosomeName\"\n                    :selected=\"selectedChromosome === chromosomeName\"\n                >{{ chromosomeName }}</option>\n            </select>&nbsp;\n            <span v-if=\"isSingleChromosome\">\n                <input type=\"text\" :value=\"selectedChromosomeStart.toLocaleString()\" @change=\"onChromosomeStartChange\"/>\n                &nbsp;-&nbsp;\n                <input type=\"text\" :value=\"selectedChromosomeEnd.toLocaleString()\" @change=\"onChromosomeEndChange\"/>\n                &nbsp;\n                <button @click=\"onChromosomeShiftLeft\">&lt;&lt;</button>\n                <button @click=\"onChromosomeShiftRight\">&gt;&gt;</button>\n                &nbsp;\n                <button @click=\"onChromosomeZoomIn\">+</button>\n                <button @click=\"onChromosomeZoomOut\">-</button>\n            </span>\n        </div>\n    </div>\n</template>\n\n<script>\nimport { scaleLinear as d3_scaleLinear } from 'd3-scale';\nimport { select as d3_select } from 'd3-selection';\nimport { axisTop as d3_axisTop, axisLeft as d3_axisLeft, axisRight as d3_axisRight, axisBottom as d3_axisBottom } from 'd3-axis';\nimport { zip as d3_zip } from 'd3-array';\n\nimport GenomeScale from './../../scales/GenomeScale.js';\nimport HistoryEvent from './../../history/HistoryEvent.js';\nimport HistoryStack from './../../history/HistoryStack.js';\n\nimport { EVENT_TYPES, EVENT_SUBTYPES } from './../../history/base-events.js';\n\nconst SIDES = Object.freeze({ \"TOP\": 1, \"LEFT\": 2, \"RIGHT\": 3, \"BOTTOM\": 4 });\nconst ORIENTATIONS = Object.freeze({ \"VERTICAL\": 1, \"HORIZONTAL\": 2 }); // vertical = left/right, horizontal = top/bottom\n\nlet uuid = 0;\n/**\n * @prop {string} scaleKey The key for the genome scale instance, passed to getScale.\n * @prop {string} side The side for the scale.\n * @prop {number} pWidth The plot width.\n * @prop {number} pHeight The plot height.\n * @prop {number} pMarginTop The plot top margin.\n * @prop {number} pMarginLeft The plot left margin.\n * @prop {number} pMarginRight The plot right margin.\n * @prop {number} pMarginBottom The plot bottom margin.\n * @prop {function} getScale Function that takes a scale key string and returns a scale instance.\n * @prop {function} getStack Function that returns a HistoryStack instance.\n * \n * @example\n * <GenomeAxis\n *      :scaleKey=\"genome_scale\"\n *      side=\"bottom\" \n *      :pWidth=\"500\"\n *      :pHeight=\"300\"\n *      :pMarginTop=\"10\"\n *      :pMarginLeft=\"120\"\n *      :pMarginRight=\"10\"\n *      :pMarginBottom=\"150\"\n *      :getScale=\"getScale\"\n *      :getStack=\"getStack\"\n *  />\n */\nexport default {\n    name: 'GenomeAxis',\n    props: {\n        'scaleKey': {\n            type: String\n        },\n        'side': {\n            type: String\n        },\n        'pWidth': {\n            type: Number\n        },\n        'pHeight': {\n            type: Number\n        },\n        'pMarginTop': {\n            type: Number\n        },\n        'pMarginLeft': {\n            type: Number\n        },\n        'pMarginRight': {\n            type: Number\n        },\n        'pMarginBottom': {\n            type: Number\n        },\n        'getScale': {\n            type: Function\n        },\n        'getStack': {\n            type: Function\n        }\n    },\n    data() {\n        return {\n            isSingleChromosome: false,\n            isWholeGenome: false,\n            selectedChromosome: null,\n            selectedChromosomeStart: null,\n            selectedChromosomeEnd: null\n        }\n    },\n    computed: {\n        axisElemID: function() {\n            return 'g_axis_' + this.uuid;\n        },\n        axisSelector: function() {\n            return \"#\" + this.axisElemID;\n        },\n        computedWidth: function() {\n            if(this._side === SIDES.BOTTOM || this._side === SIDES.TOP) {\n                return this.pMarginLeft + this.pWidth + this.pMarginRight;\n            } else if(this._side === SIDES.LEFT) {\n                return this.pMarginLeft + 1;\n            } else if(this._side === SIDES.RIGHT) {\n                return this.pMarginRight;\n            }\n        },\n        computedHeight: function() {\n            if(this._side === SIDES.LEFT || this._side === SIDES.RIGHT) {\n                return this.pMarginTop + this.pHeight + this.pMarginBottom;\n            } else if(this._side === SIDES.TOP) {\n                return this.pMarginTop + 1;\n            } else if(this._side === SIDES.BOTTOM) {\n                return this.pMarginBottom;\n            }\n        },\n        computedTop: function() {\n            if(this._side === SIDES.BOTTOM) {\n                return this.pMarginTop + this.pHeight;\n            }\n            return 0;\n        },\n        computedLeft: function() {\n            if(this._side === SIDES.RIGHT) {\n                return this.pMarginLeft + this.pWidth;\n            }\n            return 0;\n        },\n        computedTranslateX: function() {\n            if(this._side === SIDES.LEFT) {\n                return this.pMarginLeft;\n            } else if(this._side === SIDES.BOTTOM || this._side === SIDES.TOP) {\n                return this.pMarginLeft;\n            }\n            return 0;\n        },\n        computedTranslateY: function() {\n            if(this._side === SIDES.LEFT) {\n                return this.pMarginTop;\n            } else if(this._side === SIDES.RIGHT) {\n                return this.pMarginTop;\n            } else if(this._side === SIDES.TOP) {\n                return this.pMarginTop;\n            }\n            return 0;\n        },\n        allChromosomes: function() {\n            return this._varScale.chromosomes;\n        }\n    },\n    watch: {\n        pWidth: function () {\n            this.drawAxis();\n        },\n        pHeight: function () {\n            this.drawAxis();\n        }\n    },\n    beforeCreate() {\n        this.uuid = this.$options.name + uuid.toString();\n        uuid += 1;\n    },\n    created() {\n        // Set side and orientation enum values from side prop\n        let sideString = this.side.toUpperCase();\n        console.assert(Object.keys(SIDES).includes(sideString));\n        this._side = SIDES[sideString];\n        this._orientation = (this._side === SIDES.TOP || this._side === SIDES.BOTTOM ? ORIENTATIONS.HORIZONTAL : ORIENTATIONS.VERTICAL);\n\n        console.assert(this._side === SIDES.BOTTOM); // TODO: implement for other sides\n        \n        // Set the scale variable\n        this._varScale = this.getScale(this.scaleKey);\n        console.assert(this._varScale instanceof GenomeScale);\n        // Subscribe to event publishers\n        this._varScale.onUpdate(this.uuid, this.drawAxis);\n\n        this._stack = this.getStack();\n        console.assert(this._stack instanceof HistoryStack);\n    },\n    mounted() {\n        this.drawAxis();\n    },\n    beforeDestroy() {\n        // Unsubscribe to events\n        this._varScale.onUpdate(this.uuid, null);\n        this.removeAxis();\n    },\n    methods: {\n        onChromosomeChange(e) {\n            if(e.target.value && e.target.value !== \"*\") {\n                this._varScale.filterByChromosome(e.target.value);\n                this._stack.push(new HistoryEvent(\n                    EVENT_TYPES.SCALE, \n                    EVENT_SUBTYPES.SCALE_DOMAIN_FILTER, \n                    this.scaleKey, \n                    \"filterByChromosome\", \n                    [e.target.value]\n                ));\n            } else {\n                this._varScale.resetFilter();\n                this._stack.push(new HistoryEvent(\n                    EVENT_TYPES.SCALE, \n                    EVENT_SUBTYPES.SCALE_DOMAIN_FILTER,\n                    this.scaleKey, \n                    \"resetFilter\"\n                ));\n            }\n        },\n        onChromosomeStartChange(e) {\n            let val = e.target.value;\n            val = parseInt(val.replace( /[^0-9]+/g, ''));\n\n            let chromosomeDomain = this._varScale.getDomain(this.selectedChromosome);\n            if(val !== this.selectedChromosomeStart && val >= chromosomeDomain[0] && val <= chromosomeDomain[1]) {\n                this._varScale.filterByChromosomeAndPosition(this.selectedChromosome, val, this.selectedChromosomeEnd);\n                this._stack.push(new HistoryEvent(\n                    EVENT_TYPES.SCALE, \n                    EVENT_SUBTYPES.SCALE_DOMAIN_FILTER, \n                    this.scaleKey, \n                    \"filterByChromosomeAndPosition\", \n                    [this.selectedChromosome, val, this.selectedChromosomeEnd]\n                ));\n            }\n        },\n        onChromosomeEndChange(e) {\n            let val = e.target.value;\n            val = parseInt(val.replace( /[^0-9]+/g, ''));\n\n            let chromosomeDomain = this._varScale.getDomain(this.selectedChromosome);\n            if(val !== this.selectedChromosomeEnd && val >= chromosomeDomain[0] && val <= chromosomeDomain[1]) {\n                this._varScale.filterByChromosomeAndPosition(this.selectedChromosome, this.selectedChromosomeStart, val);\n                this._stack.push(new HistoryEvent(\n                    EVENT_TYPES.SCALE, \n                    EVENT_SUBTYPES.SCALE_DOMAIN_FILTER, \n                    this.scaleKey, \n                    \"filterByChromosomeAndPosition\", \n                    [this.selectedChromosome, this.selectedChromosomeStart, val]\n                ));\n            }\n        },\n        onChromosomeShiftLeft() {\n            let chromosomeDomain = this._varScale.getDomain(this.selectedChromosome);\n            let chromosomeDomainFiltered = this._varScale.getDomainFiltered(this.selectedChromosome);\n            let chromosomeRangeFiltered = chromosomeDomainFiltered[1] - chromosomeDomainFiltered[0];\n            let newStart = Math.max(chromosomeDomain[0], this.selectedChromosomeStart - Math.floor(chromosomeRangeFiltered / 2));\n            let newEnd = Math.max(chromosomeDomain[0] + 1, this.selectedChromosomeEnd - Math.floor(chromosomeRangeFiltered / 2));\n            if(this.selectedChromosomeStart > 0) {\n                this._varScale.filterByChromosomeAndPosition(this.selectedChromosome, newStart, newEnd);\n                this._stack.push(new HistoryEvent(\n                    EVENT_TYPES.SCALE, \n                    EVENT_SUBTYPES.SCALE_DOMAIN_FILTER, \n                    this.scaleKey, \n                    \"filterByChromosomeAndPosition\", \n                    [this.selectedChromosome, newStart, newEnd]\n                ));\n            }\n        },\n        onChromosomeShiftRight() {\n            let chromosomeDomain = this._varScale.getDomain(this.selectedChromosome);\n            let chromosomeDomainFiltered = this._varScale.getDomainFiltered(this.selectedChromosome);\n            let chromosomeRangeFiltered = chromosomeDomainFiltered[1] - chromosomeDomainFiltered[0];\n            let newStart = Math.min(chromosomeDomain[1] - 1, this.selectedChromosomeStart + Math.floor(chromosomeRangeFiltered / 2));\n            let newEnd = Math.min(chromosomeDomain[1], this.selectedChromosomeEnd + Math.floor(chromosomeRangeFiltered / 2));\n            if(this.selectedChromosomeEnd < chromosomeDomain[1]) {\n                this._varScale.filterByChromosomeAndPosition(this.selectedChromosome, newStart, newEnd);\n                this._stack.push(new HistoryEvent(\n                    EVENT_TYPES.SCALE, \n                    EVENT_SUBTYPES.SCALE_DOMAIN_FILTER, \n                    this.scaleKey, \n                    \"filterByChromosomeAndPosition\", \n                    [this.selectedChromosome, newStart, newEnd]\n                ));\n            }\n        },\n        onChromosomeZoomIn() {\n            let chromosomeDomainFiltered = this._varScale.getDomainFiltered(this.selectedChromosome);\n            let chromosomeRangeFiltered = chromosomeDomainFiltered[1] - chromosomeDomainFiltered[0];\n            let offset = Math.floor(chromosomeRangeFiltered / 4);\n            let newStart = this.selectedChromosomeStart + offset;\n            let newEnd = this.selectedChromosomeEnd - offset;\n            if(newStart !== this.selectedChromosomeStart || newEnd !== this.selectedChromosomeEnd) {\n                this._varScale.filterByChromosomeAndPosition(this.selectedChromosome, newStart, newEnd);\n                this._stack.push(new HistoryEvent(\n                    EVENT_TYPES.SCALE, \n                    EVENT_SUBTYPES.SCALE_DOMAIN_FILTER, \n                    this.scaleKey, \n                    \"filterByChromosomeAndPosition\", \n                    [this.selectedChromosome, newStart, newEnd]\n                ));\n            }\n        },\n        onChromosomeZoomOut() {\n            let chromosomeDomain = this._varScale.getDomain(this.selectedChromosome);\n            let chromosomeDomainFiltered = this._varScale.getDomainFiltered(this.selectedChromosome);\n            let chromosomeRangeFiltered = chromosomeDomainFiltered[1] - chromosomeDomainFiltered[0];\n            let offset = Math.floor(chromosomeRangeFiltered / 2);\n            let newStart = Math.max(chromosomeDomain[0], this.selectedChromosomeStart - offset);\n            let newEnd = Math.min(chromosomeDomain[1], this.selectedChromosomeEnd + offset);\n            if(newStart !== this.selectedChromosomeStart || newEnd !== this.selectedChromosomeEnd) {\n                this._varScale.filterByChromosomeAndPosition(this.selectedChromosome, newStart, newEnd);\n                this._stack.push(new HistoryEvent(\n                    EVENT_TYPES.SCALE, \n                    EVENT_SUBTYPES.SCALE_DOMAIN_FILTER, \n                    this.scaleKey, \n                    \"filterByChromosomeAndPosition\", \n                    [this.selectedChromosome, newStart, newEnd]\n                ));\n            }\n        },\n        removeAxis() {\n            d3_select(this.axisSelector).select(\"svg\").selectAll(\"g\").remove();\n        },\n        drawAxis(d3Node) {\n            const vm = this;\n            vm.removeAxis();\n            \n            const varScale = vm._varScale;\n\n            vm.isSingleChromosome = (vm._varScale.chromosomesFiltered.length === 1);\n            if(vm.isSingleChromosome) {\n                vm.selectedChromosome = vm._varScale.chromosomesFiltered[0];\n                let chromosomeDomain = vm._varScale.getDomainFiltered(vm.selectedChromosome);\n                vm.selectedChromosomeStart = chromosomeDomain[0];\n                vm.selectedChromosomeEnd = chromosomeDomain[1];\n            } else {\n                vm.selectedChromosome = null;\n                vm.selectedChromosomeStart = null;\n                vm.selectedChromosomeEnd = null;\n            }\n            vm.isWholeGenome = (vm._varScale.chromosomesFiltered.length === 25);\n            \n            \n            \n            let range;\n            if(vm._orientation === ORIENTATIONS.HORIZONTAL) {\n                range = [0, vm.pWidth];\n            } else if(vm._orientation === ORIENTATIONS.VERTICAL) {\n                range = [vm.pHeight, 0];\n            }\n\n            let axisFunction;\n            if(vm._side === SIDES.TOP) {\n                axisFunction = d3_axisTop;\n            } else if(vm._side === SIDES.LEFT) {\n                axisFunction = d3_axisLeft;\n            } else if(vm._side === SIDES.RIGHT) {\n                axisFunction = d3_axisRight;\n            } else if(vm._side === SIDES.BOTTOM) {\n                axisFunction = d3_axisBottom;\n            }\n\n            //let chromosomeRatiosCumulative = varScale.getChromosomeRatiosCumulative();\n            let chromosomeRatiosCumulativeFiltered = varScale.getChromosomeRatiosCumulativeFiltered();\n\n\n            //let chromosomeRatioZip = d3_zip(chromosomeRatiosCumulative, varScale.chromosomes);\n            let chromosomeRatioZipFiltered = d3_zip(chromosomeRatiosCumulativeFiltered, varScale.chromosomesFiltered);\n\n            const zipToMap = (zip) => {\n                let obj = {};\n                zip.forEach(function(data){\n                    obj[data[0]] = data[1]\n                });\n                return obj;\n            };\n\n            //let chromosomeRatioMap = zipToMap(chromosomeRatioZip);\n            let chromosomeRatioMapFiltered = zipToMap(chromosomeRatioZipFiltered);            \n            \n            let scaleZoomedIn = d3_scaleLinear()\n                .domain([0, 1])\n                .range(range);\n\n            /*\n             * Create the SVG elements\n             */\n            let container;\n            if(d3Node) {\n                container = d3Node;\n            } else {\n                container = d3_select(vm.axisSelector).select(\"svg\");\n            }\n                        \n            const containerZoomedIn = container.append(\"g\")\n                    .attr(\"class\", \"axis-zoomed-in\")\n                    .attr(\"transform\", \"translate(\" + vm.computedTranslateX + \",\" + vm.computedTranslateY + \")\");\n            \n            /*\n             * The zoomed-in axis\n             */\n            const ticksZoomedIn = containerZoomedIn.call(\n                axisFunction(scaleZoomedIn)\n                    .tickValues(chromosomeRatiosCumulativeFiltered)\n                    .tickFormat((d) => chromosomeRatioMapFiltered[d])\n            );\n\n            ticksZoomedIn.selectAll(\"text\")\t\n                    .style(\"text-anchor\", \"middle\");\n            \n            // Get the width/height of the zoomed-in axis, before removing the text\n            \n            let axisBboxZoomedIn;\n            try {\n                axisBboxZoomedIn = container.select(\".axis-zoomed-in\").node().getBBox();\n                if(d3Node) {\n                    throw new Error(\"no bbox, use catch block\");\n                }\n            } catch(e) {\n                axisBboxZoomedIn = {\n                    width: 0,\n                    height: vm.computedHeight/2,\n                };\n            }\n\n            if(vm.isSingleChromosome) {\n                let selectedChromosome = vm._varScale.chromosomesFiltered[0];\n                let chromosomeDomain = vm._varScale.getDomainFiltered(selectedChromosome);\n                \n                let scaleChromosome = d3_scaleLinear()\n                    .domain(chromosomeDomain)\n                    .range(range);\n                \n                const containerChromosome = container.append(\"g\")\n                    .attr(\"class\", \"axis-zoomed-in\")\n                    .attr(\"transform\", \"translate(\" + vm.computedTranslateX + \",\" + vm.computedTranslateY + \")\");\n                \n                containerChromosome.call(\n                    axisFunction(scaleChromosome)\n                );\n                ticksZoomedIn.selectAll(\"text\")\n                    .style(\"display\", \"none\")\n            }\n            \n\n            /*\n             * The zoomed-out axis\n             */\n            const betweenAxisMargin = 8;\n\n            let zoomedOutTranslateX = vm.computedTranslateX;\n            let zoomedOutTranslateY = vm.computedTranslateY;\n\n          \n            /*\n             * Axis label text\n             */\n\n            const containerLabel = container.append(\"g\")\n                    .attr(\"class\", \"axis-label\")\n                    .attr(\"transform\", \"translate(\" + zoomedOutTranslateX + \",\" + zoomedOutTranslateY + \")\");\n            \n            const labelText = containerLabel.append(\"text\")\n                .style(\"font-family\", \"Avenir\")\n                .style(\"text-anchor\", \"middle\")\n                .text(varScale.name);\n\n            let labelTextBbox;\n            try {\n                labelTextBbox = labelText.node().getBBox();\n            } catch(e) {\n                labelTextBbox = {\n                    width: 0,\n                    height: 0,\n                };\n            }\n\n\n            let labelX, labelY, labelRotate;\n            if(vm._side === SIDES.LEFT) {\n                labelY = -(axisBboxZoomedIn.width + (labelTextBbox.height / 2));\n                labelX = -(vm.pHeight / 2);\n                labelRotate = -90;\n            } else if(vm._side === SIDES.BOTTOM) {\n                labelX = (vm.pWidth / 2);\n                labelY = (axisBboxZoomedIn.height + (labelTextBbox.height / 2) + betweenAxisMargin);\n                labelRotate = 0;\n            } else if(vm._side === SIDES.TOP) {\n                labelX = (vm.pWidth / 2);\n                labelY = -(axisBboxZoomedIn.height + (labelTextBbox.height / 2));\n                labelRotate = 0;\n            } else if(vm._side === SIDES.RIGHT) {\n                labelY = -(axisBboxZoomedIn.width + (labelTextBbox.height / 2));\n                labelX = (vm.pHeight / 2);\n                labelRotate = 90;\n            }\n\n            labelText\n                .attr(\"x\", labelX)\n                .attr(\"y\", labelY)\n                .attr(\"transform\", \"rotate(\" + labelRotate + \")\");\n            \n        }\n    }\n}\n</script>\n\n<style>\n@import '../../style/axis-style.css';\n\n.vdp-genome-input {\n    position: absolute;\n    bottom: 4px;\n}\n</style>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./GenomeAxis.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./GenomeAxis.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./GenomeAxis.vue?vue&type=template&id=5334ed88&\"\nimport script from \"./GenomeAxis.vue?vue&type=script&lang=js&\"\nexport * from \"./GenomeAxis.vue?vue&type=script&lang=js&\"\nimport style0 from \"./GenomeAxis.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('canvas',{staticClass:\"vdp-axis\",style:({\n            'height': this.computedHeight + 'px', \n            'width': this.computedWidth + 'px',\n            'top': this.computedTop + 'px',\n            'left': this.computedLeft + 'px'\n        }),attrs:{\"id\":this.axisElemID}}),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(this.highlightX !== null && this.highlightY != null),expression:\"this.highlightX !== null && this.highlightY != null\"}],staticClass:\"vdp-axis-highlight\",style:({\n            'position': 'absolute',\n            'pointer-events': 'none',\n            'height': '14px', \n            'width': '14px',\n            'border-radius': '50%',\n            'opacity': 0.6,\n            'background-color': '#555',\n            'top': (this.computedTop + this.highlightY - 7) + 'px',\n            'left': (this.computedLeft + this.highlightX - 7) + 'px'\n        })})])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import { select as d3_select } from 'd3-selection';\n\nimport { getRetinaRatio } from './helpers.js';\n\n\nclass TwoRectangle {\n    constructor(x, y, width, height) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n\n        if(this.height < 0) {\n            // To fix bug with bar plots that have bars representing negative values.\n            this.height = this.height * -1;\n        }\n\n        this.stroke = \"#000\";\n        this.fill = \"#000\";\n        this.linewidth = 1;\n        this.opacity = 1;\n        this.rotation = null;\n    }\n\n    noFill() {\n        this.fill = null;\n    }\n\n    noStroke() {\n        this.stroke = null;\n    }\n}\n\nclass TwoCircle {\n    constructor(x, y, size) {\n        this.x = x;\n        this.y = y;\n        this.size = size;\n\n        this.stroke = \"#000\";\n        this.fill = \"#000\";\n        this.linewidth = 1;\n        this.opacity = 1;\n    }\n\n    noFill() {\n        this.fill = null;\n    }\n\n    noStroke() {\n        this.stroke = null;\n    }\n    \n}\n\nclass TwoLine {\n    constructor(x1, y1, x2, y2) {\n        this.x1 = x1;\n        this.y1 = y1;\n        this.x2 = x2;\n        this.y2 = y2;\n\n        this.stroke = \"#000\";\n        this.linewidth = 1;\n        this.opacity = 1;\n    }\n\n    noStroke() {\n        this.stroke = null;\n    }\n}\n\nclass TwoPath {\n    constructor(points) {\n        this.points = points;\n\n        this.stroke = \"#000\";\n        this.linewidth = 1;\n        this.opacity = 1;\n    }\n\n    noStroke() {\n        this.stroke = null;\n    }\n}\n\nclass TwoText {\n    constructor(x, y, width, height, text) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n\n        this.text = text\n\n        this.fill = \"#000\";\n\n        this.fontsize = 14;\n        this.font = 'Avenir,Helvetica,Arial,sans-serif';\n        this.textalign = \"center\";\n\n        this.linewidth = 1;\n        this.opacity = 1;\n        this.rotation = null;\n\n    }\n}\n\nexport default class Two {\n\n    constructor({ width, height, domElement }) {\n        this.width = width;\n        this.height = height;\n        this.domElement = domElement;\n\n        this.elements = [];\n\n        this.init();\n    }\n\n    initSvg() {\n        this.svg = d3_select(this.domElement);\n        this.svg\n            .attr(\"width\", this.width)\n            .attr(\"height\", this.height);\n        \n        this.g = this.svg\n            .append(\"g\")\n                .attr(\"width\", this.width)\n                .attr(\"height\", this.height);\n    }\n\n    initCanvas() {\n        const context = this.domElement.getContext('2d');\n        this.context = context;\n\n        const ratio = getRetinaRatio(context);\n        const scaledWidth = this.width * ratio;\n        const scaledHeight = this.height * ratio;\n\n        this.domElement.width = scaledWidth;\n        this.domElement.height = scaledHeight;\n        \n        context.scale(ratio, ratio);\n        this.ratio = ratio;\n    }\n\n    init() {\n        switch(this.domElement.nodeName.toLowerCase()) {\n            case 'canvas':\n                this.initCanvas();\n                break;\n            case 'svg':\n                this.initSvg();\n                break;\n            default:\n                console.warn(\"Unknown DOM element type.\");\n        }\n    }\n\n    makeRectangle(x, y, width, height) {\n        const rect = new TwoRectangle(x, y, width, height);\n        this.elements.push(rect);\n        return rect;\n    }\n\n    makeCircle(x, y, size) {\n        const circle = new TwoCircle(x, y, size);\n        this.elements.push(circle);\n        return circle;\n    }\n\n    makeLine(x1, y1, x2, y2) {\n        const line = new TwoLine(x1, y1, x2, y2);\n        this.elements.push(line);\n        return line;\n    }\n\n    makePath() {\n        const args = Array.from(arguments);\n        const points = [];\n        for(let i = 0; i < args.length; i += 2) {\n            points.push([ args[i], args[i+1] ]);\n        }\n\n        const path = new TwoPath(points);\n        this.elements.push(path);\n        return path;\n    }\n\n    makeText(x, y, width, height, text) {\n        const obj = new TwoText(x, y, width, height, text);\n        this.elements.push(obj);\n        return obj;\n    }\n\n    renderSvg() {\n        const g = this.g;\n        this.elements.forEach((d) => {\n            if(d instanceof TwoRectangle) {\n                const rect = g.append(\"rect\")\n                    .attr(\"x\", d.x - d.width/2)\n                    .attr(\"y\", d.y - d.height/2)\n                    .attr(\"width\", d.width)\n                    .attr(\"height\", d.height)\n                    .attr(\"opacity\", d.opacity);\n                \n                if(d.fill != null) {\n                    rect\n                        .attr(\"fill\", d.fill);\n                } else {\n                    rect\n                        .attr(\"fill\", \"transparent\");\n                }\n                if(d.stroke != null) {\n                    rect\n                        .attr(\"stroke-width\", d.linewidth)\n                        .attr(\"stroke\", d.stroke);\n                }\n                if(d.rotation != null) {\n                    rect\n                        .attr(\"transform\", `rotate(${d.rotation * 180/Math.PI},${d.x},${d.y})`);\n                }\n            } else if(d instanceof TwoCircle) {\n                const circle = g.append(\"circle\")\n                    .attr(\"cx\", d.x)\n                    .attr(\"cy\", d.y)\n                    .attr(\"r\", d.size)\n                    .attr(\"opacity\", d.opacity);\n                \n                if(d.fill != null) {\n                    circle\n                        .attr(\"fill\", d.fill);\n                } else {\n                    circle\n                        .attr(\"fill\", \"transparent\");\n                }\n                if(d.stroke != null) {\n                    circle\n                        .attr(\"stroke-width\", d.linewidth)\n                        .attr(\"stroke\", d.stroke);\n                }\n            } else if(d instanceof TwoLine) {\n                const line = g.append(\"line\")\n                    .attr(\"x1\", d.x1)\n                    .attr(\"y1\", d.y1)\n                    .attr(\"x2\", d.x2)\n                    .attr(\"y2\", d.y2)\n                    .attr(\"opacity\", d.opacity);\n                if(d.stroke != null) {\n                    line\n                        .attr(\"stroke-width\", d.linewidth)\n                        .attr(\"stroke\", d.stroke);\n                }\n            } else if(d instanceof TwoPath) {\n                const path = g.append(\"path\")\n                    .attr(\"opacity\", d.opacity);\n                \n                let pathD = \"\";\n                if(d.points.length > 1) {\n                    d.points.forEach((p, i) => {\n                        if(i == 0) {\n                            pathD += `M ${p[0]} ${p[1]}`;\n                        } else {\n                            pathD += `L ${p[0]} ${p[1]}`;\n                        }\n                    });\n                }\n\n                \n                if(d.stroke != null) {\n                    path\n                        .attr(\"stroke-width\", d.linewidth)\n                        .attr(\"stroke\", d.stroke);\n                }\n                path.attr(\"d\", pathD);\n            } else if(d instanceof TwoText) {\n                g.append(\"text\")\n                    .attr(\"x\", d.x)\n                    .attr(\"y\", d.y)\n                    .attr(\"text-anchor\", (d.textalign === 'center' ? 'middle' : (d.textalign === 'left' ? 'start' : 'end')))\n                    .attr(\"opacity\", d.opacity)\n                    .attr(\"fill\", d.fill)\n                    .attr(\"font-size\", d.fontsize)\n                    .attr(\"font-family\", d.font)\n                    .text(d.text);\n            }\n        });\n    }\n\n    renderCanvas() {\n        const context = this.context;\n\n        this.elements.forEach((d) => {\n            context.lineWidth = d.linewidth;\n            context.globalAlpha = d.opacity;\n\n            if(d instanceof TwoRectangle) {\n                if(d.rotation != null) {\n                    context.save();\n                    context.translate(d.x, d.y);\n                    context.rotate(d.rotation);\n                    context.translate(-d.x, -d.y);\n                }\n                if(d.fill != null) {\n                    context.fillStyle = d.fill;\n                    context.fillRect(d.x - d.width/2, d.y - d.height/2, d.width, d.height);\n                }\n                if(d.stroke != null) {\n                    context.strokeStyle = d.stroke;\n                    context.strokeRect(d.x - d.width/2, d.y - d.height/2, d.width, d.height);\n                }\n                if(d.rotation != null) {\n                    context.restore();\n                }\n            } else if(d instanceof TwoCircle) {\n                if(d.fill != null) {\n                    context.fillStyle = d.fill;\n                }\n                if(d.stroke != null) {\n                    context.strokeStyle = d.stroke;\n                }\n                context.beginPath();\n                context.arc(d.x, d.y, d.size, 0, 2*Math.PI);\n                if(d.fill != null) {\n                    context.fill();\n                }\n                if(d.stroke != null) {\n                    context.stroke();\n                }\n            } else if(d instanceof TwoLine) {\n                if(d.stroke != null) {\n                    context.strokeStyle = d.stroke;\n                }\n                context.beginPath();\n                context.moveTo(d.x1, d.y1);\n                context.lineTo(d.x2, d.y2);\n                if(d.stroke != null) {\n                    context.stroke();\n                }\n            } else if(d instanceof TwoPath) {\n                if(d.stroke != null) {\n                    context.strokeStyle = d.stroke;\n                }\n                if(d.points.length > 1) {\n                    context.beginPath();\n                    d.points.forEach((p, i) => {\n                        if(i == 0) {\n                            context.moveTo(p[0], p[1]);\n                        } else {\n                            context.lineTo(p[0], p[1]);\n                        }\n                    });\n                }\n                if(d.stroke != null) {\n                    context.stroke();\n                }\n            } else if(d instanceof TwoText) {\n                context.font = `${d.fontsize}px ${d.font}`;\n                context.fillStyle = d.fill;\n                context.textAlign = d.textalign;\n                context.fillText(d.text, d.x, d.y); \n            }\n        });\n    }\n\n    update() {\n        switch(this.domElement.nodeName.toLowerCase()) {\n            case 'canvas':\n                this.renderCanvas();\n                break;\n            case 'svg':\n                this.renderSvg();\n                break;\n            default:\n                console.warn(\"Unknown DOM element type.\");\n        }\n    }\n}","export const TOOLTIP_DEBOUNCE = 250;\n\nexport const BAR_MARGIN_DEFAULT = 2;\nexport const BAR_WIDTH_MIN = 4;\nexport const BAR_HEIGHT_MIN = 4;\n\nexport const GENOME_EVENT_COLOR_DEFAULT = \"#000000\";\n","<template>\n    <div>\n        <canvas \n            :id=\"this.axisElemID\" \n            class=\"vdp-axis\" \n            :style=\"{\n                'height': this.computedHeight + 'px', \n                'width': this.computedWidth + 'px',\n                'top': this.computedTop + 'px',\n                'left': this.computedLeft + 'px'\n            }\"\n        ></canvas>\n        <div v-show=\"this.highlightX !== null && this.highlightY != null\" \n            :style=\"{\n                'position': 'absolute',\n                'pointer-events': 'none',\n                'height': '14px', \n                'width': '14px',\n                'border-radius': '50%',\n                'opacity': 0.6,\n                'background-color': '#555',\n                'top': (this.computedTop + this.highlightY - 7) + 'px',\n                'left': (this.computedLeft + this.highlightX - 7) + 'px'\n            }\"\n            class=\"vdp-axis-highlight\"\n        ></div>\n    </div>\n</template>\n\n<script>\nimport Two from '../../two.js';\nimport { select as d3_select } from 'd3-selection';\nimport { cluster as d3_cluster, hierarchy as d3_hierarchy } from 'd3-hierarchy';\nimport { mouse as d3_mouse } from 'd3';\nimport debounce from 'lodash/debounce';\nimport { TOOLTIP_DEBOUNCE } from './../../constants.js';\n\nimport AbstractScale from './../../scales/AbstractScale.js';\nimport DataContainer from './../../data/DataContainer.js';\nimport HistoryEvent from './../../history/HistoryEvent.js';\nimport HistoryStack, { computedParam } from './../../history/HistoryStack.js';\nimport { filterHierarchy, getDelaunay } from '../../helpers.js';\n\n\nimport { EVENT_TYPES, EVENT_SUBTYPES } from './../../history/base-events.js';\n\nconst SIDES = Object.freeze({ \"TOP\": 1, \"LEFT\": 2, \"RIGHT\": 3, \"BOTTOM\": 4 });\nconst ORIENTATIONS = Object.freeze({ \"VERTICAL\": 1, \"HORIZONTAL\": 2 }); // vertical = left/right, horizontal = top/bottom\n\nlet uuid = 0;\n/**\n * @prop {string} variable The axis variable key.\n * @prop {string} h The hierarchy data container key (passed to getData).\n * @prop {string} side The side for the scale.\n * @prop {number} pWidth The plot width.\n * @prop {number} pHeight The plot height.\n * @prop {number} pMarginTop The plot top margin.\n * @prop {number} pMarginLeft The plot left margin.\n * @prop {number} pMarginRight The plot right margin.\n * @prop {number} pMarginBottom The plot bottom margin.\n * @prop {function} getScale Function that takes a scale key string and returns a scale instance.\n * @prop {function} getStack Function that returns a HistoryStack instance.\n * @prop {function} getData Function that takes a data key string and returns a DataContainer instance.\n * \n * @example\n * <DendrogramAxis\n *      variable=\"sample_id\"\n *      h=\"sample_clusters\"\n *      side=\"top\"\n *      :pWidth=\"500\"\n *      :pHeight=\"300\"\n *      :pMarginTop=\"300\"\n *      :pMarginLeft=\"10\"\n *      :pMarginRight=\"10\"\n *      :pMarginBottom=\"10\"\n *      :getData=\"getData\"\n *      :getScale=\"getScale\"\n *      :getStack=\"getStack\"\n *  />\n */\nexport default {\n    name: 'DendrogramAxis',\n    props: {\n        'variable': {\n            type: String\n        },\n        'h': {\n            type: String // hierarcy data container\n        },\n        'side': {\n            type: String\n        },\n        'pWidth': {\n            type: Number\n        },\n        'pHeight': {\n            type: Number\n        },\n        'pMarginTop': {\n            type: Number\n        },\n        'pMarginLeft': {\n            type: Number\n        },\n        'pMarginRight': {\n            type: Number\n        },\n        'pMarginBottom': {\n            type: Number\n        },\n        'getData': {\n            type: Function\n        },\n        'getScale': {\n            type: Function\n        },\n        'getStack': {\n            type: Function\n        }\n    },\n    data() {\n        return {\n            highlightX: null,\n            highlightY: null,\n        }\n    },\n    computed: {\n        axisElemID: function() {\n            return 'd_axis_' + this.uuid;\n        },\n        axisSelector: function() {\n            return \"#\" + this.axisElemID;\n        },\n        computedWidth: function() {\n            if(this._side === SIDES.BOTTOM || this._side === SIDES.TOP) {\n                return this.pMarginLeft + this.pWidth + this.pMarginRight;\n            } else if(this._side === SIDES.LEFT) {\n                return this.pMarginLeft;\n            } else if(this._side === SIDES.RIGHT) {\n                return this.pMarginRight;\n            }\n        },\n        computedHeight: function() {\n            if(this._side === SIDES.LEFT || this._side === SIDES.RIGHT) {\n                return this.pMarginTop + this.pHeight + this.pMarginBottom;\n            } else if(this._side === SIDES.TOP) {\n                return this.pMarginTop;\n            } else if(this._side === SIDES.BOTTOM) {\n                return this.pMarginBottom;\n            }\n        },\n        computedTop: function() {\n            if(this._side === SIDES.BOTTOM) {\n                return this.pMarginTop + this.pHeight;\n            }\n            return 0;\n        },\n        computedLeft: function() {\n            if(this._side === SIDES.RIGHT) {\n                return this.pMarginLeft + this.pWidth;\n            }\n            return 0;\n        },\n        computedTranslateX: function() {\n            if(this._side === SIDES.BOTTOM || this._side === SIDES.TOP) {\n                return this.pMarginLeft;\n            }\n            return 0;\n        },\n        computedTranslateY: function() {\n            if(this._side === SIDES.LEFT || this._side === SIDES.RIGHT) {\n                return this.pMarginTop;\n            }\n            return 0;\n        }\n    },\n    watch: {\n        pWidth: function () {\n            this.drawAxis();\n        },\n        pHeight: function () {\n            this.drawAxis();\n        }\n    },\n    beforeCreate() {\n        this.uuid = this.$options.name + uuid.toString();\n        uuid += 1;\n    },\n    created() {\n        // Set side and orientation enum values from side prop\n        let sideString = this.side.toUpperCase();\n        console.assert(Object.keys(SIDES).includes(sideString));\n        this._side = SIDES[sideString];\n        this._orientation = (this._side === SIDES.TOP || this._side === SIDES.BOTTOM ? ORIENTATIONS.HORIZONTAL : ORIENTATIONS.VERTICAL);\n\n        console.assert(this._side === SIDES.TOP || this._side === SIDES.BOTTOM); // TODO: implement for other sides\n        \n        // Set the scale variable\n        this._varScale = this.getScale(this.variable);\n        console.assert(this._varScale instanceof AbstractScale);\n\n        // Set the data variable\n        this._hierarchyContainer = this.getData(this.h);\n        console.assert(this._hierarchyContainer instanceof DataContainer);\n\n        // Subscribe to event publishers\n        this._varScale.onUpdate(this.uuid, this.drawAxis);\n        this._hierarchyContainer.onUpdate(this.uuid, this.drawAxis);\n\n        this._stack = this.getStack();\n        console.assert(this._stack instanceof HistoryStack);\n    },\n    mounted() {\n        this.drawAxis();\n    },\n    beforeDestroy() {\n        // Unsubscribe to events\n        this._varScale.onUpdate(this.uuid, null);\n        this._hierarchyContainer.onUpdate(this.uuid, null);\n        this.removeAxis();\n    },\n    methods: {\n        removeAxis() {\n            d3_select(this.axisSelector).select(\"svg\").remove();\n        },\n        tooltip(x, y) {\n            this.highlightX = x;\n            this.highlightY = y;\n        },\n        tooltipDestroy() {\n            this.highlightX = null;\n            this.highlightY = null;\n        },\n        drawAxis(d3Node) {\n            const vm = this;\n            vm.removeAxis();\n\n            if(vm._varScale.isLoading || vm._hierarchyContainer.isLoading) {\n                return;\n            }\n            \n            const varScale = vm._varScale;\n            const stack = vm._stack;\n\n            let hierarchyData = vm._hierarchyContainer.dataCopy;\n                        \n            // filter hierarchyData by x scale\n            hierarchyData = filterHierarchy(hierarchyData, varScale.domainFiltered);\n\n            /*\n                Prepare the hierarchy\n            */\n            let size;\n            if(this._side === SIDES.BOTTOM) {\n                size = [vm.pWidth, vm.pMarginBottom];\n            } else if(this._side === SIDES.TOP) {\n                size = [vm.pWidth, vm.pMarginTop];\n            } else if(this._side === SIDES.LEFT) {\n                size = [vm.pMarginLeft, vm.pHeight];\n            } else if(this._side === SIDES.RIGHT) {\n                size = [vm.pMarginRight, vm.pHeight];\n            }\n            // TODO: allow for dendrogram on side, bottom ,etc...\n\n            const tree = d3_cluster()\n                .size(size)\n                .separation(() => 1);\n            const root = d3_hierarchy(hierarchyData);\n            tree(root);\n\n            const descendants = root.descendants();\n\n\n            /*\n                Draw the dendrogram\n            */\n            let canvas;\n            if(d3Node) {\n                canvas = d3Node;\n            } else {\n                canvas = d3_select(this.axisSelector);\n            }\n\n            const canvasNode = canvas.node();\n\n            if(!canvasNode) {\n                return;\n            }\n\n            const two = new Two({ \n                width: vm.computedWidth, \n                height: vm.computedHeight, \n                domElement: canvasNode\n            });\n\n            let pathFunction;\n            if(this._side === SIDES.TOP) {\n                pathFunction = (d) => {\n                    return two.makePath(\n                        d.parent.x + vm.computedTranslateX, d.parent.y + vm.computedTranslateY, // M\n                        d.x + vm.computedTranslateX, d.parent.y + vm.computedTranslateY, // H d.x\n                        d.x + vm.computedTranslateX, d.y + vm.computedTranslateY, // M\n                        d.x + vm.computedTranslateX, d.parent.y + vm.computedTranslateY // V d.parent.y\n                    );\n                }\n            } else if(this._side === SIDES.BOTTOM) {\n                pathFunction = (d) => {\n                    return two.makePath(\n                        d.parent.x + vm.computedTranslateX, (vm.pMarginBottom - d.parent.y) + vm.computedTranslateY, // M\n                        d.x + vm.computedTranslateX, (vm.pMarginBottom - d.parent.y) + vm.computedTranslateY, // H d.x\n                        d.x + vm.computedTranslateX, (vm.pMarginBottom - d.y) + vm.computedTranslateY, // M\n                        d.x + vm.computedTranslateX, (vm.pMarginBottom - d.parent.y) + vm.computedTranslateY // V (vm.pMarginBottom - d.parent.y)\n                    );\n                }\n            }\n\n            let nodeTransformFunction;\n            if(this._side === SIDES.TOP) {\n                nodeTransformFunction = (d) => { \n                    return [d.x + vm.computedTranslateX, d.y + vm.computedTranslateY]; \n                }\n            } else if(this._side === SIDES.BOTTOM) {\n                nodeTransformFunction = (d) => { \n                    return [d.x + vm.computedTranslateX, (vm.pMarginBottom - d.y) + vm.computedTranslateY];\n                }\n            }\n\n            const nodePoints = [];\n\n            descendants.forEach((d, i) => {\n                if(i > 0) {\n                    const path = pathFunction(d);\n                    path.stroke = \"#555\";\n                    path.opacity = 0.6;\n                    path.linewidth = 1.5;\n                }\n                nodePoints.push(nodeTransformFunction(d));\n            });\n            \n\n            two.update();\n\n            if(d3Node) {\n                return;\n            }\n\n            const delaunay = getDelaunay(nodePoints, true);\n\n            /*\n             * Listen for mouse events\n             */\n            const getDataFromMouse = (mouseX, mouseY) => {\n                const i = delaunay.find(mouseX, mouseY);\n                return descendants[i];\n            };\n\n            const debouncedTooltipDestroy = debounce(vm.tooltipDestroy, TOOLTIP_DEBOUNCE);\n            canvas.on(\"mousemove\", () => {\n                const mouse = d3_mouse(canvasNode);\n                const mouseX = mouse[0];\n                const mouseY = mouse[1];\n\n                const node = getDataFromMouse(mouseX, mouseY);\n\n                if(node) {\n                    const nodePoint = nodeTransformFunction(node);\n                    vm.tooltip(nodePoint[0], nodePoint[1]); \n                } else {\n                    debouncedTooltipDestroy(node);\n                }\n            })\n            .on(\"mouseleave\", vm.tooltipDestroy);\n\n            canvas.on(\"click\", () => {\n                const mouse = d3_mouse(canvasNode);\n                const mouseX = mouse[0];\n                const mouseY = mouse[1];\n\n                const node = getDataFromMouse(mouseX, mouseY);\n\n                if(node) {\n                    /* \n                    varScale.sortByHierarchy(vm._hierarchyContainer);\n                    stack.push(new HistoryEvent(\n                        EVENT_TYPES.SCALE,\n                        EVENT_SUBTYPES.SCALE_DOMAIN_SORT,\n                        vm.variable,\n                        \"sortByHierarchy\",\n                        [computedParam(EVENT_TYPES.DATA, [vm.h])]\n                    ));\n                    */\n                    varScale.filterByHierarchy(vm._hierarchyContainer, node.data.name);\n                    stack.push(new HistoryEvent(\n                        EVENT_TYPES.SCALE,\n                        EVENT_SUBTYPES.SCALE_DOMAIN_FILTER,\n                        vm.variable,\n                        \"filterByHierarchy\",\n                        [computedParam(EVENT_TYPES.DATA, [vm.h]), node.data.name]\n                    ));\n                }\n            });\n            \n        }\n    }\n}\n</script>\n\n<style>\n@import '../../style/axis-style.css';\n</style>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./DendrogramAxis.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./DendrogramAxis.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./DendrogramAxis.vue?vue&type=template&id=6f21cd77&\"\nimport script from \"./DendrogramAxis.vue?vue&type=script&lang=js&\"\nexport * from \"./DendrogramAxis.vue?vue&type=script&lang=js&\"\nimport style0 from \"./DendrogramAxis.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('canvas',{staticClass:\"vdp-plot\",style:({\n            'height': (this.pHeight) + 'px', \n            'width': (this.pWidth) + 'px',\n            'top': (this.pMarginTop) + 'px',\n            'left': (this.pMarginLeft) + 'px'\n        }),attrs:{\"id\":this.plotElemID}}),_c('canvas',{staticClass:\"vdp-plot-hidden\",style:({\n            'height': (this.pHeight) + 'px', \n            'width': (this.pWidth) + 'px',\n            'top': (this.pMarginTop) + 'px',\n            'left': (this.pMarginLeft) + 'px'\n        }),attrs:{\"id\":this.hiddenPlotElemID}}),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(this.highlightX1 !== null),expression:\"this.highlightX1 !== null\"}],staticClass:\"vdp-plot-highlight\",style:({\n            'height': (this.pHeight) + 'px', \n            'width': '1px',\n            'top': (this.pMarginTop) + 'px',\n            'left': (this.pMarginLeft + this.highlightX1 - 0.5) + 'px'\n        })}),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(this.highlightX2 !== null),expression:\"this.highlightX2 !== null\"}],staticClass:\"vdp-plot-highlight\",style:({\n            'height': (this.pHeight) + 'px', \n            'width': '1px',\n            'top': (this.pMarginTop) + 'px',\n            'left': (this.pMarginLeft + this.highlightX2 - 0.5) + 'px'\n        })}),_c('div',{staticClass:\"vdp-tooltip\",style:(this.tooltipPositionAttribute),attrs:{\"id\":this.tooltipElemID}},[_c('table',[_c('tr',[_c('th',[_vm._v(_vm._s(this._xScale.name))]),_c('td',[_vm._v(_vm._s(this.tooltipInfo.x))])]),_c('tr',[_c('th',[_vm._v(_vm._s(this._cScale.name))]),_c('td',[_vm._v(_vm._s(this.tooltipInfo.c))])]),_c('tr',[_c('th',[_vm._v(_vm._s(this._yScale.name))]),_c('td',[_vm._v(_vm._s(this.tooltipInfo.y))])])])])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","/**\n * @mixin\n * @prop {string} data The data set key.\n * @prop {number} pWidth The plot width.\n * @prop {number} pHeight The plot height.\n * @prop {number} pMarginTop The plot top margin.\n * @prop {number} pMarginLeft The plot left margin.\n * @prop {number} pMarginRight The plot right margin.\n * @prop {number} pMarginBottom The plot bottom margin.\n * @prop {function} getData Function that takes a data key string and returns a DataContainer.\n * @prop {function} getScale Function that takes a scale key string and returns a scale instance.\n * @prop {function} clickHandler Function that will be called upon click of plot.\n */\nexport default {\n    props: {\n        'data': {\n            type: String\n        },\n        'pWidth': {\n            type: Number\n        },\n        'pHeight': {\n            type: Number\n        },\n        'pMarginTop': {\n            type: Number\n        },\n        'pMarginLeft': {\n            type: Number\n        },\n        'pMarginRight': {\n            type: Number\n        },\n        'pMarginBottom': {\n            type: Number\n        },\n        'getData': {\n            type: Function\n        },\n        'getScale': {\n            type: Function\n        },\n        'clickHandler': {\n            type: Function\n        }\n    },\n    data: function() {\n        return {\n            tooltipPosition: {\n                left: null,\n                top: null\n            },\n            showHighlight: false\n        };\n    },\n    computed: {\n        plotElemID: function() {\n            return 'plot_' + this.uuid;\n        },\n        hiddenPlotElemID: function() {\n            return 'plot_h_' + this.uuid;\n        },\n        highlightElemID: function() {\n            return 'highlight_' + this.uuid;\n        },\n        tooltipElemID: function() {\n            return 'tooltip_' + this.uuid;\n        },\n        plotSelector: function() {\n            return \"#\" + this.plotElemID;\n        },\n        hiddenPlotSelector: function() {\n            return \"#\" + this.hiddenPlotElemID;\n        },\n        highlightSelector: function() {\n            return \"#\" + this.highlightElemID;\n        },\n        tooltipSelector: function() {\n            return \"#\" + this.tooltipElemID;\n        },\n        tooltipPositionAttribute: function() {\n            if(this.tooltipPosition.left == null || this.tooltipPosition.top == null) {\n                return 'display: none;';\n            } else {\n                return 'left: ' + this.tooltipPosition.left + 'px; top: ' + this.tooltipPosition.top + 'px;';\n            }\n        }\n    },\n    watch: {\n        pWidth() {\n            this.drawPlot();\n        },\n        pHeight() {\n            this.drawPlot();\n        }\n    },\n    methods: {\n        tooltipHide: function() {\n            this.tooltipPosition.left = null;\n            this.tooltipPosition.top = null;\n        },\n        tooltipDestroy: function() {\n            // stub\n        },\n        removePlot: function() {\n            // stub\n        },\n        drawPlot: function() {\n            // stub\n        }\n    }\n}","<template>\n    <div>\n        <canvas \n            :id=\"this.plotElemID\" \n            class=\"vdp-plot\" \n            :style=\"{\n                'height': (this.pHeight) + 'px', \n                'width': (this.pWidth) + 'px',\n                'top': (this.pMarginTop) + 'px',\n                'left': (this.pMarginLeft) + 'px'\n            }\"\n        ></canvas>\n        <canvas \n            :id=\"this.hiddenPlotElemID\"\n            class=\"vdp-plot-hidden\" \n            :style=\"{\n                'height': (this.pHeight) + 'px', \n                'width': (this.pWidth) + 'px',\n                'top': (this.pMarginTop) + 'px',\n                'left': (this.pMarginLeft) + 'px'\n            }\"\n        ></canvas>\n        <div v-show=\"this.highlightX1 !== null\"\n            :style=\"{\n                'height': (this.pHeight) + 'px', \n                'width': '1px',\n                'top': (this.pMarginTop) + 'px',\n                'left': (this.pMarginLeft + this.highlightX1 - 0.5) + 'px'\n            }\"\n            class=\"vdp-plot-highlight\"\n        ></div>\n        <div v-show=\"this.highlightX2 !== null\"\n            :style=\"{\n                'height': (this.pHeight) + 'px', \n                'width': '1px',\n                'top': (this.pMarginTop) + 'px',\n                'left': (this.pMarginLeft + this.highlightX2 - 0.5) + 'px'\n            }\"\n            class=\"vdp-plot-highlight\"\n        ></div>\n        <div :id=\"this.tooltipElemID\" class=\"vdp-tooltip\" :style=\"this.tooltipPositionAttribute\">\n            <table>\n                <tr>\n                    <th>{{ this._xScale.name }}</th>\n                    <td>{{ this.tooltipInfo.x }}</td>\n                </tr>\n                <tr>\n                    <th>{{ this._cScale.name }}</th>\n                    <td>{{ this.tooltipInfo.c }}</td>\n                </tr>\n                <tr>\n                    <th>{{ this._yScale.name }}</th>\n                    <td>{{ this.tooltipInfo.y }}</td>\n                </tr>\n            </table>\n        </div>\n    </div>\n</template>\n\n<script>\nimport Two from '../../two.js';\nimport { scaleBand as d3_scaleBand, scaleLinear as d3_scaleLinear } from 'd3-scale';\nimport { select as d3_select, create as d3_create } from 'd3-selection';\nimport { stack as d3_stack, stackOrderNone as d3_stackOrderNone, stackOffsetNone as d3_stackOffsetNone } from 'd3-shape';\nimport { mouse as d3_mouse, event as d3_event } from 'd3';\nimport debounce from 'lodash/debounce';\nimport { TOOLTIP_DEBOUNCE, BAR_WIDTH_MIN, BAR_MARGIN_DEFAULT } from './../../constants.js';\nimport { getRetinaRatio } from './../../helpers.js';\n\nimport AbstractScale from './../../scales/AbstractScale.js';\nimport DataContainer from './../../data/DataContainer.js';\n\nimport mixin from './mixin.js';\n\nlet uuid = 0;\n/**\n * @prop {string} x The x-scale variable key.\n * @prop {string} y The y-scale variable key.\n * @prop {string} c The color-scale variable key.\n * @prop {number} barMarginX The value for the horizontal margin between bars. Default: 2\n * @prop {boolean} filterX Set to false to ignore the filtered domain of the x scale. Default: true \n * @prop {boolean} filterY Set to false to ignore the filtered domain of the y scale. Default: true\n * @extends mixin\n * \n * @example\n * <StackedBarPlot\n *      data=\"exposures_data\"\n *      x=\"sample_id\" \n *      y=\"exposure\"\n *      c=\"signature\"\n *      :pWidth=\"500\"\n *      :pHeight=\"300\"\n *      :pMarginTop=\"10\"\n *      :pMarginLeft=\"120\"\n *      :pMarginRight=\"10\"\n *      :pMarginBottom=\"150\"\n *      :getData=\"getData\"\n *      :getScale=\"getScale\"\n *      :clickHandler=\"myClickHandler\"\n * />\n */\nexport default {\n    name: 'StackedBarPlot',\n    mixins: [mixin],\n    props: {\n        'x': {\n            type: String\n        },\n        'y': {\n            type: String\n        },\n        'c': { // color\n            type: String\n        },\n        'barMarginX': {\n            type: Number, \n            default: BAR_MARGIN_DEFAULT\n        },\n        'filterX': {\n            type: Boolean,\n            default: true\n        },\n        'filterY': {\n            type: Boolean,\n            default: true\n        }\n    },\n    data() {\n        return {\n            tooltipInfo: {\n                x: '',\n                y: '',\n                c: ''\n            },\n            highlightX1: null,\n            highlightX2: null,\n            highlightScale: null,\n            barWidth: 0\n        }\n    },\n    beforeCreate() {\n        this.uuid = this.$options.name + uuid.toString();\n        uuid += 1;\n    },\n    created() {\n        // Set data\n        this._dataContainer = this.getData(this.data);\n        console.assert(this._dataContainer instanceof DataContainer);\n\n        // Set scale variables\n        this._xScale = this.getScale(this.x);\n        this._yScale = this.getScale(this.y);\n        this._cScale = this.getScale(this.c);\n        console.assert(this._xScale instanceof AbstractScale);\n        console.assert(this._yScale instanceof AbstractScale);\n        console.assert(this._cScale instanceof AbstractScale);\n\n        // Subscribe to event publishers here\n        this._xScale.onUpdate(this.uuid, this.drawPlot);\n        this._yScale.onUpdate(this.uuid, this.drawPlot);\n        this._cScale.onUpdate(this.uuid, this.drawPlot);\n\n        // Subscribe to data mutations here\n        this._dataContainer.onUpdate(this.uuid, this.drawPlot);\n\n        // Subscribe to highlights here\n        this._xScale.onHighlight(this.uuid, this.highlightX);\n        this._xScale.onHighlightDestroy(this.uuid, this.highlightDestroy);\n    },\n    mounted() {\n        this.drawPlot();\n    },\n    beforeDestroy() {\n        // Unsubscribe to events\n        this._yScale.onUpdate(this.uuid, null);\n        this._xScale.onUpdate(this.uuid, null);\n        this._cScale.onUpdate(this.uuid, null);\n        \n        // Unsubscribe to data mutations here\n        this._dataContainer.onUpdate(this.uuid, null);\n\n        // Unsubscribe to highlights here\n        this._xScale.onHighlight(this.uuid, null);\n        this._xScale.onHighlightDestroy(this.uuid, null);\n    },\n    watch: {\n        barMarginX() {\n            this.drawPlot();\n        }\n    },\n    methods: {\n        tooltip: function(mouseX, mouseY, x, y, c) {\n            // Set values\n            this.tooltipInfo.x = this._xScale.toHuman(x);\n            this.tooltipInfo.y = this._yScale.toHuman(y);\n            this.tooltipInfo.c = this._cScale.toHuman(c);\n\n            // Set position\n            this.tooltipPosition.left = mouseX;\n            this.tooltipPosition.top = mouseY;\n\n            // Dispatch highlights\n            this._xScale.emitHighlight(x);\n            this._yScale.emitHighlight(y);\n            this._cScale.emitHighlight(c);\n        },\n        tooltipDestroy: function() {\n            this.tooltipHide();\n\n            // Destroy all highlights here\n            this._xScale.emitHighlightDestroy();\n            this._yScale.emitHighlightDestroy();\n            this._cScale.emitHighlightDestroy();\n        },\n        highlightX(value) {\n            if(this.highlightScale) {\n                this.highlightX1 = this.highlightScale(value);\n                this.highlightX2 = this.highlightScale(value) + this.barWidth;\n            }\n        },\n        highlightDestroy() {\n            this.highlightX1 = null;\n            this.highlightX2 = null;\n        },\n        drawPlot(d3Node) {\n            const vm = this;\n\n            if(vm._dataContainer.isLoading || vm._xScale.isLoading || vm._yScale.isLoading || vm._cScale.isLoading) {\n                return;\n            }\n            \n            let data = this._dataContainer.dataCopy;\n\n            const xScale = this._xScale;\n            const yScale = this._yScale;\n            const cScale = this._cScale;\n\n            let xScaleDomain;\n            if(vm.filterX) {\n                xScaleDomain = xScale.domainFiltered;\n            } else {\n                xScaleDomain = xScale.domain;\n            }\n\n            let yScaleDomain;\n            if(vm.filterY) {\n                yScaleDomain = yScale.domainFiltered;\n            } else {\n                yScaleDomain = yScale.domain;\n            }\n\n\n            \n            data = data.filter((el) => xScaleDomain.includes(el[vm.x]));\n\n            const x = d3_scaleBand()\n                .domain(xScaleDomain)\n                .range([0, vm.pWidth]);\n\n            vm.highlightScale = x;\n\n            const y = d3_scaleLinear()\n                .domain(yScaleDomain)\n                .range([vm.pHeight, 0]);\n\n            const barWidth = vm.pWidth / xScaleDomain.length;\n            vm.barWidth = barWidth;\n              \n            const stack = d3_stack()\n                .keys(cScale.domainFiltered.slice().reverse())\n                .value((d, key) => { return d[key] || 0; })\n                .order(d3_stackOrderNone)\n                .offset(d3_stackOffsetNone);\n\n            const series = stack(data);\n\n            \n            /*\n             * Scale up the canvas\n             */\n            let canvas;\n            if(d3Node) {\n                canvas = d3Node;\n            } else {\n                canvas = d3_select(this.plotSelector);\n            }\n\n            const canvasNode = canvas.node();\n\n            if(!canvasNode) {\n                return;\n            }\n\n            const two = new Two({ \n                width: vm.pWidth, \n                height: vm.pHeight, \n                domElement: canvasNode\n            });\n\n            let canvasHidden, contextHidden;\n            try {\n                canvasHidden = d3_select(this.hiddenPlotSelector);\n                contextHidden = canvasHidden.node().getContext('2d');\n            } catch(e) {\n                canvasHidden = d3_create(\"canvas\");\n                contextHidden = canvasHidden.node().getContext('2d');\n            }\n\n            const ratio = getRetinaRatio(contextHidden);\n            const scaledWidth = vm.pWidth * ratio;\n            const scaledHeight = vm.pHeight * ratio;\n\n            canvasHidden\n                .attr(\"width\", scaledWidth)\n                .attr(\"height\", scaledHeight);\n            contextHidden.scale(ratio, ratio);\n\n            /*\n             * Set up the color mappings\n             */\n            const colToNode = {};\n\n            /*\n             * Generates the next color in the sequence, \n             * going from 0,0,0 to 255,255,255.\n             */\n            let nextCol = 1;\n            const genColor = () => {\n                let ret = [];\n                // via http://stackoverflow.com/a/15804183\n                if(nextCol < 16777215){\n                    ret.push(nextCol & 0xff); // R\n                    ret.push((nextCol & 0xff00) >> 8); // G \n                    ret.push((nextCol & 0xff0000) >> 16); // B\n\n                    nextCol += 20;\n                }\n                let col = \"rgb(\" + ret.join(',') + \")\";\n                return col;\n            }\n\n            /*\n             * Draw the bars\n             */\n            let barMarginX = vm.barMarginX;\n            if(barWidth - vm.barMarginX <= BAR_WIDTH_MIN) {\n                barMarginX = 0;\n            }\n\n            series.forEach((layer) => {\n                const col = cScale.color(layer[\"key\"]);\n                layer.forEach((d) => {\n                    const hiddenCol = genColor();\n                    colToNode[hiddenCol] = { \"x\": d.data[vm.x], \"y\": d.data[layer[\"key\"]], \"c\": layer[\"key\"] };\n                    contextHidden.fillStyle = hiddenCol;\n                    let height = y(d[0]) - y(d[1]);\n                    if(height + y(d[1]) > vm.pHeight) {\n                        height = vm.pHeight - y(d[1]);\n                    }\n\n                    const rect = two.makeRectangle(x(d.data[vm.x]) + (barMarginX/2) + ((barWidth - barMarginX)/2), y(d[1]) + (height/2), barWidth - barMarginX, height);\n                    rect.fill = col;\n                    rect.noStroke();\n\n                    contextHidden.fillRect(x(d.data[vm.x]), y(d[1]), barWidth, height);\n                })\n            });\n\n            two.update();\n\n            if(d3Node) {\n                /* Ignore interactivity if SVG was passed in (for download). */\n                return;\n            }\n            \n            /*\n             * Listen for mouse events\n             */\n\n            const getDataFromMouse = (mouseX, mouseY) => {\n                // Get the corresponding pixel color on the hidden canvas\n                const col = contextHidden.getImageData(mouseX * ratio, mouseY * ratio, scaledWidth, scaledHeight).data;\n                const colString = \"rgb(\" + col[0] + \",\" + col[1] + \",\"+ col[2] + \")\";\n                // Look up the node in our map\n                return colToNode[colString];\n            };\n\n            const debouncedTooltipDestroy = debounce(vm.tooltipDestroy, TOOLTIP_DEBOUNCE);\n            canvas.on(\"mousemove\", () => {\n                const mouse = d3_mouse(canvasNode);\n                const mouseX = mouse[0];\n                const mouseY = mouse[1];\n\n                const node = getDataFromMouse(mouseX, mouseY);\n\n                const mouseViewportX = d3_event.clientX;\n                const mouseViewportY = d3_event.clientY;\n\n                if(node) {\n                    vm.tooltip(mouseViewportX, mouseViewportY, node[\"x\"], node[\"y\"], node[\"c\"]); \n                } else {\n                    debouncedTooltipDestroy();\n                }\n            })\n            .on(\"mouseleave\", vm.tooltipDestroy);\n            \n            if(vm.clickHandler !== undefined) {\n                canvas.on(\"click\", () => {\n                    const mouse = d3_mouse(canvasNode);\n                    const mouseX = mouse[0];\n                    const mouseY = mouse[1];\n\n                    const node = getDataFromMouse(mouseX, mouseY);\n\n                    if(node) {\n                        vm.clickHandler(node[\"x\"], node[\"y\"], node[\"c\"]); \n                    }\n                })\n            }\n            \n        }\n    }\n}\n</script>\n\n<style>\n@import '../../style/plot-style.css';\n</style>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./StackedBarPlot.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./StackedBarPlot.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./StackedBarPlot.vue?vue&type=template&id=5210ffc1&\"\nimport script from \"./StackedBarPlot.vue?vue&type=script&lang=js&\"\nexport * from \"./StackedBarPlot.vue?vue&type=script&lang=js&\"\nimport style0 from \"./StackedBarPlot.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('canvas',{staticClass:\"vdp-plot\",style:({\n            'height': (this.pHeight) + 'px', \n            'width': (this.pWidth) + 'px',\n            'top': (this.pMarginTop) + 'px',\n            'left': (this.pMarginLeft) + 'px'\n        }),attrs:{\"id\":this.plotElemID}}),_c('canvas',{staticClass:\"vdp-plot-hidden\",style:({\n            'height': (this.pHeight) + 'px', \n            'width': (this.pWidth) + 'px',\n            'top': (this.pMarginTop) + 'px',\n            'left': (this.pMarginLeft) + 'px'\n        }),attrs:{\"id\":this.hiddenPlotElemID}}),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(this.highlightX1 !== null),expression:\"this.highlightX1 !== null\"}],staticClass:\"vdp-plot-highlight\",style:({\n            'height': (this.pHeight) + 'px', \n            'width': '1px',\n            'top': (this.pMarginTop) + 'px',\n            'left': (this.pMarginLeft + this.highlightX1 - 0.5) + 'px'\n        })}),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(this.highlightX2 !== null),expression:\"this.highlightX2 !== null\"}],staticClass:\"vdp-plot-highlight\",style:({\n            'height': (this.pHeight) + 'px', \n            'width': '1px',\n            'top': (this.pMarginTop) + 'px',\n            'left': (this.pMarginLeft + this.highlightX2 - 0.5) + 'px'\n        })}),_c('div',{staticClass:\"vdp-tooltip\",style:(this.tooltipPositionAttribute),attrs:{\"id\":this.tooltipElemID}},[_c('table',[_c('tr',[_c('th',[_vm._v(_vm._s(this._xScale.name))]),_c('td',[_vm._v(_vm._s(this.tooltipInfo.x))])]),_c('tr',[_c('th',[_vm._v(_vm._s(this._yScale.name))]),_c('td',[_vm._v(_vm._s(this.tooltipInfo.y))])])])])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <div>\n        <canvas \n            :id=\"this.plotElemID\" \n            class=\"vdp-plot\" \n            :style=\"{\n                'height': (this.pHeight) + 'px', \n                'width': (this.pWidth) + 'px',\n                'top': (this.pMarginTop) + 'px',\n                'left': (this.pMarginLeft) + 'px'\n            }\"\n        ></canvas>\n        <canvas \n            :id=\"this.hiddenPlotElemID\" \n            class=\"vdp-plot-hidden\" \n            :style=\"{\n                'height': (this.pHeight) + 'px', \n                'width': (this.pWidth) + 'px',\n                'top': (this.pMarginTop) + 'px',\n                'left': (this.pMarginLeft) + 'px'\n            }\"\n        ></canvas>\n        <div v-show=\"this.highlightX1 !== null\"\n            :style=\"{\n                'height': (this.pHeight) + 'px', \n                'width': '1px',\n                'top': (this.pMarginTop) + 'px',\n                'left': (this.pMarginLeft + this.highlightX1 - 0.5) + 'px'\n            }\"\n            class=\"vdp-plot-highlight\"\n        ></div>\n        <div v-show=\"this.highlightX2 !== null\"\n            :style=\"{\n                'height': (this.pHeight) + 'px', \n                'width': '1px',\n                'top': (this.pMarginTop) + 'px',\n                'left': (this.pMarginLeft + this.highlightX2 - 0.5) + 'px'\n            }\"\n            class=\"vdp-plot-highlight\"\n        ></div>\n        <div :id=\"this.tooltipElemID\" class=\"vdp-tooltip\" :style=\"this.tooltipPositionAttribute\">\n            <table>\n                <tr>\n                    <th>{{ this._xScale.name }}</th>\n                    <td>{{ this.tooltipInfo.x }}</td>\n                </tr>\n                <tr>\n                    <th>{{ this._yScale.name }}</th>\n                    <td>{{ this.tooltipInfo.y }}</td>\n                </tr>\n            </table>\n        </div>\n    </div>\n</template>\n\n<script>\nimport Two from '../../two.js';\nimport { scaleBand as d3_scaleBand, scaleLinear as d3_scaleLinear, scaleLog as d3_scaleLog } from 'd3-scale';\nimport { select as d3_select, create as d3_create } from 'd3-selection';\nimport { mouse as d3_mouse, event as d3_event } from 'd3';\nimport debounce from 'lodash/debounce';\nimport { TOOLTIP_DEBOUNCE, BAR_MARGIN_DEFAULT, BAR_WIDTH_MIN } from './../../constants.js';\nimport { getRetinaRatio } from './../../helpers.js';\n\nimport AbstractScale from './../../scales/AbstractScale.js';\nimport DataContainer from './../../data/DataContainer.js';\n\nimport mixin from './mixin.js';\n\nlet uuid = 0;\n/**\n * @prop {string} x The x-scale variable key.\n * @prop {string} y The y-scale variable key.\n * @prop {number} barMarginX The value for the horizontal margin between bars. Default: 2\n * @prop {string} barColor A color for all bars. Optional. If provided, overrides using the x scale for colors.\n * @prop {boolean} logY Whether or not to log-scale the y axis. Default: false\n * @extends mixin\n * \n * @example\n * <BarPlot\n *      data=\"exposures_single_data\"\n *      x=\"signature\" \n *      y=\"exposure\"\n *      :pWidth=\"500\"\n *      :pHeight=\"300\"\n *      :pMarginTop=\"10\"\n *      :pMarginLeft=\"120\"\n *      :pMarginRight=\"10\"\n *      :pMarginBottom=\"150\"\n *      :getData=\"getData\"\n *      :getScale=\"getScale\"\n *      :clickHandler=\"myClickHandler\"\n * />\n */\nexport default {\n    name: 'BarPlot',\n    mixins: [mixin],\n    props: {\n        'x': {\n            type: String\n        },\n        'y': {\n            type: String\n        },\n        'barColor': {\n            type: String\n        },\n        'barMarginX': {\n            type: Number, \n            default: BAR_MARGIN_DEFAULT\n        },\n        'logY': {\n            type: Boolean,\n            default: false\n        }\n    },\n    data() {\n        return {\n            tooltipInfo: {\n                x: '',\n                y: ''\n            },\n            highlightX1: null,\n            highlightX2: null,\n            highlightScale: null,\n            barWidth: 0\n        }\n    },\n    beforeCreate() {\n        this.uuid = this.$options.name + uuid.toString();\n        uuid += 1;\n    },\n    created() {\n        // Set data\n        this._dataContainer = this.getData(this.data);\n        console.assert(this._dataContainer instanceof DataContainer);\n        // Set scale variables\n        this._xScale = this.getScale(this.x);\n        this._yScale = this.getScale(this.y);\n        console.assert(this._xScale instanceof AbstractScale);\n        console.assert(this._yScale instanceof AbstractScale);\n\n        // Subscribe to event publishers here\n        this._xScale.onUpdate(this.uuid, this.drawPlot);\n        this._yScale.onUpdate(this.uuid, this.drawPlot);\n\n        // Subscribe to data mutations here\n        this._dataContainer.onUpdate(this.uuid, this.drawPlot);\n\n        // Subscribe to highlights here\n        this._xScale.onHighlight(this.uuid, this.highlightX);\n        this._xScale.onHighlightDestroy(this.uuid, this.highlightDestroy);\n    },\n    mounted() {\n        this.drawPlot();\n    },\n    beforeDestroy() {\n        // Unsubscribe to events\n        this._yScale.onUpdate(this.uuid, null);\n        this._xScale.onUpdate(this.uuid, null);\n\n        // Unsubscribe to data mutations here\n        this._dataContainer.onUpdate(this.uuid, null);\n\n        // Unsubscribe to highlights here\n        this._xScale.onHighlight(this.uuid, null);\n        this._xScale.onHighlightDestroy(this.uuid, null);\n    },\n    watch: {\n        barMarginX() {\n            this.drawPlot();\n        },\n        barColor() {\n            this.drawPlot();\n        },\n        logY() {\n            this.drawPlot();\n        }\n    },\n    methods: {\n        tooltip: function(mouseX, mouseY, x, y) {\n            // Set values\n            this.tooltipInfo.x = this._xScale.toHuman(x);\n            this.tooltipInfo.y = this._yScale.toHuman(y);\n\n            // Set position\n            this.tooltipPosition.left = mouseX;\n            this.tooltipPosition.top = mouseY;\n            \n            // Dispatch highlights\n            this._xScale.emitHighlight(x);\n            this._yScale.emitHighlight(y);\n        },\n        tooltipDestroy: function() {\n            this.tooltipHide();\n\n            // Destroy all highlights here\n            this._xScale.emitHighlightDestroy();\n            this._yScale.emitHighlightDestroy();\n        },\n        highlightX(value) {\n            if(this.highlightScale) {\n                this.highlightX1 = this.highlightScale(value);\n                this.highlightX2 = this.highlightScale(value) + this.barWidth;\n            }\n        },\n        highlightDestroy() {\n            this.highlightX1 = null;\n            this.highlightX2 = null;\n        },\n        drawPlot(d3Node) {\n            const vm = this;\n\n            if(vm._dataContainer.isLoading || vm._xScale.isLoading || vm._yScale.isLoading) {\n                return;\n            }\n            \n            let data = vm._dataContainer.dataCopy;\n\n            const xScale = this._xScale;\n            const yScale = this._yScale;\n\n            data = data.filter((el) => xScale.domainFiltered.includes(el[vm.x]));\n\n            const x = d3_scaleBand()\n                .domain(xScale.domainFiltered)\n                .range([0, vm.pWidth]);\n\n            vm.highlightScale = x;\n            \n            let yScaleFunc = d3_scaleLinear;\n            if(vm.logY) {\n                yScaleFunc = d3_scaleLog;\n            }\n            const y = yScaleFunc()\n                .domain(yScale.domainFiltered)\n                .range([vm.pHeight, 0]);\n\n            const barWidth = vm.pWidth / xScale.domainFiltered.length;\n            vm.barWidth = barWidth;\n            \n            /*\n             * Scale up the canvas\n             */\n            let canvas;\n            if(d3Node) {\n                canvas = d3Node;\n            } else {\n                canvas = d3_select(this.plotSelector);\n            }\n\n            const canvasNode = canvas.node();\n\n            if(!canvasNode) {\n                return;\n            }\n\n            const two = new Two({ \n                width: vm.pWidth, \n                height: vm.pHeight, \n                domElement: canvasNode\n            });\n\n            let canvasHidden, contextHidden;\n            try {\n                canvasHidden = d3_select(this.hiddenPlotSelector);\n                contextHidden = canvasHidden.node().getContext('2d');\n            } catch(e) {\n                canvasHidden = d3_create(\"canvas\");\n                contextHidden = canvasHidden.node().getContext('2d');\n            }\n\n            const ratio = getRetinaRatio(contextHidden);\n            const scaledWidth = vm.pWidth * ratio;\n            const scaledHeight = vm.pHeight * ratio;\n\n            canvasHidden\n                .attr(\"width\", scaledWidth)\n                .attr(\"height\", scaledHeight);\n            contextHidden.scale(ratio, ratio);\n\n            /*\n             * Set up the color mappings\n             */\n            const colToNode = {};\n\n            /*\n             * Generates the next color in the sequence, \n             * going from 0,0,0 to 255,255,255.\n             */\n            let nextCol = 1;\n            const genColor = () => {\n                let ret = [];\n                // via http://stackoverflow.com/a/15804183\n                if(nextCol < 16777215){\n                    ret.push(nextCol & 0xff); // R\n                    ret.push((nextCol & 0xff00) >> 8); // G \n                    ret.push((nextCol & 0xff0000) >> 16); // B\n\n                    nextCol += 20;\n                }\n                let col = \"rgb(\" + ret.join(',') + \")\";\n                return col;\n            }\n\n            /*\n             * Draw the bars\n             */\n            let barMarginX = vm.barMarginX;\n            if(barWidth - vm.barMarginX <= BAR_WIDTH_MIN) {\n                barMarginX = 0;\n            }\n            \n            \n            let heightMinusYOfZero = 0;\n            if(!vm.logY) {\n                heightMinusYOfZero = vm.pHeight - y(0);\n            }\n            data.forEach((d) => {\n                const col = genColor();\n                colToNode[col] = { \"x\": d[vm.x], \"y\": d[vm.y] };\n                contextHidden.fillStyle = col;\n                \n                let height = vm.pHeight - y(d[vm.y]) - heightMinusYOfZero;\n                const rect = two.makeRectangle(x(d[vm.x]) + (barMarginX/2) + (barWidth - barMarginX)/2, y(d[vm.y]) + height/2, barWidth - barMarginX, height);\n                if(vm.barColor !== undefined) {\n                    rect.fill = vm.barColor;\n                } else {\n                    rect.fill = xScale.color(d[vm.x]);\n                }\n                rect.noStroke();\n                \n                contextHidden.fillRect(x(d[vm.x]), 0, barWidth, vm.pHeight);\n            });\n\n            two.update();\n\n            if(d3Node) {\n                /* Ignore interactivity if SVG was passed in (for download). */\n                return;\n            }\n            \n            /*\n             * Listen for mouse events\n             */\n\n            const getDataFromMouse = (mouseX, mouseY) => {\n                // Get the corresponding pixel color on the hidden canvas\n                const col = contextHidden.getImageData(mouseX * ratio, mouseY * ratio, scaledWidth, scaledHeight).data;\n                const colString = \"rgb(\" + col[0] + \",\" + col[1] + \",\"+ col[2] + \")\";\n                // Look up the node in our map\n                return colToNode[colString];\n            };\n\n            const debouncedTooltipDestroy = debounce(vm.tooltipDestroy, TOOLTIP_DEBOUNCE);\n            canvas.on(\"mousemove\", () => {\n                const mouse = d3_mouse(canvasNode);\n                const mouseX = mouse[0];\n                const mouseY = mouse[1];\n\n                const node = getDataFromMouse(mouseX, mouseY);\n\n                const mouseViewportX = d3_event.clientX;\n                const mouseViewportY = d3_event.clientY;\n\n                if(node) {\n                    vm.tooltip(mouseViewportX, mouseViewportY, node[\"x\"], node[\"y\"]); \n                } else {\n                    debouncedTooltipDestroy();\n                }\n            })\n            .on(\"mouseleave\", vm.tooltipDestroy);\n\n            if(vm.clickHandler !== undefined) {\n                canvas.on(\"click\", () => {\n                    const mouse = d3_mouse(canvasNode);\n                    const mouseX = mouse[0];\n                    const mouseY = mouse[1];\n\n                    const node = getDataFromMouse(mouseX, mouseY);\n\n                    if(node) {\n                        vm.clickHandler(node[\"x\"], node[\"y\"]);\n                    }\n                });\n            }\n            \n        }\n    }\n}\n</script>\n\n<style>\n@import '../../style/plot-style.css';\n</style>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BarPlot.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BarPlot.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./BarPlot.vue?vue&type=template&id=0d0b6e01&\"\nimport script from \"./BarPlot.vue?vue&type=script&lang=js&\"\nexport * from \"./BarPlot.vue?vue&type=script&lang=js&\"\nimport style0 from \"./BarPlot.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('canvas',{staticClass:\"vdp-plot\",style:({\n            'height': (this.pHeight) + 'px', \n            'width': (this.pWidth) + 'px',\n            'top': (this.pMarginTop) + 'px',\n            'left': (this.pMarginLeft) + 'px'\n        }),attrs:{\"id\":this.plotElemID}}),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(this.highlightX1 !== null),expression:\"this.highlightX1 !== null\"}],staticClass:\"vdp-plot-highlight\",style:({\n            'height': (this.pHeight) + 'px', \n            'width': '1px',\n            'top': (this.pMarginTop) + 'px',\n            'left': (this.pMarginLeft + this.highlightX1 - 0.5) + 'px'\n        })}),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(this.highlightY1 !== null),expression:\"this.highlightY1 !== null\"}],staticClass:\"vdp-plot-highlight\",style:({\n            'height': '1px', \n            'width': (this.pWidth) + 'px', \n            'top': (this.pMarginTop + this.highlightY1 - 0.5) + 'px',\n            'left': (this.pMarginLeft) + 'px'\n        })}),_c('div',{staticClass:\"vdp-tooltip\",style:(this.tooltipPositionAttribute),attrs:{\"id\":this.tooltipElemID}},[_c('table',[_c('tr',[_c('th',[_vm._v(_vm._s(this._xScale.name))]),_c('td',[_vm._v(_vm._s(this.tooltipInfo.x))])]),_c('tr',[_c('th',[_vm._v(_vm._s(this._yScale.name))]),_c('td',[_vm._v(_vm._s(this.tooltipInfo.y))])]),(this.hasC)?_c('tr',[_c('th',[_vm._v(_vm._s(this._cScale.name))]),_c('td',[_vm._v(_vm._s(this.tooltipInfo.c))])]):_vm._e()])])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <div>\n        <canvas \n            :id=\"this.plotElemID\" \n            class=\"vdp-plot\" \n            :style=\"{\n                'height': (this.pHeight) + 'px', \n                'width': (this.pWidth) + 'px',\n                'top': (this.pMarginTop) + 'px',\n                'left': (this.pMarginLeft) + 'px'\n            }\"\n        ></canvas>\n        <div v-show=\"this.highlightX1 !== null\" \n            :style=\"{\n                'height': (this.pHeight) + 'px', \n                'width': '1px',\n                'top': (this.pMarginTop) + 'px',\n                'left': (this.pMarginLeft + this.highlightX1 - 0.5) + 'px'\n            }\"\n            class=\"vdp-plot-highlight\"\n        ></div>\n        <div v-show=\"this.highlightY1 !== null\"\n            :style=\"{\n                'height': '1px', \n                'width': (this.pWidth) + 'px', \n                'top': (this.pMarginTop + this.highlightY1 - 0.5) + 'px',\n                'left': (this.pMarginLeft) + 'px'\n            }\"\n            class=\"vdp-plot-highlight\"\n        ></div>\n        <div :id=\"this.tooltipElemID\" class=\"vdp-tooltip\" :style=\"this.tooltipPositionAttribute\">\n            <table>\n                <tr>\n                    <th>{{ this._xScale.name }}</th>\n                    <td>{{ this.tooltipInfo.x }}</td>\n                </tr>\n                <tr>\n                    <th>{{ this._yScale.name }}</th>\n                    <td>{{ this.tooltipInfo.y }}</td>\n                </tr>\n                <tr v-if=\"this.hasC\">\n                    <th>{{ this._cScale.name }}</th>\n                    <td>{{ this.tooltipInfo.c }}</td>\n                </tr>\n            </table>\n        </div>\n    </div>\n</template>\n\n<script>\nimport Two from '../../two.js';\nimport { scaleLinear as d3_scaleLinear, scaleLog as d3_scaleLog } from 'd3-scale';\nimport { select as d3_select } from 'd3-selection';\nimport { mouse as d3_mouse, event as d3_event } from 'd3';\nimport debounce from 'lodash/debounce';\nimport { TOOLTIP_DEBOUNCE } from './../../constants.js';\nimport { getDelaunay } from './../../helpers.js';\n\nimport AbstractScale from './../../scales/AbstractScale.js';\nimport DataContainer from './../../data/DataContainer.js';\n\nimport mixin from './mixin.js';\n\nlet uuid = 0;\n/**\n * @prop {string} x The x-scale variable key.\n * @prop {string} y The y-scale variable key.\n * @prop {string} c The color-scale variable key. Takes precedence over pointColor prop.\n * @prop {boolean} fillPoints Whether or not to fill points. Default: false\n * @prop {string} pointColor Default color for points. Default: \"#4682B4\"\n * @prop {number} pointSize Default size for points. Default: 3\n * @prop {boolean} logY Whether or not to log-scale the y axis. Default: false\n * @prop {boolean} logX Whether or not to log-scale the x axis. Default: false\n * @extends mixin\n * \n * @example\n * <ScatterPlot\n *      data=\"xy_data\"\n *      x=\"x\" \n *      y=\"y\"\n *      :pWidth=\"500\"\n *      :pHeight=\"300\"\n *      :pMarginTop=\"10\"\n *      :pMarginLeft=\"120\"\n *      :pMarginRight=\"10\"\n *      :pMarginBottom=\"150\"\n *      :getData=\"getData\"\n *      :getScale=\"getScale\"\n *      :clickHandler=\"myClickHandler\"\n * />\n */\nexport default {\n    name: 'ScatterPlot',\n    mixins: [mixin],\n    props: {\n        'x': {\n            type: String\n        },\n        'y': {\n            type: String\n        },\n        'c': {\n            type: String // color\n        },\n        'pointColor': {\n            type: String,\n            default: \"#4682B4\"\n        },\n        'pointSize': {\n            type: Number,\n            default: 3\n        },\n        'fillPoints': {\n            type: Boolean,\n            default: false\n        },\n        'logY': {\n            type: Boolean,\n            default: false\n        },\n        'logX': {\n            type: Boolean,\n            default: false\n        }\n        // TODO: allow optional dot size variable\n    },\n    data() {\n        return {\n            hasC: false,\n            tooltipInfo: {\n                c: '',\n                x: '',\n                y: ''\n            },\n            highlightXScale: null,\n            highlightYScale: null,\n            highlightX1: null,\n            highlightY1: null\n        }\n    },\n    beforeCreate() {\n        this.uuid = this.$options.name + uuid.toString();\n        uuid += 1;\n    },\n    created() {\n        // Set data\n        this._dataContainer = this.getData(this.data);\n        console.assert(this._dataContainer instanceof DataContainer);\n        // Set scale variables\n        this._xScale = this.getScale(this.x);\n        this._yScale = this.getScale(this.y);\n        console.assert(this._xScale instanceof AbstractScale);\n        console.assert(this._yScale instanceof AbstractScale);\n\n        // Subscribe to event publishers here\n        this._xScale.onUpdate(this.uuid, this.drawPlot);\n        this._yScale.onUpdate(this.uuid, this.drawPlot);\n\n        // Make assertions, but keep c scale optional\n        if(this.c !== undefined) {\n            this.hasC = true;\n            this._cScale = this.getScale(this.c);\n            console.assert(this._cScale instanceof AbstractScale);\n            this._cScale.onUpdate(this.uuid, this.drawPlot);\n        }\n\n        // Subscribe to data mutations here\n        this._dataContainer.onUpdate(this.uuid, this.drawPlot);\n\n        // Subscribe to highlights here\n        this._xScale.onHighlight(this.uuid, this.highlightX);\n        this._xScale.onHighlightDestroy(this.uuid, this.highlightDestroy);\n\n        this._yScale.onHighlight(this.uuid, this.highlightY);\n        this._yScale.onHighlightDestroy(this.uuid, this.highlightDestroy);\n    },\n    mounted() {\n        this.drawPlot();\n    },\n    beforeDestroy() {\n        // Unsubscribe to events\n        this._yScale.onUpdate(this.uuid, null);\n        this._xScale.onUpdate(this.uuid, null);\n        if(this.hasC) {\n            this._cScale.onUpdate(this.uuid, null);\n        }\n\n        // Unsubscribe to data mutations here\n        this._dataContainer.onUpdate(this.uuid, null);\n\n        // Unsubscribe to highlights here\n        this._xScale.onHighlight(this.uuid, null);\n        this._xScale.onHighlightDestroy(this.uuid, null);\n\n        this._yScale.onHighlight(this.uuid, null);\n        this._yScale.onHighlightDestroy(this.uuid, null);\n    },\n    watch: {\n        pointColor() {\n            this.drawPlot();\n        },\n        pointSize() {\n            this.drawPlot();\n        },\n        fillPoints() {\n            this.drawPlot();\n        },\n        logX() {\n            this.drawPlot();\n        },\n        logY() {\n            this.drawPlot();\n        }\n    },\n    methods: {\n        tooltip: function(mouseX, mouseY, x, y, c) {\n            // Set values\n            this.tooltipInfo.x = this._xScale.toHuman(x);\n            this.tooltipInfo.y = this._yScale.toHuman(y);\n\n            if(this.hasC) {\n                this.tooltipInfo.c = this._cScale.toHuman(c);\n            }\n\n            // Set position\n            this.tooltipPosition.left = mouseX;\n            this.tooltipPosition.top = mouseY;\n            \n            // Dispatch highlights\n            this._xScale.emitHighlight(x);\n            this._yScale.emitHighlight(y);\n\n            if(this.hasC) {\n                this._cScale.emitHighlight(c);\n            }\n        },\n        tooltipDestroy: function() {\n            this.tooltipHide();\n\n            // Destroy all highlights here\n            this._xScale.emitHighlightDestroy();\n            this._yScale.emitHighlightDestroy();\n\n            if(this.hasC) {\n                this._cScale.emitHighlightDestroy();\n            }\n        },\n        highlightX(value) {\n            if(this.highlightXScale) {\n                this.highlightX1 = this.highlightXScale(value);\n            }\n        },\n        highlightY(value) {\n            if(this.highlightYScale) {\n                this.highlightY1 = this.highlightYScale(value);\n            }\n        },\n        highlightDestroy() {\n            this.highlightX1 = null;\n            this.highlightY1 = null;\n        },\n        drawPlot(d3Node) {\n            const vm = this;\n\n            if(vm._dataContainer.isLoading || vm._xScale.isLoading || vm._yScale.isLoading || (vm.hasC && vm._cScale.isLoading)) {\n                return;\n            }\n            \n            let data = vm._dataContainer.dataCopy;\n            \n            const xScale = vm._xScale;\n            const yScale = vm._yScale;\n            let cScale;\n            if(vm.hasC) {\n                cScale = vm._cScale;\n            }\n\n            let xScaleFunc = d3_scaleLinear;\n            if(vm.logX) {\n                xScaleFunc = d3_scaleLog;\n            }\n\n            const x = xScaleFunc()\n                .domain(xScale.domainFiltered)\n                .range([0, vm.pWidth]);\n\n            vm.highlightXScale = x;\n            \n            let yScaleFunc = d3_scaleLinear;\n            if(vm.logY) {\n                yScaleFunc = d3_scaleLog;\n            }\n            \n            const y = yScaleFunc()\n                .domain(yScale.domainFiltered)\n                .range([vm.pHeight, 0]);\n\n            vm.highlightYScale = y;\n            \n            \n            /*\n             * Scale up the canvas\n             */\n            let canvas;\n            if(d3Node) {\n                canvas = d3Node;\n            } else {\n                canvas = d3_select(this.plotSelector);\n            }\n\n            const canvasNode = canvas.node();\n\n            if(!canvasNode) {\n                return;\n            }\n\n            const two = new Two({ \n                width: vm.pWidth, \n                height: vm.pHeight, \n                domElement: canvasNode\n            });\n\n            /*\n             * Draw the points\n             */\n            data.forEach((d) => {\n                const circle = two.makeCircle(x(d[vm.x]), y(d[vm.y]), vm.pointSize);\n\n                if(this.hasC) {\n                    circle.fill = cScale.color(d[vm.c]);\n                    circle.stroke = cScale.color(d[vm.c]);\n                } else {\n                    circle.fill = vm.pointColor;\n                    circle.stroke = vm.pointColor;\n                }\n\n                circle.linewidth = 1;\n\n                if(!vm.fillPoints) {\n                    circle.noFill();\n                }\n\n            });\n            \n            two.update();\n\n            if(d3Node) {\n                /* Ignore interactivity if SVG was passed in (for download). */\n                return;\n            }\n\n            /*\n             * Prepare for interactivity\n             */\n\n            const points = data.map((d) => [x(d[vm.x]), y(d[vm.y])]);\n            const delaunay = getDelaunay(points, true);\n\n            /*\n             * Listen for mouse events\n             */\n\n            const getDataFromMouse = (mouseX, mouseY) => {\n                const i = delaunay.find(mouseX, mouseY);\n                return data[i];\n            };\n\n            const debouncedTooltipDestroy = debounce(vm.tooltipDestroy, TOOLTIP_DEBOUNCE);\n            canvas.on(\"mousemove\", () => {\n                const mouse = d3_mouse(canvasNode);\n                const mouseX = mouse[0];\n                const mouseY = mouse[1];\n\n                const node = getDataFromMouse(mouseX, mouseY);\n\n                const mouseViewportX = d3_event.clientX;\n                const mouseViewportY = d3_event.clientY;\n\n                if(node) {\n                    vm.tooltip(mouseViewportX, mouseViewportY, node[vm.x], node[vm.y], node[vm.c]); \n                } else {\n                    debouncedTooltipDestroy();\n                }\n            })\n            .on(\"mouseleave\", vm.tooltipDestroy);\n\n            if(vm.clickHandler !== undefined) {\n                canvas.on(\"click\", () => {\n                    const mouse = d3_mouse(canvasNode);\n                    const mouseX = mouse[0];\n                    const mouseY = mouse[1];\n\n                    const node = getDataFromMouse(mouseX, mouseY);\n\n                    if(node) {\n                        vm.clickHandler(node[vm.x], node[vm.y], node[vm.c]); \n                    }\n                });\n            }\n\n        }\n    }\n}\n</script>\n\n<style>\n@import '../../style/plot-style.css';\n</style>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ScatterPlot.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ScatterPlot.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ScatterPlot.vue?vue&type=template&id=694b6524&\"\nimport script from \"./ScatterPlot.vue?vue&type=script&lang=js&\"\nexport * from \"./ScatterPlot.vue?vue&type=script&lang=js&\"\nimport style0 from \"./ScatterPlot.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('canvas',{staticClass:\"vdp-plot\",style:({\n            'height': (this.pHeight) + 'px', \n            'width': (this.pWidth) + 'px',\n            'top': (this.pMarginTop) + 'px',\n            'left': (this.pMarginLeft) + 'px'\n        }),attrs:{\"id\":this.plotElemID}}),_c('canvas',{staticClass:\"vdp-plot-hidden\",style:({\n            'height': (this.pHeight) + 'px', \n            'width': (this.pWidth) + 'px',\n            'top': (this.pMarginTop) + 'px',\n            'left': (this.pMarginLeft) + 'px'\n        }),attrs:{\"id\":this.hiddenPlotElemID}}),_c('div',{staticClass:\"vdp-tooltip\",style:(this.tooltipPositionAttribute),attrs:{\"id\":this.tooltipElemID}},[_c('table',[_c('tr',[_c('th',[_vm._v(\"Min\")]),_c('td',[_vm._v(_vm._s(this.tooltipInfo.min))])]),_c('tr',[_c('th',[_vm._v(\"Q1\")]),_c('td',[_vm._v(_vm._s(this.tooltipInfo.q1))])]),_c('tr',[_c('th',[_vm._v(\"Median\")]),_c('td',[_vm._v(_vm._s(this.tooltipInfo.median))])]),_c('tr',[_c('th',[_vm._v(\"Mean\")]),_c('td',[_vm._v(_vm._s(this.tooltipInfo.mean))])]),_c('tr',[_c('th',[_vm._v(\"Q3\")]),_c('td',[_vm._v(_vm._s(this.tooltipInfo.q3))])]),_c('tr',[_c('th',[_vm._v(\"Max\")]),_c('td',[_vm._v(_vm._s(this.tooltipInfo.max))])])])])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <div>\n        <canvas \n            :id=\"this.plotElemID\" \n            class=\"vdp-plot\" \n            :style=\"{\n                'height': (this.pHeight) + 'px', \n                'width': (this.pWidth) + 'px',\n                'top': (this.pMarginTop) + 'px',\n                'left': (this.pMarginLeft) + 'px'\n            }\"\n        ></canvas>\n        <canvas \n            :id=\"this.hiddenPlotElemID\"\n            class=\"vdp-plot-hidden\" \n            :style=\"{\n                'height': (this.pHeight) + 'px', \n                'width': (this.pWidth) + 'px',\n                'top': (this.pMarginTop) + 'px',\n                'left': (this.pMarginLeft) + 'px'\n            }\"\n        ></canvas>\n        <div :id=\"this.tooltipElemID\" class=\"vdp-tooltip\" :style=\"this.tooltipPositionAttribute\">\n            <table>\n                <tr>\n                    <th>Min</th>\n                    <td>{{ this.tooltipInfo.min }}</td>\n                </tr>\n                <tr>\n                    <th>Q1</th>\n                    <td>{{ this.tooltipInfo.q1 }}</td>\n                </tr>\n                <tr>\n                    <th>Median</th>\n                    <td>{{ this.tooltipInfo.median }}</td>\n                </tr>\n                <tr>\n                    <th>Mean</th>\n                    <td>{{ this.tooltipInfo.mean }}</td>\n                </tr>\n                <tr>\n                    <th>Q3</th>\n                    <td>{{ this.tooltipInfo.q3 }}</td>\n                </tr>\n                <tr>\n                    <th>Max</th>\n                    <td>{{ this.tooltipInfo.max }}</td>\n                </tr>\n            </table>\n        </div>\n    </div>\n</template>\n\n<script>\nimport Two from '../../two.js';\nimport { scaleLinear as d3_scaleLinear, scaleQuantile as d3_scaleQuantile } from 'd3-scale';\nimport { select as d3_select, create as d3_create } from 'd3-selection';\nimport { mouse as d3_mouse, event as d3_event } from 'd3';\nimport debounce from 'lodash/debounce';\nimport { min as d3_min, max as d3_max, mean as d3_mean } from 'd3-array';\n\nimport { TOOLTIP_DEBOUNCE } from './../../constants.js';\nimport { getRetinaRatio } from './../../helpers.js';\n\n\nimport AbstractScale from './../../scales/AbstractScale.js';\nimport DataContainer from './../../data/DataContainer.js';\n\nimport mixin from './mixin.js';\n\nlet uuid = 0;\n/**\n * @prop {string} variable The key to access the values in the data array objects.\n * @prop {string} y The y-scale variable key.\n * @prop {string} o The observation-scale variable key. Optional.\n * @prop {number} pointSize The diameter of outlier (and mean) points. Default: 6\n * @prop {boolean} drawOutliers Whether or not to draw outlier points on the plot. Default: true\n * @extends mixin\n * \n * @example\n * <BoxPlot\n *      data=\"boxplot_data\"\n *      y=\"exposure\"\n *      o=\"signature\"\n *      :pWidth=\"500\"\n *      :pHeight=\"300\"\n *      :pMarginTop=\"10\"\n *      :pMarginLeft=\"120\"\n *      :pMarginRight=\"10\"\n *      :pMarginBottom=\"150\"\n *      :getData=\"getData\"\n *      :getScale=\"getScale\"\n *      :clickHandler=\"myClickHandler\"\n * />\n */\nexport default {\n    name: 'BoxPlot',\n    mixins: [mixin],\n    props: {\n        'variable': {\n            type: String\n        },\n        'y': {\n            type: String\n        },\n        'o': { // observation\n            type: String\n        },\n        'pointSize': {\n            type: Number,\n            default: 6\n        },\n        'drawOutliers': {\n            type: Boolean,\n            default: true\n        }\n    },\n    data() {\n        return {\n            hasO: false,\n            tooltipInfo: {\n                min: '',\n                q1: '',\n                median: '',\n                mean: '',\n                q3: '',\n                max: ''\n            }\n        }\n    },\n    beforeCreate() {\n        this.uuid = this.$options.name + uuid.toString();\n        uuid += 1;\n    },\n    created() {\n        // Set data\n        this._dataContainer = this.getData(this.data);\n        console.assert(this._dataContainer instanceof DataContainer);\n\n        // Set scale variables\n        this._yScale = this.getScale(this.y);\n        console.assert(this._yScale instanceof AbstractScale);\n\n        // Subscribe to event publishers here\n        this._yScale.onUpdate(this.uuid, this.drawPlot);\n\n        if(this.o !== undefined) {\n            this._oScale = this.getScale(this.o);\n            console.assert(this._oScale instanceof AbstractScale);\n            this._oScale.onUpdate(this.uuid, this.drawPlot);\n            this.hasO = true;\n        }\n\n        // Subscribe to data mutations here\n        this._dataContainer.onUpdate(this.uuid, this.drawPlot);\n\n    },\n    mounted() {\n        this.drawPlot();\n    },\n    beforeDestroy() {\n        // Unsubscribe to events\n        this._yScale.onUpdate(this.uuid, null);\n        if(this.hasO) {\n            this._oScale.onUpdate(this.uuid, null);\n        }\n\n        // Unsubscribe to data mutations here\n        this._dataContainer.onUpdate(this.uuid, null);\n    },\n    watch: {\n        pointSize() {\n            this.drawPlot();\n        },\n        drawOutliers() {\n            this.drawPlot();\n        }\n    },\n    methods: {\n        tooltip: function(mouseX, mouseY, node) {\n            // Set values\n            this.tooltipInfo.min = node.min;\n            this.tooltipInfo.q1 = node.q1;\n            this.tooltipInfo.median = node.median;\n            this.tooltipInfo.mean = node.mean;\n            this.tooltipInfo.q3 = node.q3;\n            this.tooltipInfo.max = node.max;\n\n            // Set position\n            this.tooltipPosition.left = mouseX;\n            this.tooltipPosition.top = mouseY;\n\n            // Dispatch highlights\n        },\n        tooltipDestroy: function() {\n            this.tooltipHide();\n\n            // Destroy all highlights here\n        },\n        drawPlot(d3Node) {\n            const vm = this;\n\n            if(vm._dataContainer.isLoading || vm._yScale.isLoading || (vm.hasO && vm._oScale.isLoading)) {\n                return;\n            }\n            \n            let data = vm._dataContainer.dataCopy;\n\n            const yScale = vm._yScale;\n\n            if(vm.hasO) {\n                const oScale = vm._oScale;\n                data = data.filter((el) => oScale.domainFiltered.includes(el[vm.o]));\n            }\n            \n            const y = d3_scaleLinear()\n                .domain(yScale.domainFiltered)\n                .range([vm.pHeight, 0]);\n\n            const barWidth = vm.pWidth;\n            \n            /*\n             * Scale up the canvas\n             */\n            let canvas;\n            if(d3Node) {\n                canvas = d3Node;\n            } else {\n                canvas = d3_select(this.plotSelector);\n            }\n\n            const canvasNode = canvas.node();\n\n            if(!canvasNode) {\n                return;\n            }\n\n            const two = new Two({ \n                width: vm.pWidth, \n                height: vm.pHeight, \n                domElement: canvasNode\n            });\n\n            let canvasHidden, contextHidden;\n            try {\n                canvasHidden = d3_select(this.hiddenPlotSelector);\n                contextHidden = canvasHidden.node().getContext('2d');\n            } catch(e) {\n                canvasHidden = d3_create(\"canvas\");\n                contextHidden = canvasHidden.node().getContext('2d');\n            }\n\n            const ratio = getRetinaRatio(contextHidden);\n            const scaledWidth = vm.pWidth * ratio;\n            const scaledHeight = vm.pHeight * ratio;\n\n            canvasHidden\n                .attr(\"width\", scaledWidth)\n                .attr(\"height\", scaledHeight);\n            contextHidden.scale(ratio, ratio);\n\n            /*\n             * Set up the color mappings\n             */\n            const colToNode = {};\n\n            /*\n             * Generates the next color in the sequence, \n             * going from 0,0,0 to 255,255,255.\n             */\n            let nextCol = 1;\n            const genColor = () => {\n                let ret = [];\n                // via http://stackoverflow.com/a/15804183\n                if(nextCol < 16777215){\n                    ret.push(nextCol & 0xff); // R\n                    ret.push((nextCol & 0xff00) >> 8); // G \n                    ret.push((nextCol & 0xff0000) >> 16); // B\n\n                    nextCol += 20;\n                }\n                let col = \"rgb(\" + ret.join(',') + \")\";\n                return col;\n            }\n\n            /*\n             * Draw the boxes\n             */\n\n            const boxWidth = (barWidth / 2);\n            const boxMargin = barWidth / 4;\n\n            const diamondSize = vm.pointSize + 2;\n\n            let boxData = data.map((el) => el[vm.variable] || 0);\n            let quantile = d3_scaleQuantile()\n                .domain(boxData)\n                .range([0, 1, 2, 3]);\n            \n            let quartiles = quantile.quantiles();\n            \n            let q1 = quartiles[0];\n            let median = quartiles[1];\n            let mean = d3_mean(boxData);\n            let q3 = quartiles[2];\n            \n            let iqr = quartiles[2] - quartiles[0];\n            let lowerFence = q1 - iqr;\n            let upperFence = q3 + iqr;\n\n\n            let boxX1 = boxMargin;\n            let boxX2 = boxX1 + boxWidth;\n            let boxX = boxX1 + (boxWidth / 2)\n\n            const verticalLine = two.makeLine(boxX1 + (boxWidth / 2),y(upperFence), boxX1 + (boxWidth / 2),y(lowerFence));\n            verticalLine.stroke = \"black\";\n\n            const boxRect = two.makeRectangle(boxX1 + boxWidth/2, y(q3) + (y(q1) - y(q3))/2, boxWidth, y(q1) - y(q3));\n            boxRect.linewidth = 1;\n            boxRect.fill = \"#B8CDE3\";\n            boxRect.stroke = \"black\";\n\n            const upperFenceLine = two.makeLine(boxX1,y(upperFence), boxX2,y(upperFence));\n            upperFenceLine.stroke = \"black\";\n\n            const lowerFenceLine = two.makeLine(boxX1,y(lowerFence), boxX2,y(lowerFence));\n            lowerFenceLine.stroke = \"black\";\n\n            const medianLine = two.makeLine(boxX1,y(median), boxX2,y(median));\n            medianLine.stroke = \"black\";\n\n            const meanDiamond = two.makeRectangle(boxX,y(mean), diamondSize-2, diamondSize-2);\n            meanDiamond.stroke = \"black\";\n            meanDiamond.noFill();\n            meanDiamond.rotation = Math.PI/4;\n\n            if(vm.drawOutliers) {\n                let outliers = boxData.filter((el) => (el > upperFence) || (el < lowerFence));\n                outliers.forEach((outlier) => {\n                    const circle = two.makeCircle(boxX, y(outlier), (vm.pointSize / 2));\n                    circle.linewidth = 1;\n                    circle.stroke = \"black\";\n                    circle.noFill();\n                });\n            }\n\n            two.update();\n\n            if(d3Node) {\n                /* Ignore interactivity if SVG was passed in (for download). */\n                return;\n            }\n            \n\n            // Map data to colors\n            const col = genColor();\n            colToNode[col] = {\n                min: d3_min(boxData), \n                q1: q1,\n                median: median,\n                mean: mean,\n                q3: q3, \n                max: d3_max(boxData)\n            };\n            contextHidden.fillStyle = col;\n            contextHidden.fillRect(0, 0, barWidth, vm.pHeight);\n            \n            /*\n             * Listen for mouse events\n             */\n\n            const getDataFromMouse = (mouseX, mouseY) => {\n                // Get the corresponding pixel color on the hidden canvas\n                const col = contextHidden.getImageData(mouseX * ratio, mouseY * ratio, scaledWidth, scaledHeight).data;\n                const colString = \"rgb(\" + col[0] + \",\" + col[1] + \",\"+ col[2] + \")\";\n                // Look up the node in our map\n                return colToNode[colString];\n            }\n\n            const debouncedTooltipDestroy = debounce(vm.tooltipDestroy, TOOLTIP_DEBOUNCE);\n            canvas.on(\"mousemove\", () => {\n                const mouse = d3_mouse(canvasNode);\n                const mouseX = mouse[0];\n                const mouseY = mouse[1];\n\n                const node = getDataFromMouse(mouseX, mouseY);\n\n                const mouseViewportX = d3_event.clientX;\n                const mouseViewportY = d3_event.clientY;\n\n                if(node) {\n                    vm.tooltip(mouseViewportX, mouseViewportY, node); \n                } else {\n                    debouncedTooltipDestroy();\n                }\n            })\n            .on(\"mouseleave\", vm.tooltipDestroy);\n            \n            if(vm.clickHandler !== undefined) {\n                canvas.on(\"click\", () => {\n                    const mouse = d3_mouse(canvasNode);\n                    const mouseX = mouse[0];\n                    const mouseY = mouse[1];\n\n                    const node = getDataFromMouse(mouseX, mouseY);\n\n                    if(node) {\n                        vm.clickHandler(); \n                    }\n                })\n            }\n            \n        }\n    }\n}\n</script>\n\n<style>\n@import '../../style/plot-style.css';\n</style>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BoxPlot.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BoxPlot.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./BoxPlot.vue?vue&type=template&id=7f3b5e92&\"\nimport script from \"./BoxPlot.vue?vue&type=script&lang=js&\"\nexport * from \"./BoxPlot.vue?vue&type=script&lang=js&\"\nimport style0 from \"./BoxPlot.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('canvas',{staticClass:\"vdp-plot\",style:({\n            'height': (this.pHeight) + 'px', \n            'width': (this.pWidth) + 'px',\n            'top': (this.pMarginTop) + 'px',\n            'left': (this.pMarginLeft) + 'px'\n        }),attrs:{\"id\":this.plotElemID}}),_c('canvas',{staticClass:\"vdp-plot-hidden\",style:({\n            'height': (this.pHeight) + 'px', \n            'width': (this.pWidth) + 'px',\n            'top': (this.pMarginTop) + 'px',\n            'left': (this.pMarginLeft) + 'px'\n        }),attrs:{\"id\":this.hiddenPlotElemID}}),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(this.highlightX1 !== null),expression:\"this.highlightX1 !== null\"}],staticClass:\"vdp-plot-highlight\",style:({\n            'height': (this.pHeight) + 'px', \n            'width': '1px',\n            'top': (this.pMarginTop) + 'px',\n            'left': (this.pMarginLeft + this.highlightX1 - 0.5) + 'px'\n        })}),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(this.highlightX2 !== null),expression:\"this.highlightX2 !== null\"}],staticClass:\"vdp-plot-highlight\",style:({\n            'display': (_vm.showHighlight ? 'inline-block' : 'none'),\n            'height': (this.pHeight) + 'px', \n            'width': '1px',\n            'top': (this.pMarginTop) + 'px',\n            'left': (this.pMarginLeft + this.highlightX2 - 0.5) + 'px'\n        })}),_c('div',{staticClass:\"vdp-tooltip\",style:(this.tooltipPositionAttribute),attrs:{\"id\":this.tooltipElemID}},[_c('table',[_c('tr',[_c('th',[_vm._v(_vm._s(this._xScale.name))]),_c('td',[_vm._v(_vm._s(this.tooltipInfo.x))])]),_c('tr',[_c('th',[_vm._v(\"Min\")]),_c('td',[_vm._v(_vm._s(this.tooltipInfo.min))])]),_c('tr',[_c('th',[_vm._v(\"Q1\")]),_c('td',[_vm._v(_vm._s(this.tooltipInfo.q1))])]),_c('tr',[_c('th',[_vm._v(\"Median\")]),_c('td',[_vm._v(_vm._s(this.tooltipInfo.median))])]),_c('tr',[_c('th',[_vm._v(\"Mean\")]),_c('td',[_vm._v(_vm._s(this.tooltipInfo.mean))])]),_c('tr',[_c('th',[_vm._v(\"Q3\")]),_c('td',[_vm._v(_vm._s(this.tooltipInfo.q3))])]),_c('tr',[_c('th',[_vm._v(\"Max\")]),_c('td',[_vm._v(_vm._s(this.tooltipInfo.max))])])])])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <div>\n        <canvas \n            :id=\"this.plotElemID\" \n            class=\"vdp-plot\" \n            :style=\"{\n                'height': (this.pHeight) + 'px', \n                'width': (this.pWidth) + 'px',\n                'top': (this.pMarginTop) + 'px',\n                'left': (this.pMarginLeft) + 'px'\n            }\"\n        ></canvas>\n        <canvas \n            :id=\"this.hiddenPlotElemID\"\n            class=\"vdp-plot-hidden\" \n            :style=\"{\n                'height': (this.pHeight) + 'px', \n                'width': (this.pWidth) + 'px',\n                'top': (this.pMarginTop) + 'px',\n                'left': (this.pMarginLeft) + 'px'\n            }\"\n        ></canvas>\n        <div v-show=\"this.highlightX1 !== null\"\n            :style=\"{\n                'height': (this.pHeight) + 'px', \n                'width': '1px',\n                'top': (this.pMarginTop) + 'px',\n                'left': (this.pMarginLeft + this.highlightX1 - 0.5) + 'px'\n            }\"\n            class=\"vdp-plot-highlight\"\n        ></div>\n        <div v-show=\"this.highlightX2 !== null\"\n            :style=\"{\n                'display': (showHighlight ? 'inline-block' : 'none'),\n                'height': (this.pHeight) + 'px', \n                'width': '1px',\n                'top': (this.pMarginTop) + 'px',\n                'left': (this.pMarginLeft + this.highlightX2 - 0.5) + 'px'\n            }\"\n            class=\"vdp-plot-highlight\"\n        ></div>\n        <div :id=\"this.tooltipElemID\" class=\"vdp-tooltip\" :style=\"this.tooltipPositionAttribute\">\n            <table>\n                <tr>\n                    <th>{{ this._xScale.name }}</th>\n                    <td>{{ this.tooltipInfo.x }}</td>\n                </tr>\n                <tr>\n                    <th>Min</th>\n                    <td>{{ this.tooltipInfo.min }}</td>\n                </tr>\n                <tr>\n                    <th>Q1</th>\n                    <td>{{ this.tooltipInfo.q1 }}</td>\n                </tr>\n                <tr>\n                    <th>Median</th>\n                    <td>{{ this.tooltipInfo.median }}</td>\n                </tr>\n                <tr>\n                    <th>Mean</th>\n                    <td>{{ this.tooltipInfo.mean }}</td>\n                </tr>\n                <tr>\n                    <th>Q3</th>\n                    <td>{{ this.tooltipInfo.q3 }}</td>\n                </tr>\n                <tr>\n                    <th>Max</th>\n                    <td>{{ this.tooltipInfo.max }}</td>\n                </tr>\n            </table>\n        </div>\n    </div>\n</template>\n\n<script>\nimport Two from '../../two.js';\nimport { scaleBand as d3_scaleBand, scaleLinear as d3_scaleLinear, scaleQuantile as d3_scaleQuantile } from 'd3-scale';\nimport { select as d3_select, create as d3_create } from 'd3-selection';\nimport { mouse as d3_mouse, event as d3_event } from 'd3';\nimport debounce from 'lodash/debounce';\nimport { min as d3_min, max as d3_max, mean as d3_mean } from 'd3-array';\n\nimport { TOOLTIP_DEBOUNCE } from './../../constants.js';\nimport { getRetinaRatio } from './../../helpers.js';\n\n\nimport AbstractScale from './../../scales/AbstractScale.js';\nimport DataContainer from './../../data/DataContainer.js';\n\nimport mixin from './mixin.js';\n\nlet uuid = 0;\n/**\n * @prop {string} x The x-scale variable key.\n * @prop {string} y The y-scale variable key.\n * @prop {string} o The observation-scale variable key. Optional.\n * @prop {number} pointSize The diameter of outlier (and mean) points. Default: 6\n * @prop {boolean} drawOutliers Whether or not to draw outlier points on the plot.\n * @extends mixin\n * \n * @example\n * <MultiBoxPlot\n *      data=\"exposures_data\"\n *      x=\"signature\"\n *      y=\"exposure\"\n *      o=\"sample_id\"\n *      :pWidth=\"500\"\n *      :pHeight=\"300\"\n *      :pMarginTop=\"10\"\n *      :pMarginLeft=\"120\"\n *      :pMarginRight=\"10\"\n *      :pMarginBottom=\"150\"\n *      :getData=\"getData\"\n *      :getScale=\"getScale\"\n *      :clickHandler=\"myClickHandler\"\n * />\n */\nexport default {\n    name: 'MultiBoxPlot',\n    mixins: [mixin],\n    props: {\n        'x': {\n            type: String\n        },\n        'y': {\n            type: String\n        },\n        'o': { // observation\n            type: String\n        },\n        'pointSize': {\n            type: Number,\n            default: 6\n        },\n        'drawOutliers': {\n            type: Boolean,\n            default: true\n        }\n    },\n    data() {\n        return {\n            hasO: false,\n            tooltipInfo: {\n                x: '',\n                min: '',\n                q1: '',\n                median: '',\n                mean: '',\n                q3: '',\n                max: ''\n            },\n            highlightX1: null,\n            highlightX2: null,\n            highlightScale: null,\n            barWidth: 0\n        }\n    },\n    beforeCreate() {\n        this.uuid = this.$options.name + uuid.toString();\n        uuid += 1;\n    },\n    created() {\n        // Set data\n        this._dataContainer = this.getData(this.data);\n        console.assert(this._dataContainer instanceof DataContainer);\n\n        // Set scale variables\n        this._xScale = this.getScale(this.x);\n        this._yScale = this.getScale(this.y);\n        console.assert(this._xScale instanceof AbstractScale);\n        console.assert(this._yScale instanceof AbstractScale);\n\n        // Subscribe to event publishers here\n        this._xScale.onUpdate(this.uuid, this.drawPlot);\n        this._yScale.onUpdate(this.uuid, this.drawPlot);\n\n        if(this.o !== undefined) {\n            this._oScale = this.getScale(this.o);\n            console.assert(this._oScale instanceof AbstractScale);\n            this._oScale.onUpdate(this.uuid, this.drawPlot);\n            this.hasO = true;\n        }\n\n        // Subscribe to data mutations here\n        this._dataContainer.onUpdate(this.uuid, this.drawPlot);\n\n        // Subscribe to highlights here\n        this._xScale.onHighlight(this.uuid, this.highlight);\n        this._xScale.onHighlightDestroy(this.uuid, this.highlightDestroy);\n    },\n    mounted() {\n        this.drawPlot();\n    },\n    beforeDestroy() {\n        // Unsubscribe to events\n        this._yScale.onUpdate(this.uuid, null);\n        this._xScale.onUpdate(this.uuid, null);\n        if(this.hasO) {\n            this._oScale.onUpdate(this.uuid, null);\n        }\n\n        // Unsubscribe to data mutations here\n        this._dataContainer.onUpdate(this.uuid, null);\n\n        // Unsubscribe to highlights here\n        this._xScale.onHighlight(this.uuid, null);\n        this._xScale.onHighlightDestroy(this.uuid, null);\n    },\n    watch: {\n        pointSize() {\n            this.drawPlot();\n        },\n        drawOutliers() {\n            this.drawPlot();\n        }\n    },\n    methods: {\n        tooltip: function(mouseX, mouseY, node) {\n            // Set values\n            this.tooltipInfo.x = this._xScale.toHuman(node.x);\n            this.tooltipInfo.min = node.min;\n            this.tooltipInfo.q1 = node.q1;\n            this.tooltipInfo.median = node.median;\n            this.tooltipInfo.mean = node.mean;\n            this.tooltipInfo.q3 = node.q3;\n            this.tooltipInfo.max = node.max;\n\n            // Set position\n            this.tooltipPosition.left = mouseX;\n            this.tooltipPosition.top = mouseY;\n\n            // Dispatch highlights\n            this._xScale.emitHighlight(node.x);\n        },\n        tooltipDestroy: function() {\n            this.tooltipHide();\n\n            // Destroy all highlights here\n            this._xScale.emitHighlightDestroy();\n        },\n        highlight(value) {\n            if(this.highlightScale) {\n                this.highlightX1 = this.highlightScale(value);\n                this.highlightX2 = this.highlightScale(value) + this.barWidth;\n            }\n        },\n        highlightDestroy() {\n            this.highlightX1 = null;\n            this.highlightX2 = null;\n        },\n        drawPlot(d3Node) {\n            const vm = this;\n\n            if(vm._dataContainer.isLoading || vm._xScale.isLoading || vm._yScale.isLoading || (vm.hasO && vm._oScale.isLoading)) {\n                return;\n            }\n            \n            let data = this._dataContainer.dataCopy;\n\n            const xScale = vm._xScale;\n            const yScale = vm._yScale;\n\n            if(vm.hasO) {\n                const oScale = vm._oScale;\n                data = data.filter((el) => oScale.domainFiltered.includes(el[vm.o]));\n            }\n\n            const x = d3_scaleBand()\n                .domain(xScale.domainFiltered)\n                .range([0, vm.pWidth]);\n\n            vm.highlightScale = x;\n            \n            const y = d3_scaleLinear()\n                .domain(yScale.domainFiltered)\n                .range([vm.pHeight, 0]);\n\n            const barWidth = vm.pWidth / xScale.domainFiltered.length;\n            vm.barWidth = barWidth;\n              \n            \n            /*\n             * Scale up the canvas\n             */\n            let canvas;\n            if(d3Node) {\n                canvas = d3Node;\n            } else {\n                canvas = d3_select(this.plotSelector);\n            }\n\n            const canvasNode = canvas.node();\n\n            if(!canvasNode) {\n                return;\n            }\n\n            const two = new Two({ \n                width: vm.pWidth, \n                height: vm.pHeight, \n                domElement: canvasNode\n            });\n\n            let canvasHidden, contextHidden;\n            try {\n                canvasHidden = d3_select(this.hiddenPlotSelector);\n                contextHidden = canvasHidden.node().getContext('2d');\n            } catch(e) {\n                canvasHidden = d3_create(\"canvas\");\n                contextHidden = canvasHidden.node().getContext('2d');\n            }\n\n            const ratio = getRetinaRatio(contextHidden);\n            const scaledWidth = vm.pWidth * ratio;\n            const scaledHeight = vm.pHeight * ratio;\n\n            canvasHidden\n                .attr(\"width\", scaledWidth)\n                .attr(\"height\", scaledHeight);\n            contextHidden.scale(ratio, ratio);\n\n            /*\n             * Set up the color mappings\n             */\n            const colToNode = {};\n\n            /*\n             * Generates the next color in the sequence, \n             * going from 0,0,0 to 255,255,255.\n             */\n            let nextCol = 1;\n            const genColor = () => {\n                let ret = [];\n                // via http://stackoverflow.com/a/15804183\n                if(nextCol < 16777215){\n                    ret.push(nextCol & 0xff); // R\n                    ret.push((nextCol & 0xff00) >> 8); // G \n                    ret.push((nextCol & 0xff0000) >> 16); // B\n\n                    nextCol += 20;\n                }\n                let col = \"rgb(\" + ret.join(',') + \")\";\n                return col;\n            }\n\n            /*\n             * Draw the boxes\n             */\n\n            const boxWidth = (barWidth / 2);\n            const boxMargin = barWidth / 4;\n\n\n            const diamondSize = vm.pointSize + 2;\n\n            xScale.domainFiltered.forEach((boxVar) => {\n\n                let boxData = data.map((el) => el[boxVar] || 0);\n                let quantile = d3_scaleQuantile()\n                    .domain(boxData)\n                    .range([0, 1, 2, 3]);\n                \n                let quartiles = quantile.quantiles();\n                \n                let q1 = quartiles[0];\n                let median = quartiles[1];\n                let mean = d3_mean(boxData);\n                let q3 = quartiles[2];\n                \n                let iqr = quartiles[2] - quartiles[0];\n                let lowerFence = q1 - iqr;\n                let upperFence = q3 + iqr;\n\n\n                let boxX1 = x(boxVar) + boxMargin;\n                let boxX2 = boxX1 + boxWidth;\n                let boxX = boxX1 + (boxWidth / 2);\n\n\n                const verticalLine = two.makeLine(boxX1 + (boxWidth / 2),y(upperFence), boxX1 + (boxWidth / 2),y(lowerFence));\n                verticalLine.stroke = \"black\";\n\n                const boxRect = two.makeRectangle(boxX1 + boxWidth/2, y(q3) + (y(q1) - y(q3))/2, boxWidth, y(q1) - y(q3));\n                boxRect.linewidth = 1;\n                boxRect.fill = xScale.color(boxVar);\n                boxRect.stroke = \"black\";\n\n                const upperFenceLine = two.makeLine(boxX1,y(upperFence), boxX2,y(upperFence));\n                upperFenceLine.stroke = \"black\";\n\n                const lowerFenceLine = two.makeLine(boxX1,y(lowerFence), boxX2,y(lowerFence));\n                lowerFenceLine.stroke = \"black\";\n\n                const medianLine = two.makeLine(boxX1,y(median), boxX2,y(median));\n                medianLine.stroke = \"black\";\n\n                const meanDiamond = two.makeRectangle(boxX,y(mean), diamondSize-2, diamondSize-2);\n                meanDiamond.stroke = \"black\";\n                meanDiamond.noFill();\n                meanDiamond.rotation = Math.PI/4;\n\n                // Draw the outliers\n                if(vm.drawOutliers) {\n                    let outliers = boxData.filter((el) => (el > upperFence) || (el < lowerFence));\n                    outliers.forEach((outlier) => {\n                        const circle = two.makeCircle(boxX, y(outlier), (vm.pointSize / 2));\n                        circle.linewidth = 1;\n                        circle.stroke = \"black\";\n                        circle.noFill();\n                    });\n                }\n\n                // Map data to colors\n                const col = genColor();\n                colToNode[col] = {\n                    x: boxVar,\n                    min: d3_min(boxData), \n                    q1: q1,\n                    median: median,\n                    mean: mean,\n                    q3: q3, \n                    max: d3_max(boxData)\n                };\n                contextHidden.fillStyle = col;\n                contextHidden.fillRect(x(boxVar), 0, barWidth, vm.pHeight);\n            });\n\n            two.update();\n\n            if(d3Node) {\n                /* Ignore interactivity if SVG was passed in (for download). */\n                return;\n            }\n            \n            /*\n             * Listen for mouse events\n             */\n            const getDataFromMouse = (mouseX, mouseY) => {\n                // Get the corresponding pixel color on the hidden canvas\n                const col = contextHidden.getImageData(mouseX * ratio, mouseY * ratio, scaledWidth, scaledHeight).data;\n                const colString = \"rgb(\" + col[0] + \",\" + col[1] + \",\"+ col[2] + \")\";\n                // Look up the node in our map\n                return colToNode[colString];\n            }\n\n            const debouncedTooltipDestroy = debounce(vm.tooltipDestroy, TOOLTIP_DEBOUNCE);\n            canvas.on(\"mousemove\", () => {\n                const mouse = d3_mouse(canvasNode);\n                const mouseX = mouse[0];\n                const mouseY = mouse[1];\n\n                const node = getDataFromMouse(mouseX, mouseY);\n\n                const mouseViewportX = d3_event.clientX;\n                const mouseViewportY = d3_event.clientY;\n\n                if(node) {\n                    vm.tooltip(mouseViewportX, mouseViewportY, node); \n                } else {\n                    debouncedTooltipDestroy();\n                }\n            })\n            .on(\"mouseleave\", vm.tooltipDestroy);\n            \n            if(vm.clickHandler !== undefined) {\n                canvas.on(\"click\", () => {\n                    const mouse = d3_mouse(canvasNode);\n                    const mouseX = mouse[0];\n                    const mouseY = mouse[1];\n\n                    const node = getDataFromMouse(mouseX, mouseY);\n\n                    if(node) {\n                        vm.clickHandler(node[\"x\"]); \n                    }\n                })\n            }\n            \n        }\n    }\n}\n</script>\n\n<style>\n@import '../../style/plot-style.css';\n</style>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MultiBoxPlot.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MultiBoxPlot.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./MultiBoxPlot.vue?vue&type=template&id=f8fdb718&\"\nimport script from \"./MultiBoxPlot.vue?vue&type=script&lang=js&\"\nexport * from \"./MultiBoxPlot.vue?vue&type=script&lang=js&\"\nimport style0 from \"./MultiBoxPlot.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('canvas',{staticClass:\"vdp-plot\",style:({\n            'height': (this.pHeight) + 'px', \n            'width': (this.pWidth) + 'px',\n            'top': (this.pMarginTop) + 'px',\n            'left': (this.pMarginLeft) + 'px'\n        }),attrs:{\"id\":this.plotElemID}}),_c('canvas',{staticClass:\"vdp-plot-hidden\",style:({\n            'height': (this.pHeight) + 'px', \n            'width': (this.pWidth) + 'px',\n            'top': (this.pMarginTop) + 'px',\n            'left': (this.pMarginLeft) + 'px'\n        }),attrs:{\"id\":this.hiddenPlotElemID}}),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(this.highlightX1 !== null),expression:\"this.highlightX1 !== null\"}],staticClass:\"vdp-plot-highlight\",style:({\n            'height': (this.pHeight) + 'px', \n            'width': '1px',\n            'top': (this.pMarginTop) + 'px',\n            'left': (this.pMarginLeft + this.highlightX1 - 0.5) + 'px'\n        })}),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(this.highlightX2 !== null),expression:\"this.highlightX2 !== null\"}],staticClass:\"vdp-plot-highlight\",style:({\n            'height': (this.pHeight) + 'px', \n            'width': '1px',\n            'top': (this.pMarginTop) + 'px',\n            'left': (this.pMarginLeft + this.highlightX2 - 0.5) + 'px'\n        })}),_c('div',{staticClass:\"vdp-tooltip\",style:(this.tooltipPositionAttribute),attrs:{\"id\":this.tooltipElemID}},[_c('table',[_c('tr',[_c('th',[_vm._v(_vm._s(this._xScale.name))]),_c('td',[_vm._v(_vm._s(this.tooltipInfo.x))])]),_c('tr',[_c('th',[_vm._v(_vm._s(this._cScale.name))]),_c('td',[_vm._v(_vm._s(this.tooltipInfo.c))])])])])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <div>\n        <canvas \n            :id=\"this.plotElemID\" \n            class=\"vdp-plot\" \n            :style=\"{\n                'height': (this.pHeight) + 'px', \n                'width': (this.pWidth) + 'px',\n                'top': (this.pMarginTop) + 'px',\n                'left': (this.pMarginLeft) + 'px'\n            }\"\n        ></canvas>\n        <canvas \n            :id=\"this.hiddenPlotElemID\" \n            class=\"vdp-plot-hidden\" \n            :style=\"{\n                'height': (this.pHeight) + 'px', \n                'width': (this.pWidth) + 'px',\n                'top': (this.pMarginTop) + 'px',\n                'left': (this.pMarginLeft) + 'px'\n            }\"\n        ></canvas>\n        <div v-show=\"this.highlightX1 !== null\"\n            :style=\"{\n                'height': (this.pHeight) + 'px', \n                'width': '1px',\n                'top': (this.pMarginTop) + 'px',\n                'left': (this.pMarginLeft + this.highlightX1 - 0.5) + 'px'\n            }\"\n            class=\"vdp-plot-highlight\"\n        ></div>\n        <div v-show=\"this.highlightX2 !== null\"\n            :style=\"{\n                'height': (this.pHeight) + 'px', \n                'width': '1px',\n                'top': (this.pMarginTop) + 'px',\n                'left': (this.pMarginLeft + this.highlightX2 - 0.5) + 'px'\n            }\"\n            class=\"vdp-plot-highlight\"\n        ></div>\n        <div :id=\"this.tooltipElemID\" class=\"vdp-tooltip\" :style=\"this.tooltipPositionAttribute\">\n            <table>\n                <tr>\n                    <th>{{ this._xScale.name }}</th>\n                    <td>{{ this.tooltipInfo.x }}</td>\n                </tr>\n                <tr>\n                    <th>{{ this._cScale.name }}</th>\n                    <td>{{ this.tooltipInfo.c }}</td>\n                </tr>\n            </table>\n        </div>\n    </div>\n</template>\n\n<script>\nimport Two from '../../two.js';\nimport { scaleBand as d3_scaleBand } from 'd3-scale';\nimport { select as d3_select, create as d3_create } from 'd3-selection';\nimport { mouse as d3_mouse, event as d3_event } from 'd3';\nimport debounce from 'lodash/debounce';\nimport { TOOLTIP_DEBOUNCE, BAR_MARGIN_DEFAULT, BAR_WIDTH_MIN } from './../../constants.js';\nimport { getRetinaRatio } from './../../helpers.js';\n\nimport AbstractScale from './../../scales/AbstractScale.js';\nimport DataContainer from './../../data/DataContainer.js';\n\nimport mixin from './mixin.js';\nimport ContinuousScale from './../../scales/ContinuousScale.js';\nimport CategoricalScale from './../../scales/CategoricalScale.js';\n\n\nlet uuid = 0;\n/**\n * @prop {string} x The x-scale variable key.\n * @prop {string} c The color-scale variable key.\n * @prop {number} barMarginX The value for the horizontal margin between bars. Default: 2\n * @extends mixin\n * \n * @example\n * <TrackPlot\n *      data=\"clinical_data\"\n *      x=\"sample_id\" \n *      c=\"age\"\n *      :pWidth=\"500\"\n *      :pHeight=\"300\"\n *      :pMarginTop=\"10\"\n *      :pMarginLeft=\"120\"\n *      :pMarginRight=\"10\"\n *      :pMarginBottom=\"150\"\n *      :getData=\"getData\"\n *      :getScale=\"getScale\"\n *      :clickHandler=\"myClickHandler\"\n * />\n */\nexport default {\n    name: 'TrackPlot',\n    mixins: [mixin],\n    props: {\n        'x': {\n            type: String\n        },\n        'c': {\n            type: String\n        },\n        'barMarginX': {\n            type: Number, \n            default: BAR_MARGIN_DEFAULT\n        }\n    },\n    data() {\n        return {\n            tooltipInfo: {\n                x: '',\n                c: ''\n            },\n            highlightX1: null,\n            highlightX2: null,\n            highlightScale: null,\n            barWidth: 0\n        }\n    },\n    beforeCreate() {\n        this.uuid = this.$options.name + uuid.toString();\n        uuid += 1;\n    },\n    created() {\n        // Set data\n        this._dataContainer = this.getData(this.data);\n        console.assert(this._dataContainer instanceof DataContainer);\n        // Set scale variables\n        this._xScale = this.getScale(this.x);\n        this._cScale = this.getScale(this.c);\n        console.assert(this._xScale instanceof AbstractScale);\n        console.assert(this._cScale instanceof AbstractScale);\n\n        // Subscribe to event publishers here\n        this._xScale.onUpdate(this.uuid, this.drawPlot);\n        this._cScale.onUpdate(this.uuid, this.drawPlot);\n\n        // Subscribe to data mutations here\n        this._dataContainer.onUpdate(this.uuid, this.drawPlot);\n\n        // Subscribe to highlights here\n        this._xScale.onHighlight(this.uuid, this.highlight);\n        this._xScale.onHighlightDestroy(this.uuid, this.highlightDestroy);\n    },\n    mounted() {\n        this.drawPlot();\n    },\n    beforeDestroy() {\n        // Unsubscribe to events\n        this._cScale.onUpdate(this.uuid, null);\n        this._xScale.onUpdate(this.uuid, null);\n\n        // Unsubscribe to data mutations here\n        this._dataContainer.onUpdate(this.uuid, null);\n\n        // Unsubscribe to highlights here\n        this._xScale.onHighlight(this.uuid, null);\n        this._xScale.onHighlightDestroy(this.uuid, null);\n    },\n    watch: {\n        barMarginX() {\n            this.drawPlot();\n        }\n    },\n    methods: {\n        tooltip: function(mouseX, mouseY, x, c) {\n            // Set values\n            this.tooltipInfo.x = this._xScale.toHuman(x);\n            this.tooltipInfo.c = this._cScale.toHuman(c);\n\n            // Set position\n            this.tooltipPosition.left = mouseX;\n            this.tooltipPosition.top = mouseY;\n            \n            // Dispatch highlights\n            this._xScale.emitHighlight(x);\n            this._cScale.emitHighlight(c);\n        },\n        tooltipDestroy: function() {\n            this.tooltipHide();\n\n            // Destroy all highlights here\n            this._xScale.emitHighlightDestroy();\n            this._cScale.emitHighlightDestroy();\n        },\n        highlight(value) {\n            if(this.highlightScale) {\n                this.highlightX1 = this.highlightScale(value);\n                this.highlightX2 = this.highlightScale(value) + this.barWidth;\n            }\n        },\n        highlightDestroy() {\n            this.highlightX1 = null;\n            this.highlightX2 = null;\n        },\n        drawPlot(d3Node) {\n            const vm = this;\n\n            if(vm._dataContainer.isLoading || vm._xScale.isLoading || vm._cScale.isLoading) {\n                return;\n            }\n            \n            let data = vm._dataContainer.dataCopy;\n            \n            const xScale = vm._xScale;\n            const cScale = vm._cScale;\n\n            data = data.filter((el) => xScale.domainFiltered.includes(el[vm.x]));\n\n            const x = d3_scaleBand()\n                .domain(xScale.domainFiltered)\n                .range([0, vm.pWidth]);\n\n            vm.highlightScale = x;\n\n            const barWidth = vm.pWidth / xScale.domainFiltered.length;\n            vm.barWidth = barWidth;\n              \n            \n            /*\n             * Scale up the canvas\n             */\n            let canvas;\n            if(d3Node) {\n                canvas = d3Node;\n            } else {\n                canvas = d3_select(this.plotSelector);\n            }\n\n            const canvasNode = canvas.node();\n\n            if(!canvasNode) {\n                return;\n            }\n\n            const two = new Two({ \n                width: vm.pWidth, \n                height: vm.pHeight, \n                domElement: canvasNode\n            });\n\n            let canvasHidden, contextHidden;\n            try {\n                canvasHidden = d3_select(this.hiddenPlotSelector);\n                contextHidden = canvasHidden.node().getContext('2d');\n            } catch(e) {\n                canvasHidden = d3_create(\"canvas\");\n                contextHidden = canvasHidden.node().getContext('2d');\n            }\n\n            const ratio = getRetinaRatio(contextHidden);\n            const scaledWidth = vm.pWidth * ratio;\n            const scaledHeight = vm.pHeight * ratio;\n\n            canvasHidden\n                .attr(\"width\", scaledWidth)\n                .attr(\"height\", scaledHeight);\n            contextHidden.scale(ratio, ratio);\n\n            /*\n             * Set up the color mappings\n             */\n            const colToNode = {};\n\n            /*\n             * Generates the next color in the sequence, \n             * going from 0,0,0 to 255,255,255.\n             */\n            let nextCol = 1;\n            const genColor = () => {\n                let ret = [];\n                // via http://stackoverflow.com/a/15804183\n                if(nextCol < 16777215){\n                    ret.push(nextCol & 0xff); // R\n                    ret.push((nextCol & 0xff00) >> 8); // G \n                    ret.push((nextCol & 0xff0000) >> 16); // B\n\n                    nextCol += 20;\n                }\n                let col = \"rgb(\" + ret.join(',') + \")\";\n                return col;\n            }\n\n            /*\n             * Draw the track\n             */\n            let barMarginX = vm.barMarginX;\n            if(barWidth - vm.barMarginX <= BAR_WIDTH_MIN) {\n                barMarginX = 0;\n            }\n\n            data.forEach((d) => {\n                if(\n                    AbstractScale.isUnknown(d[vm.c]) ||\n                    (\n                        (cScale instanceof CategoricalScale && cScale.domainFiltered.includes(d[vm.c]))\n                        || \n                        (cScale instanceof ContinuousScale && cScale.domainFiltered[0] <= d[vm.c] && cScale.domainFiltered[1] >= d[vm.c])\n                    )\n                ) {\n                    const col = genColor();\n                    colToNode[col] = { \"x\": d[vm.x], \"c\": d[vm.c] };\n                    contextHidden.fillStyle = col;\n\n                    const rect = two.makeRectangle(x(d[vm.x]) + (barMarginX/2) + (barWidth - barMarginX)/2, 0 + vm.pHeight/2, barWidth - barMarginX, vm.pHeight);\n                    rect.fill = cScale.color(d[vm.c]);\n                    rect.noStroke();\n\n                    contextHidden.fillRect(x(d[vm.x]), 0, barWidth, vm.pHeight);\n                }\n            });\n\n            two.update();\n\n            if(d3Node) {\n                /* Ignore interactivity if SVG was passed in (for download). */\n                return;\n            }\n            \n            /*\n             * Listen for mouse events\n             */\n            const getDataFromMouse = (mouseX, mouseY) => {\n                // Get the corresponding pixel color on the hidden canvas\n                const col = contextHidden.getImageData(mouseX * ratio, mouseY * ratio, scaledWidth, scaledHeight).data;\n                const colString = \"rgb(\" + col[0] + \",\" + col[1] + \",\"+ col[2] + \")\";\n                // Look up the node in our map\n                return colToNode[colString];\n            };\n\n            const debouncedTooltipDestroy = debounce(vm.tooltipDestroy, TOOLTIP_DEBOUNCE);\n            canvas.on(\"mousemove\", () => {\n                const mouse = d3_mouse(canvasNode);\n                const mouseX = mouse[0];\n                const mouseY = mouse[1];\n\n                const node = getDataFromMouse(mouseX, mouseY);\n\n                const mouseViewportX = d3_event.clientX;\n                const mouseViewportY = d3_event.clientY;\n\n                if(node) {\n                    vm.tooltip(mouseViewportX, mouseViewportY, node[\"x\"], node[\"c\"]); \n                } else {\n                    debouncedTooltipDestroy();\n                }\n            })\n            .on(\"mouseleave\", vm.tooltipDestroy);\n\n            if(vm.clickHandler !== undefined) {\n                canvas.on(\"click\", () => {\n                    const mouse = d3_mouse(canvasNode);\n                    const mouseX = mouse[0];\n                    const mouseY = mouse[1];\n\n                    const node = getDataFromMouse(mouseX, mouseY);\n\n                    if(node) {\n                        vm.clickHandler(node[\"x\"], node[\"c\"]);\n                    }\n                });\n            }\n            \n        }\n    }\n}\n</script>\n\n<style>\n@import '../../style/plot-style.css';\n</style>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TrackPlot.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TrackPlot.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./TrackPlot.vue?vue&type=template&id=1ca9616a&\"\nimport script from \"./TrackPlot.vue?vue&type=script&lang=js&\"\nexport * from \"./TrackPlot.vue?vue&type=script&lang=js&\"\nimport style0 from \"./TrackPlot.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('canvas',{staticClass:\"vdp-plot\",style:({\n            'height': (this.pHeight) + 'px', \n            'width': (this.pWidth) + 'px',\n            'top': (this.pMarginTop) + 'px',\n            'left': (this.pMarginLeft) + 'px'\n        }),attrs:{\"id\":this.plotElemID}}),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(this.highlightXY !== null),expression:\"this.highlightXY !== null\"}],staticClass:\"vdp-plot-highlight-rect\",style:({\n            'height': (this.pHeight - 0.5) + 'px', \n            'width': (this.pWidth - 0.5) + 'px', \n            'top': (this.pMarginTop - 0.5) + 'px',\n            'left': (this.pMarginLeft - 0.5) + 'px'\n        })}),_c('div',{staticClass:\"vdp-tooltip\",style:(this.tooltipPositionAttribute),attrs:{\"id\":this.tooltipElemID}},[_c('table',[_c('tr',[_c('th',[_vm._v(_vm._s(this._zScale.name))]),_c('td',[_vm._v(_vm._s(this.tooltipInfo.z))])]),_c('tr',[_c('th',[_vm._v(_vm._s(this._cScale.name))]),_c('td',[_vm._v(_vm._s(this.tooltipInfo.c))])])])])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <div>\n        <canvas \n            :id=\"this.plotElemID\" \n            class=\"vdp-plot\" \n            :style=\"{\n                'height': (this.pHeight) + 'px', \n                'width': (this.pWidth) + 'px',\n                'top': (this.pMarginTop) + 'px',\n                'left': (this.pMarginLeft) + 'px'\n            }\"\n        ></canvas>\n        <div v-show=\"this.highlightXY !== null\"\n            :style=\"{\n                'height': (this.pHeight - 0.5) + 'px', \n                'width': (this.pWidth - 0.5) + 'px', \n                'top': (this.pMarginTop - 0.5) + 'px',\n                'left': (this.pMarginLeft - 0.5) + 'px'\n            }\"\n            class=\"vdp-plot-highlight-rect\"\n        ></div>\n        <div :id=\"this.tooltipElemID\" class=\"vdp-tooltip\" :style=\"this.tooltipPositionAttribute\">\n            <table>\n                <tr>\n                    <th>{{ this._zScale.name }}</th>\n                    <td>{{ this.tooltipInfo.z }}</td>\n                </tr>\n                <tr>\n                    <th>{{ this._cScale.name }}</th>\n                    <td>{{ this.tooltipInfo.c }}</td>\n                </tr>\n            </table>\n        </div>\n    </div>\n</template>\n\n<script>\nimport Two from '../../two.js';\nimport { select as d3_select } from 'd3-selection';\nimport { event as d3_event } from 'd3';\n\nimport AbstractScale from './../../scales/AbstractScale.js';\nimport DataContainer from './../../data/DataContainer.js';\n\nimport mixin from './mixin.js';\nimport CategoricalScale from './../../scales/CategoricalScale.js';\n\n\nlet uuid = 0;\n/**\n * @prop {string} c The color-scale variable key.\n * @prop {string} z The observation-scale variable key.\n * @prop {string} o The observation (observation-scale domain element of interest).\n * @prop {boolean} disableTooltip Whether to disable tooltips. Default: false\n * @extends mixin\n * \n * @example\n * <RectPlot\n *      data=\"clinical_data\"\n *      z=\"sample_id\" \n *      o=\"SA12345\"\n *      c=\"age\"\n *      :pWidth=\"500\"\n *      :pHeight=\"300\"\n *      :pMarginTop=\"10\"\n *      :pMarginLeft=\"120\"\n *      :pMarginRight=\"10\"\n *      :pMarginBottom=\"150\"\n *      :getData=\"getData\"\n *      :getScale=\"getScale\"\n *      :clickHandler=\"myClickHandler\"\n * />\n */\nexport default {\n    name: 'RectPlot',\n    mixins: [mixin],\n    props: {\n        'z': { // observation scale\n            type: String\n        },\n        'c': { // color scale\n            type: String\n        },\n        'o': { // observation value\n            type: String\n        },\n        'disableTooltip': {\n            type: Boolean, \n            default: false\n        }\n    },\n    data() {\n        return {\n            tooltipInfo: {\n                z: '',\n                c: ''\n            },\n            highlightXY: null\n        }\n    },\n    beforeCreate() {\n        this.uuid = this.$options.name + uuid.toString();\n        uuid += 1;\n    },\n    created() {\n        // Set data\n        this._dataContainer = this.getData(this.data);\n        console.assert(this._dataContainer instanceof DataContainer);\n        // Set scale variables\n        this._zScale = this.getScale(this.z);\n        this._cScale = this.getScale(this.c);\n        console.assert(this._zScale instanceof CategoricalScale);\n        console.assert(this._cScale instanceof AbstractScale);\n\n        // Subscribe to event publishers here\n        this._zScale.onUpdate(this.uuid, this.drawPlot);\n        this._cScale.onUpdate(this.uuid, this.drawPlot);\n\n        // Subscribe to data mutations here\n        this._dataContainer.onUpdate(this.uuid, this.drawPlot);\n\n        // Subscribe to highlights here\n        this._zScale.onHighlight(this.uuid, this.highlight);\n        this._zScale.onHighlightDestroy(this.uuid, this.highlightDestroy);\n    },\n    mounted() {\n        this.drawPlot();\n    },\n    beforeDestroy() {\n        // Unsubscribe to events\n        this._cScale.onUpdate(this.uuid, null);\n        this._zScale.onUpdate(this.uuid, null);\n\n        // Unsubscribe to data mutations here\n        this._dataContainer.onUpdate(this.uuid, null);\n\n        // Unsubscribe to highlights here\n        this._zScale.onHighlight(this.uuid, null);\n        this._zScale.onHighlightDestroy(this.uuid, null);\n    },\n    watch: {\n        o() {\n            this.drawPlot();\n        }\n    },\n    methods: {\n        tooltip: function(mouseX, mouseY, z, c) {\n            // Set values\n            this.tooltipInfo.z = this._zScale.toHuman(z);\n            this.tooltipInfo.c = this._cScale.toHuman(c);\n\n            // Set position\n            if(!this.disableTooltip) {\n                this.tooltipPosition.left = mouseX;\n                this.tooltipPosition.top = mouseY;\n            }\n            \n            // Dispatch highlights\n            this._zScale.emitHighlight(z);\n            this._cScale.emitHighlight(c);\n        },\n        tooltipDestroy: function() {\n            this.tooltipHide();\n\n            // Destroy all highlights here\n            this._zScale.emitHighlightDestroy();\n            this._cScale.emitHighlightDestroy();\n        },\n        highlight(oVal) {\n            if(this.o === oVal) {\n                this.highlightXY = true;\n            } else {\n                this.highlightXY = null;\n            }\n        },\n        highlightDestroy() {\n            this.highlightXY = null;\n        },\n        drawPlot(d3Node) {\n            const vm = this;\n\n            if(vm._dataContainer.isLoading || vm._zScale.isLoading || vm._cScale.isLoading) {\n                return;\n            }\n            \n            const data = vm._dataContainer.dataCopy;\n            \n            const cScale = vm._cScale;\n\n            const point = data.find((el) => el[vm.z] === vm.o); // the single data point\n\n            if(point === undefined) {\n                return;\n            }\n            \n            /*\n             * Scale up the canvas\n             */\n            let canvas;\n            if(d3Node) {\n                canvas = d3Node;\n            } else {\n                canvas = d3_select(this.plotSelector);\n            }\n\n            const canvasNode = canvas.node();\n\n            if(!canvasNode) {\n                return;\n            }\n\n            const two = new Two({ \n                width: vm.pWidth, \n                height: vm.pHeight, \n                domElement: canvasNode\n            });\n\n            /*\n             * Draw the rect\n             */\n            const rect = two.makeRectangle(0 + vm.pWidth/2, 0 + vm.pHeight/2, vm.pWidth, vm.pHeight);\n            rect.fill = cScale.color(point[vm.c]);\n            rect.noStroke();\n\n            two.update();\n\n            if(d3Node) {\n                /* Ignore interactivity if SVG was passed in (for download). */\n                return;\n            }\n\n            /*\n             * Listen for mouse events\n             */\n            canvas.on(\"mousemove\", () => {\n\n                const mouseViewportX = d3_event.clientX;\n                const mouseViewportY = d3_event.clientY;\n\n                vm.tooltip(mouseViewportX, mouseViewportY, vm.o, point[vm.c]); \n               \n            })\n            .on(\"mouseleave\", vm.tooltipDestroy);\n\n            if(vm.clickHandler !== undefined) {\n                canvas.on(\"click\", () => {\n                    vm.clickHandler(vm.o, point[vm.c]);\n                });\n            }\n            \n        }\n    }\n}\n</script>\n\n<style>\n@import '../../style/plot-style.css';\n</style>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./RectPlot.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./RectPlot.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./RectPlot.vue?vue&type=template&id=67f02bdd&\"\nimport script from \"./RectPlot.vue?vue&type=script&lang=js&\"\nexport * from \"./RectPlot.vue?vue&type=script&lang=js&\"\nimport style0 from \"./RectPlot.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('canvas',{staticClass:\"vdp-plot\",style:({\n            'height': (this.pHeight) + 'px', \n            'width': (this.pWidth) + 'px',\n            'top': (this.pMarginTop) + 'px',\n            'left': (this.pMarginLeft) + 'px'\n        }),attrs:{\"id\":this.plotElemID}}),_c('canvas',{staticClass:\"vdp-plot-hidden\",style:({\n            'height': (this.pHeight) + 'px', \n            'width': (this.pWidth) + 'px',\n            'top': (this.pMarginTop) + 'px',\n            'left': (this.pMarginLeft) + 'px'\n        }),attrs:{\"id\":this.hiddenPlotElemID}}),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(this.highlightY !== null),expression:\"this.highlightY !== null\"}],staticClass:\"vdp-plot-highlight-rect\",style:({\n            'height': (this.highlightHeight - 0.5) + 'px', \n            'width': (this.highlightWidth - 0.5) + 'px', \n            'top': (this.pMarginTop + this.highlightY - 0.5) + 'px',\n            'left': (this.pMarginLeft - 0.5) + 'px'\n        })}),_c('div',{staticClass:\"vdp-tooltip\",style:(this.tooltipPositionAttribute),attrs:{\"id\":this.tooltipElemID}},[_c('table',[_c('tr',[_c('th',[_vm._v(_vm._s(this._zScale.name))]),_c('td',[_vm._v(_vm._s(this.tooltipInfo.z))])]),_c('tr',[_c('th',[_vm._v(_vm._s(this.tooltipInfo.cName))]),_c('td',[_vm._v(_vm._s(this.tooltipInfo.c))])])])])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <div>\n        <canvas \n            :id=\"this.plotElemID\" \n            class=\"vdp-plot\" \n            :style=\"{\n                'height': (this.pHeight) + 'px', \n                'width': (this.pWidth) + 'px',\n                'top': (this.pMarginTop) + 'px',\n                'left': (this.pMarginLeft) + 'px'\n            }\"\n        ></canvas>\n        <canvas \n            :id=\"this.hiddenPlotElemID\" \n            class=\"vdp-plot-hidden\" \n            :style=\"{\n                'height': (this.pHeight) + 'px', \n                'width': (this.pWidth) + 'px',\n                'top': (this.pMarginTop) + 'px',\n                'left': (this.pMarginLeft) + 'px'\n            }\"\n        ></canvas>\n        <div v-show=\"this.highlightY !== null\"\n            :style=\"{\n                'height': (this.highlightHeight - 0.5) + 'px', \n                'width': (this.highlightWidth - 0.5) + 'px', \n                'top': (this.pMarginTop + this.highlightY - 0.5) + 'px',\n                'left': (this.pMarginLeft - 0.5) + 'px'\n            }\"\n            class=\"vdp-plot-highlight-rect\"\n        ></div>\n        <div :id=\"this.tooltipElemID\" class=\"vdp-tooltip\" :style=\"this.tooltipPositionAttribute\">\n            <table>\n                <tr>\n                    <th>{{ this._zScale.name }}</th>\n                    <td>{{ this.tooltipInfo.z }}</td>\n                </tr>\n                <tr>\n                    <th>{{ this.tooltipInfo.cName }}</th>\n                    <td>{{ this.tooltipInfo.c }}</td>\n                </tr>\n            </table>\n        </div>\n    </div>\n</template>\n\n<script>\nimport Two from '../../two.js';\nimport { scaleBand as d3_scaleBand } from 'd3-scale';\nimport { select as d3_select, create as d3_create } from 'd3-selection';\nimport { mouse as d3_mouse, event as d3_event } from 'd3';\nimport debounce from 'lodash/debounce';\nimport range from 'lodash/range';\nimport { TOOLTIP_DEBOUNCE, BAR_WIDTH_MIN } from './../../constants.js';\nimport { getRetinaRatio } from './../../helpers.js';\n\nimport AbstractScale from './../../scales/AbstractScale.js';\nimport DataContainer from './../../data/DataContainer.js';\n\nimport mixin from './mixin.js';\nimport ContinuousScale from './../../scales/ContinuousScale.js';\nimport CategoricalScale from './../../scales/CategoricalScale.js';\n\nlet uuid = 0;\n/**\n * @prop {string} dataArray An array of data keys.\n * @prop {string} cArray An array of color-scale variable keys.\n * @prop {string} z The observation-scale variable key.\n * @prop {string} o The observation (observation-scale domain element of interest).\n * @prop {number} rectMargin The margin between each rect.\n * @prop {number} rectSize The size of rects (only used if text values are enabled).\n * @prop {boolean} disableText Whether to disable the rendering of text for each value.\n * @prop {boolean} disableTooltip Whether to disable tooltips. Default: false\n * @extends mixin\n * \n * @example\n * <MultiDataRectPlot\n *      :dataArray=\"['BRCA1', 'BRCA2', 'NTHL1']\"\n *      :cArray=\"['mut_class', 'mut_class', 'mut_class']\"\n *      z=\"sample_id\" \n *      o=\"SA12345\"\n *      :pWidth=\"500\"\n *      :pHeight=\"300\"\n *      :pMarginTop=\"10\"\n *      :pMarginLeft=\"120\"\n *      :pMarginRight=\"10\"\n *      :pMarginBottom=\"150\"\n *      :getData=\"getData\"\n *      :getScale=\"getScale\"\n *      :clickHandler=\"myClickHandler\"\n * />\n */\nexport default {\n    name: 'MultiDataRectPlot',\n    mixins: [mixin],\n    props: {\n        'dataArray': {\n            type: Array\n        },\n        'cArray': {\n            type: Array\n        },\n        'z': { // observation scale\n            type: String\n        },\n        'o': { // observation value\n            type: String\n        },\n        'rectMargin': {\n            type: Number, \n            default: 4\n        },\n        'rectSize': {\n            type: Number\n        },\n        'textSize': {\n            type: Number,\n            default: 12\n        },\n        'textColor': {\n            type: String,\n            default: \"#000\"\n        },\n        'disableText': {\n            type: Boolean,\n            default: true\n        },\n        'disableTooltip': {\n            type: Boolean, \n            default: false\n        }\n    },\n    data() {\n        return {\n            tooltipInfo: {\n                z: '',\n                c: '',\n                cName: '',\n            },\n            highlightYScale: null,\n            highlightY: null,\n            highlightHeight: null,\n            highlightWidth: null,\n        }\n    },\n    beforeCreate() {\n        this.uuid = this.$options.name + uuid.toString();\n        uuid += 1;\n    },\n    created() {\n        // Set data\n        this._dataContainers = this.dataArray.map((dataKey) => {\n            const dataContainer = this.getData(dataKey);\n            console.assert(dataContainer instanceof DataContainer);\n            return dataContainer;\n        });\n\n        // Set scale variables\n        this._cScales = this.cArray.map((cKey) => {\n            const cScale = this.getScale(cKey);\n            console.assert(cScale instanceof AbstractScale);\n            return cScale;\n        });\n        \n        this._zScale = this.getScale(this.z);\n        console.assert(this._zScale instanceof CategoricalScale);\n\n        // Subscribe to event publishers here\n        this._zScale.onUpdate(this.uuid, this.drawPlot);\n        this._cScales.forEach((cScale) => {\n            cScale.onUpdate(this.uuid, this.drawPlot);\n        });\n\n        // Subscribe to data mutations here\n        this._dataContainers.forEach((dataContainer) => {\n            dataContainer.onUpdate(this.uuid, this.drawPlot);\n        });\n\n        // Subscribe to highlights here\n        this._zScale.onHighlight(this.uuid, this.highlight);\n        this._zScale.onHighlightDestroy(this.uuid, this.highlightDestroy);\n    },\n    mounted() {\n        this.drawPlot();\n    },\n    beforeDestroy() {\n        // Unsubscribe to events\n        this._cScales.forEach((cScale) => {\n            cScale.onUpdate(this.uuid, null);\n        });\n        this._zScale.onUpdate(this.uuid, null);\n\n        // Unsubscribe to data mutations here\n        this._dataContainers.forEach((dataContainer) => {\n            dataContainer.onUpdate(this.uuid, null);\n        });\n\n        // Unsubscribe to highlights here\n        this._zScale.onHighlight(this.uuid, null);\n        this._zScale.onHighlightDestroy(this.uuid, null);\n    },\n    watch: {\n        o() {\n            this.drawPlot();\n        },\n        dataArray() {\n            this._dataContainers.forEach((dataContainer) => {\n                dataContainer.onUpdate(this.uuid, null);\n            });\n\n            this._dataContainers = this.dataArray.map((dataKey) => {\n                const dataContainer = this.getData(dataKey);\n                console.assert(dataContainer instanceof DataContainer);\n                return dataContainer;\n            });\n\n            this._dataContainers.forEach((dataContainer) => {\n                dataContainer.onUpdate(this.uuid, this.drawPlot);\n            });\n\n            this.drawPlot();\n        },\n        cArray() {\n            this._cScales.forEach((cScale) => {\n                cScale.onUpdate(this.uuid, null);\n            });\n\n            this._cScales = this.cArray.map((cKey) => {\n                const cScale = this.getScale(cKey);\n                console.assert(cScale instanceof AbstractScale);\n                return cScale;\n            });\n\n            this._cScales.forEach((cScale) => {\n                cScale.onUpdate(this.uuid, this.drawPlot);\n            });\n        }\n    },\n    methods: {\n        tooltip(mouseX, mouseY, z, c, i) {\n            // Set values\n            this.tooltipInfo.z = this._zScale.toHuman(z);\n            this.tooltipInfo.c = this._cScales[i].toHuman(c);\n            this.tooltipInfo.cName = this._cScales[i].name\n\n            // Set position\n            if(!this.disableTooltip) {\n                this.tooltipPosition.left = mouseX;\n                this.tooltipPosition.top = mouseY;\n            }\n\n            // Dispatch highlights\n            this._zScale.emitHighlight(z);\n            this._cScales[i].emitHighlight(c);\n        },\n        tooltipDestroy() {\n            this.tooltipHide();\n\n            // Destroy all highlights here\n            this._zScale.emitHighlightDestroy();\n            this._cScales.forEach((cScale) => {\n                cScale.emitHighlightDestroy();\n            });\n        },\n        highlight() {\n            this.highlightXY = null;\n        },\n        highlightDestroy() {\n            this.highlightXY = null;\n        },\n        drawPlot(d3Node) {\n            const vm = this;\n\n            if(vm._dataContainers.length !== vm._cScales.length || vm._dataContainers.reduce((a, h) => (a || h.isLoading), false) || vm._cScales.reduce((a, h) => (a || h.isLoading), false) || vm._zScale.isLoading) {\n                return;\n            }\n            \n            const cScales = vm._cScales;\n\n            const point = vm._dataContainers.map((dc) => dc.dataCopy.find((el) => el[vm.z] === vm.o)); // the single data point\n            \n            /*\n             * Scale up the canvas\n             */\n            let canvas;\n            if(d3Node) {\n                canvas = d3Node;\n            } else {\n                canvas = d3_select(this.plotSelector);\n            }\n\n            const canvasNode = canvas.node();\n\n            if(!canvasNode) {\n                return;\n            }\n\n            const two = new Two({ \n                width: vm.pWidth, \n                height: vm.pHeight, \n                domElement: canvasNode\n            });\n\n            let canvasHidden, contextHidden;\n            try {\n                canvasHidden = d3_select(this.hiddenPlotSelector);\n                contextHidden = canvasHidden.node().getContext('2d');\n            } catch(e) {\n                canvasHidden = d3_create(\"canvas\");\n                contextHidden = canvasHidden.node().getContext('2d');\n            }\n\n            const ratio = getRetinaRatio(contextHidden);\n            const scaledWidth = vm.pWidth * ratio;\n            const scaledHeight = vm.pHeight * ratio;\n\n            canvasHidden\n                .attr(\"width\", scaledWidth)\n                .attr(\"height\", scaledHeight);\n            contextHidden.scale(ratio, ratio);\n\n            /*\n             * Set up the color mappings\n             */\n            const colToNode = {};\n\n            /*\n             * Generates the next color in the sequence, \n             * going from 0,0,0 to 255,255,255.\n             */\n            let nextCol = 1;\n            const genColor = () => {\n                let ret = [];\n                // via http://stackoverflow.com/a/15804183\n                if(nextCol < 16777215){\n                    ret.push(nextCol & 0xff); // R\n                    ret.push((nextCol & 0xff00) >> 8); // G \n                    ret.push((nextCol & 0xff0000) >> 16); // B\n\n                    nextCol += 20;\n                }\n                let col = \"rgb(\" + ret.join(',') + \")\";\n                return col;\n            }\n\n            /*\n             * Draw the rect\n             */\n\n            // Compute sizes.\n\n            const numRects = point.length;\n\n            const y = d3_scaleBand()\n                .domain(range(numRects))\n                .range([0, vm.pHeight]);\n\n            let rectHeight, rectWidth, rectMargin, textWidth;\n\n            rectMargin = vm.rectMargin;\n            \n\n            rectHeight = vm.pHeight / numRects;\n            rectWidth = vm.pWidth;\n\n            if(rectHeight - rectMargin <= BAR_WIDTH_MIN) {\n                rectMargin = 0;\n            }\n\n            if(!vm.disableText && vm.rectSize > 0) {\n                rectWidth = vm.rectSize;\n            }\n            textWidth = vm.pWidth - rectWidth;\n\n            vm.highlightHeight = rectHeight;\n            vm.highlightWidth = vm.pWidth;\n\n            // Compute offsets if text will be on one side.\n            let textOffsetX = 0;\n\n            if(!vm.disableText && vm.rectSize > 0) {\n                textOffsetX = rectWidth;\n            }\n\n            point.forEach((pointValue, i) => {\n                const d = point[i][vm.cArray[i]];\n                if(\n                    AbstractScale.isUnknown(d) ||\n                    (\n                        (cScales[i] instanceof CategoricalScale && cScales[i].domainFiltered.includes(d))\n                        || \n                        (cScales[i] instanceof ContinuousScale && cScales[i].domainFiltered[0] <= d && cScales[i].domainFiltered[1] >= d)\n                    )\n                ) {\n                    const col = genColor();\n                    colToNode[col] = { \"i\": i, \"c\": d };\n                    contextHidden.fillStyle = col;\n\n                    const textValue = this._cScales[i].toHuman(d);\n\n                    const rect = two.makeRectangle(\n                        0.5 + rectWidth/2, y(i) + rectHeight/2, \n                        rectWidth, rectHeight - rectMargin\n                    );\n                    contextHidden.fillRect(\n                        0.5, y(i), \n                        rectWidth, rectHeight\n                    );\n\n                    const text = two.makeText(\n                        textOffsetX + 4, y(i) + (rectHeight/2) + 7, \n                        textWidth, rectHeight, textValue\n                    );\n\n                    text.textalign = \"left\";\n                    rect.fill = cScales[i].color(d);\n                    rect.noStroke();\n\n                    text.fontsize = vm.textSize;\n                    text.fill = vm.textColor;\n                }\n            });\n            \n\n            two.update();\n\n            if(d3Node) {\n                /* Ignore interactivity if SVG was passed in (for download). */\n                return;\n            }\n\n            /*\n             * Listen for mouse events\n             */\n            const getDataFromMouse = (mouseX, mouseY) => {\n                // Get the corresponding pixel color on the hidden canvas\n                const col = contextHidden.getImageData(mouseX * ratio, mouseY * ratio, scaledWidth, scaledHeight).data;\n                const colString = \"rgb(\" + col[0] + \",\" + col[1] + \",\"+ col[2] + \")\";\n                // Look up the node in our map\n                return colToNode[colString];\n            };\n\n            const debouncedTooltipDestroy = debounce(vm.tooltipDestroy, TOOLTIP_DEBOUNCE);\n            canvas.on(\"mousemove\", () => {\n                const mouse = d3_mouse(canvasNode);\n                const mouseX = mouse[0];\n                const mouseY = mouse[1];\n\n                const node = getDataFromMouse(mouseX, mouseY);\n\n                const mouseViewportX = d3_event.clientX;\n                const mouseViewportY = d3_event.clientY;\n\n                if(node) {\n                    vm.tooltip(mouseViewportX, mouseViewportY, vm.o, node[\"c\"], node[\"i\"]); \n                } else {\n                    debouncedTooltipDestroy();\n                }\n            })\n            .on(\"mouseleave\", vm.tooltipDestroy);\n\n            if(vm.clickHandler !== undefined) {\n                canvas.on(\"click\", () => {\n                    const mouse = d3_mouse(canvasNode);\n                    const mouseX = mouse[0];\n                    const mouseY = mouse[1];\n\n                    const node = getDataFromMouse(mouseX, mouseY);\n\n                    if(node) {\n                        vm.clickHandler(vm.o, node[\"c\"]);\n                    }\n                });\n            }\n            \n        }\n    }\n}\n</script>\n\n<style>\n@import '../../style/plot-style.css';\n</style>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MultiDataRectPlot.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MultiDataRectPlot.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./MultiDataRectPlot.vue?vue&type=template&id=248f21f7&\"\nimport script from \"./MultiDataRectPlot.vue?vue&type=script&lang=js&\"\nexport * from \"./MultiDataRectPlot.vue?vue&type=script&lang=js&\"\nimport style0 from \"./MultiDataRectPlot.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('canvas',{staticClass:\"vdp-plot\",style:({\n            'height': (this.pHeight) + 'px', \n            'width': (this.pWidth) + 'px',\n            'top': (this.pMarginTop) + 'px',\n            'left': (this.pMarginLeft) + 'px'\n        }),attrs:{\"id\":this.plotElemID}}),_c('canvas',{staticClass:\"vdp-plot-hidden\",style:({\n            'height': (this.pHeight) + 'px', \n            'width': (this.pWidth) + 'px',\n            'top': (this.pMarginTop) + 'px',\n            'left': (this.pMarginLeft) + 'px'\n        }),attrs:{\"id\":this.hiddenPlotElemID}}),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(this.highlightX1 !== null),expression:\"this.highlightX1 !== null\"}],staticClass:\"vdp-plot-highlight\",style:({\n            'height': (this.pHeight) + 'px', \n            'width': '1px',\n            'top': (this.pMarginTop) + 'px',\n            'left': (this.pMarginLeft + this.highlightX1 - 0.5) + 'px'\n        })}),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(this.highlightX2 !== null),expression:\"this.highlightX2 !== null\"}],staticClass:\"vdp-plot-highlight\",style:({\n            'height': (this.pHeight) + 'px', \n            'width': '1px',\n            'top': (this.pMarginTop) + 'px',\n            'left': (this.pMarginLeft + this.highlightX2 - 0.5) + 'px'\n        })}),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(this.highlightY1 !== null),expression:\"this.highlightY1 !== null\"}],staticClass:\"vdp-plot-highlight\",style:({\n            'height': '1px', \n            'width': (this.pWidth) + 'px',\n            'top': (this.pMarginTop + this.highlightY1 - 0.5) + 'px',\n            'left': (this.pMarginLeft) + 'px'\n        })}),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(this.highlightY2 !== null),expression:\"this.highlightY2 !== null\"}],staticClass:\"vdp-plot-highlight\",style:({\n            'height': '1px', \n            'width': (this.pWidth) + 'px',\n            'top': (this.pMarginTop + this.highlightY2 - 0.5) + 'px',\n            'left': (this.pMarginLeft) + 'px'\n        })}),_c('div',{staticClass:\"vdp-tooltip\",style:(this.tooltipPositionAttribute),attrs:{\"id\":this.tooltipElemID}},[_c('table',[_c('tr',[_c('th',[_vm._v(_vm._s(this._xScale.name))]),_c('td',[_vm._v(_vm._s(this.tooltipInfo.x))])]),_c('tr',[_c('th',[_vm._v(_vm._s(this._yScale.name))]),_c('td',[_vm._v(_vm._s(this.tooltipInfo.y))])]),_c('tr',[_c('th',[_vm._v(_vm._s(this._cScale.name))]),_c('td',[_vm._v(_vm._s(this.tooltipInfo.c))])])])])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <div>\n        <canvas \n            :id=\"this.plotElemID\" \n            class=\"vdp-plot\" \n            :style=\"{\n                'height': (this.pHeight) + 'px', \n                'width': (this.pWidth) + 'px',\n                'top': (this.pMarginTop) + 'px',\n                'left': (this.pMarginLeft) + 'px'\n            }\"\n        ></canvas>\n        <canvas \n            :id=\"this.hiddenPlotElemID\" \n            class=\"vdp-plot-hidden\" \n            :style=\"{\n                'height': (this.pHeight) + 'px', \n                'width': (this.pWidth) + 'px',\n                'top': (this.pMarginTop) + 'px',\n                'left': (this.pMarginLeft) + 'px'\n            }\"\n        ></canvas>\n        <div v-show=\"this.highlightX1 !== null\"\n            :style=\"{\n                'height': (this.pHeight) + 'px', \n                'width': '1px',\n                'top': (this.pMarginTop) + 'px',\n                'left': (this.pMarginLeft + this.highlightX1 - 0.5) + 'px'\n            }\"\n            class=\"vdp-plot-highlight\"\n        ></div>\n        <div v-show=\"this.highlightX2 !== null\"\n            :style=\"{\n                'height': (this.pHeight) + 'px', \n                'width': '1px',\n                'top': (this.pMarginTop) + 'px',\n                'left': (this.pMarginLeft + this.highlightX2 - 0.5) + 'px'\n            }\"\n            class=\"vdp-plot-highlight\"\n        ></div>\n        <div v-show=\"this.highlightY1 !== null\"\n            :style=\"{\n                'height': '1px', \n                'width': (this.pWidth) + 'px',\n                'top': (this.pMarginTop + this.highlightY1 - 0.5) + 'px',\n                'left': (this.pMarginLeft) + 'px'\n            }\"\n            class=\"vdp-plot-highlight\"\n        ></div>\n        <div v-show=\"this.highlightY2 !== null\"\n            :style=\"{\n                'height': '1px', \n                'width': (this.pWidth) + 'px',\n                'top': (this.pMarginTop + this.highlightY2 - 0.5) + 'px',\n                'left': (this.pMarginLeft) + 'px'\n            }\"\n            class=\"vdp-plot-highlight\"\n        ></div>\n        <div :id=\"this.tooltipElemID\" class=\"vdp-tooltip\" :style=\"this.tooltipPositionAttribute\">\n            <table>\n                <tr>\n                    <th>{{ this._xScale.name }}</th>\n                    <td>{{ this.tooltipInfo.x }}</td>\n                </tr>\n                <tr>\n                    <th>{{ this._yScale.name }}</th>\n                    <td>{{ this.tooltipInfo.y }}</td>\n                </tr>\n                <tr>\n                    <th>{{ this._cScale.name }}</th>\n                    <td>{{ this.tooltipInfo.c }}</td>\n                </tr>\n            </table>\n        </div>\n    </div>\n</template>\n\n<script>\nimport Two from '../../two.js';\nimport { scaleBand as d3_scaleBand } from 'd3-scale';\nimport { select as d3_select, create as d3_create } from 'd3-selection';\nimport { mouse as d3_mouse, event as d3_event } from 'd3';\nimport debounce from 'lodash/debounce';\nimport { TOOLTIP_DEBOUNCE, BAR_WIDTH_MIN, BAR_HEIGHT_MIN, BAR_MARGIN_DEFAULT } from './../../constants.js';\nimport { getRetinaRatio } from './../../helpers.js';\n\nimport AbstractScale from './../../scales/AbstractScale.js';\nimport DataContainer from './../../data/DataContainer.js';\n\nimport mixin from './mixin.js';\n\nlet uuid = 0;\n/**\n * @prop {string} x The x-scale variable key.\n * @prop {string} y The y-scale variable key.\n * @prop {string} c The color-scale variable key.\n * @prop {number} barMarginX The value for the horizontal margin between bars. Default: 2\n * @prop {number} barMarginY The value for the vertical margin between bars. Default: 2\n * @extends mixin\n * \n * @example\n * <MultiTrackPlot\n *      data=\"exposures_data\"\n *      x=\"sample_id\" \n *      y=\"signature\"\n *      c=\"exposure\"\n *      :pWidth=\"500\"\n *      :pHeight=\"300\"\n *      :pMarginTop=\"10\"\n *      :pMarginLeft=\"120\"\n *      :pMarginRight=\"10\"\n *      :pMarginBottom=\"150\"\n *      :getData=\"getData\"\n *      :getScale=\"getScale\"\n *      :clickHandler=\"myClickHandler\"\n * />\n */\nexport default {\n    name: 'MultiTrackPlot',\n    mixins: [mixin],\n    props: {\n        'x': {\n            type: String\n        },\n        'y': {\n            type: String\n        },\n        'c': {\n            type: String\n        },\n        'barMarginX': {\n            type: Number, \n            default: BAR_MARGIN_DEFAULT\n        },\n        'barMarginY': {\n            type: Number, \n            default: BAR_MARGIN_DEFAULT\n        }\n    },\n    data() {\n        return {\n            tooltipInfo: {\n                x: '',\n                y: '',\n                c: ''\n            },\n            highlightX1: null,\n            highlightX2: null,\n            highlightY1: null,\n            highlightY2: null,\n            highlightXScale: null,\n            highlightYScale: null,\n            barWidth: 0,\n            barHeight: 0\n        }\n    },\n    beforeCreate() {\n        this.uuid = this.$options.name + uuid.toString();\n        uuid += 1;\n    },\n    created() {\n        // Set data\n        this._dataContainer = this.getData(this.data);\n        console.assert(this._dataContainer instanceof DataContainer);\n        // Set scale variables\n        this._xScale = this.getScale(this.x);\n        this._yScale = this.getScale(this.y);\n        this._cScale = this.getScale(this.c);\n        console.assert(this._xScale instanceof AbstractScale);\n        console.assert(this._yScale instanceof AbstractScale);\n        console.assert(this._cScale instanceof AbstractScale);\n\n        // Subscribe to event publishers here\n        this._xScale.onUpdate(this.uuid, this.drawPlot);\n        this._yScale.onUpdate(this.uuid, this.drawPlot);\n        this._cScale.onUpdate(this.uuid, this.drawPlot);\n\n        // Subscribe to data mutations here\n        this._dataContainer.onUpdate(this.uuid, this.drawPlot);\n\n        // Subscribe to highlights here\n        this._xScale.onHighlight(this.uuid, this.highlightX);\n        this._xScale.onHighlightDestroy(this.uuid, this.highlightDestroy);\n\n        this._yScale.onHighlight(this.uuid, this.highlightY);\n        this._yScale.onHighlightDestroy(this.uuid, this.highlightDestroy);\n    },\n    mounted() {\n        this.drawPlot();\n    },\n    beforeDestroy() {\n        // Unsubscribe to events\n        this._yScale.onUpdate(this.uuid, null);\n        this._xScale.onUpdate(this.uuid, null);\n        this._cScale.onUpdate(this.uuid, null);\n        \n\n        // Unsubscribe to data mutations here\n        this._dataContainer.onUpdate(this.uuid, null);\n\n        // Unsubscribe to highlights here\n        this._xScale.onHighlight(this.uuid, null);\n        this._xScale.onHighlightDestroy(this.uuid, null);\n\n        this._yScale.onHighlight(this.uuid, null);\n        this._yScale.onHighlightDestroy(this.uuid, null);\n    },\n    watch: {\n        barMarginX() {\n            this.drawPlot();\n        },\n        barMarginY() {\n            this.drawPlot();\n        }\n    },\n    methods: {\n        tooltip: function(mouseX, mouseY, x, y, c) {\n            // Set values\n            this.tooltipInfo.x = this._xScale.toHuman(x);\n            this.tooltipInfo.y = this._yScale.toHuman(y);\n            this.tooltipInfo.c = this._cScale.toHuman(c);\n\n            // Set position\n            this.tooltipPosition.left = mouseX;\n            this.tooltipPosition.top = mouseY;\n            \n            // Dispatch highlights\n            this._xScale.emitHighlight(x);\n            this._yScale.emitHighlight(y);\n            this._cScale.emitHighlight(c);\n        },\n        tooltipDestroy: function() {\n            this.tooltipHide();\n\n            // Destroy all highlights here\n            this._xScale.emitHighlightDestroy();\n            this._yScale.emitHighlightDestroy();\n            this._cScale.emitHighlightDestroy();\n        },\n        highlightX(value) {\n            if(this.highlightXScale) {\n                this.highlightX1 = this.highlightXScale(value);\n                this.highlightX2 = this.highlightXScale(value) + this.barWidth;\n            }\n        },\n        highlightY(value) {\n            if(this.highlightYScale) {\n                this.highlightY1 = this.highlightYScale(value);\n                this.highlightY2 = this.highlightYScale(value) + this.barHeight;\n            }\n        },\n        highlightDestroy() {\n            this.highlightX1 = null;\n            this.highlightX2 = null;\n            this.highlightY1 = null;\n            this.highlightY2 = null;\n        },\n        drawPlot(d3Node) {\n            const vm = this;\n\n            if(vm._dataContainer.isLoading || vm._xScale.isLoading || vm._yScale.isLoading || vm._cScale.isLoading) {\n                return;\n            }\n            \n            let data = vm._dataContainer.dataCopy;\n\n            const xScale = vm._xScale;\n            const yScale = vm._yScale;\n            const cScale = vm._cScale;\n\n            data = data.filter((el) => xScale.domainFiltered.includes(el[vm.x]));\n\n            const x = d3_scaleBand()\n                .domain(xScale.domainFiltered)\n                .range([0, vm.pWidth]);\n\n            vm.highlightXScale = x;\n            \n            const y = d3_scaleBand()\n                .domain(yScale.domainFiltered.slice().reverse())\n                .range([vm.pHeight, 0]);\n\n            vm.highlightYScale = y;\n\n            const barWidth = vm.pWidth / xScale.domainFiltered.length;\n            vm.barWidth = barWidth;\n\n            const barHeight = vm.pHeight / yScale.domainFiltered.length;\n            vm.barHeight = barHeight;\n              \n            \n            /*\n             * Scale up the canvas\n             */\n            let canvas;\n            if(d3Node) {\n                canvas = d3Node;\n            } else {\n                canvas = d3_select(this.plotSelector);\n            }\n\n            const canvasNode = canvas.node();\n\n            if(!canvasNode) {\n                return;\n            }\n\n            const two = new Two({ \n                width: vm.pWidth, \n                height: vm.pHeight, \n                domElement: canvasNode\n            });\n\n            let canvasHidden, contextHidden;\n            try {\n                canvasHidden = d3_select(this.hiddenPlotSelector);\n                contextHidden = canvasHidden.node().getContext('2d');\n            } catch(e) {\n                canvasHidden = d3_create(\"canvas\");\n                contextHidden = canvasHidden.node().getContext('2d');\n            }\n\n            const ratio = getRetinaRatio(contextHidden);\n            const scaledWidth = vm.pWidth * ratio;\n            const scaledHeight = vm.pHeight * ratio;\n\n            canvasHidden\n                .attr(\"width\", scaledWidth)\n                .attr(\"height\", scaledHeight);\n            contextHidden.scale(ratio, ratio);\n\n            /*\n             * Set up the color mappings\n             */\n            const colToNode = {};\n\n            /*\n             * Generates the next color in the sequence, \n             * going from 0,0,0 to 255,255,255.\n             */\n            let nextCol = 1;\n            const genColor = () => {\n                let ret = [];\n                // via http://stackoverflow.com/a/15804183\n                if(nextCol < 16777215){\n                    ret.push(nextCol & 0xff); // R\n                    ret.push((nextCol & 0xff00) >> 8); // G \n                    ret.push((nextCol & 0xff0000) >> 16); // B\n\n                    nextCol += 20;\n                }\n                let col = \"rgb(\" + ret.join(',') + \")\";\n                return col;\n            }\n\n            /*\n             * Draw the track\n             */\n            let barMarginX = vm.barMarginX;\n            if(barWidth - vm.barMarginX <= BAR_WIDTH_MIN) {\n                barMarginX = 0;\n            }\n            let barMarginY = vm.barMarginY;\n            if(barHeight - vm.barMarginY <= BAR_HEIGHT_MIN) {\n                barMarginY = 0;\n            }\n            data.forEach((d) => {\n                yScale.domainFiltered.forEach((yVar) => {\n                    const col = genColor();\n                    colToNode[col] = { \"x\": d[vm.x], \"y\": yVar, \"c\": d[yVar] };\n                    contextHidden.fillStyle = col;\n\n                    const rect = two.makeRectangle(x(d[vm.x]) + (barMarginX/2) + (barWidth - barMarginX)/2, y(yVar) + (barMarginY/2) + (barHeight - barMarginY)/2, barWidth - barMarginX, barHeight - barMarginY);\n                    rect.fill = cScale.color(d[yVar]);\n                    rect.noStroke();\n                    \n                    contextHidden.fillRect(x(d[vm.x]), y(yVar), barWidth, barHeight);\n                });\n            });\n\n            two.update();\n\n            if(d3Node) {\n                /* Ignore interactivity if SVG was passed in (for download). */\n                return;\n            }\n            \n            /*\n             * Listen for mouse events\n             */\n            const getDataFromMouse = (mouseX, mouseY) => {\n                // Get the corresponding pixel color on the hidden canvas\n                const col = contextHidden.getImageData(mouseX * ratio, mouseY * ratio, scaledWidth, scaledHeight).data;\n                const colString = \"rgb(\" + col[0] + \",\" + col[1] + \",\"+ col[2] + \")\";\n                // Look up the node in our map\n                return colToNode[colString];\n            };\n\n            const debouncedTooltipDestroy = debounce(vm.tooltipDestroy, TOOLTIP_DEBOUNCE);\n            canvas.on(\"mousemove\", () => {\n                const mouse = d3_mouse(canvasNode);\n                const mouseX = mouse[0];\n                const mouseY = mouse[1];\n\n                const node = getDataFromMouse(mouseX, mouseY);\n\n                const mouseViewportX = d3_event.clientX;\n                const mouseViewportY = d3_event.clientY;\n\n                if(node) {\n                    vm.tooltip(mouseViewportX, mouseViewportY, node[\"x\"], node[\"y\"], node[\"c\"]); \n                } else {\n                    debouncedTooltipDestroy();\n                }\n            })\n            .on(\"mouseleave\", vm.tooltipDestroy);\n\n            if(vm.clickHandler !== undefined) {\n                canvas.on(\"click\", () => {\n                    const mouse = d3_mouse(canvasNode);\n                    const mouseX = mouse[0];\n                    const mouseY = mouse[1];\n\n                    const node = getDataFromMouse(mouseX, mouseY);\n\n                    if(node) {\n                        vm.clickHandler(node[\"x\"], node[\"y\"], node[\"c\"]);\n                    }\n                });\n            }\n            \n        }\n    }\n}\n</script>\n\n<style>\n@import '../../style/plot-style.css';\n</style>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MultiTrackPlot.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MultiTrackPlot.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./MultiTrackPlot.vue?vue&type=template&id=54a6078e&\"\nimport script from \"./MultiTrackPlot.vue?vue&type=script&lang=js&\"\nexport * from \"./MultiTrackPlot.vue?vue&type=script&lang=js&\"\nimport style0 from \"./MultiTrackPlot.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('canvas',{staticClass:\"vdp-plot\",style:({\n            'height': (this.pHeight) + 'px', \n            'width': (this.pWidth) + 'px',\n            'top': (this.pMarginTop) + 'px',\n            'left': (this.pMarginLeft) + 'px'\n        }),attrs:{\"id\":this.plotElemID}}),_c('canvas',{staticClass:\"vdp-plot-hidden\",style:({\n            'height': (this.pHeight) + 'px', \n            'width': (this.pWidth) + 'px',\n            'top': (this.pMarginTop) + 'px',\n            'left': (this.pMarginLeft) + 'px'\n        }),attrs:{\"id\":this.hiddenPlotElemID}}),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(this.highlightX1 !== null),expression:\"this.highlightX1 !== null\"}],staticClass:\"vdp-plot-highlight\",style:({\n            'height': (this.pHeight) + 'px', \n            'width': '1px',\n            'top': (this.pMarginTop) + 'px',\n            'left': (this.pMarginLeft + this.highlightX1 + 1) + 'px'\n        })}),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(this.highlightX2 !== null),expression:\"this.highlightX2 !== null\"}],staticClass:\"vdp-plot-highlight\",style:({\n            'height': (this.pHeight) + 'px', \n            'width': '1px',\n            'top': (this.pMarginTop) + 'px',\n            'left': (this.pMarginLeft + this.highlightX2 - 0.5) + 'px'\n        })}),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(this.highlightY1 !== null),expression:\"this.highlightY1 !== null\"}],staticClass:\"vdp-plot-highlight\",style:({\n            'height': '1px', \n            'width': (this.pWidth) + 'px',\n            'top': (this.pMarginTop + this.highlightY1 - 0.5) + 'px',\n            'left': (this.pMarginLeft) + 'px'\n        })}),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(this.highlightY2 !== null),expression:\"this.highlightY2 !== null\"}],staticClass:\"vdp-plot-highlight\",style:({\n            'height': '1px', \n            'width': (this.pWidth) + 'px',\n            'top': (this.pMarginTop + this.highlightY2 - 0.5) + 'px',\n            'left': (this.pMarginLeft) + 'px'\n        })}),_c('div',{staticClass:\"vdp-tooltip\",style:(this.tooltipPositionAttribute),attrs:{\"id\":this.tooltipElemID}},[_c('table',[_c('tr',[_c('th',[_vm._v(_vm._s(this._xScale.name))]),_c('td',[_vm._v(_vm._s(this.tooltipInfo.x))])]),_c('tr',[_c('th',[_vm._v(_vm._s(this.tooltipInfo.cName))]),_c('td',[_vm._v(_vm._s(this.tooltipInfo.c))])])])])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <div>\n        <canvas \n            :id=\"this.plotElemID\" \n            class=\"vdp-plot\" \n            :style=\"{\n                'height': (this.pHeight) + 'px', \n                'width': (this.pWidth) + 'px',\n                'top': (this.pMarginTop) + 'px',\n                'left': (this.pMarginLeft) + 'px'\n            }\"\n        ></canvas>\n        <canvas \n            :id=\"this.hiddenPlotElemID\" \n            class=\"vdp-plot-hidden\" \n            :style=\"{\n                'height': (this.pHeight) + 'px', \n                'width': (this.pWidth) + 'px',\n                'top': (this.pMarginTop) + 'px',\n                'left': (this.pMarginLeft) + 'px'\n            }\"\n        ></canvas>\n        <div v-show=\"this.highlightX1 !== null\"\n            :style=\"{\n                'height': (this.pHeight) + 'px', \n                'width': '1px',\n                'top': (this.pMarginTop) + 'px',\n                'left': (this.pMarginLeft + this.highlightX1 + 1) + 'px'\n            }\"\n            class=\"vdp-plot-highlight\"\n        ></div>\n        <div v-show=\"this.highlightX2 !== null\"\n            :style=\"{\n                'height': (this.pHeight) + 'px', \n                'width': '1px',\n                'top': (this.pMarginTop) + 'px',\n                'left': (this.pMarginLeft + this.highlightX2 - 0.5) + 'px'\n            }\"\n            class=\"vdp-plot-highlight\"\n        ></div>\n        <div v-show=\"this.highlightY1 !== null\"\n            :style=\"{\n                'height': '1px', \n                'width': (this.pWidth) + 'px',\n                'top': (this.pMarginTop + this.highlightY1 - 0.5) + 'px',\n                'left': (this.pMarginLeft) + 'px'\n            }\"\n            class=\"vdp-plot-highlight\"\n        ></div>\n        <div v-show=\"this.highlightY2 !== null\"\n            :style=\"{\n                'height': '1px', \n                'width': (this.pWidth) + 'px',\n                'top': (this.pMarginTop + this.highlightY2 - 0.5) + 'px',\n                'left': (this.pMarginLeft) + 'px'\n            }\"\n            class=\"vdp-plot-highlight\"\n        ></div>\n        <div :id=\"this.tooltipElemID\" class=\"vdp-tooltip\" :style=\"this.tooltipPositionAttribute\">\n            <table>\n                <tr>\n                    <th>{{ this._xScale.name }}</th>\n                    <td>{{ this.tooltipInfo.x }}</td>\n                </tr>\n                <tr>\n                    <th>{{ this.tooltipInfo.cName }}</th>\n                    <td>{{ this.tooltipInfo.c }}</td>\n                </tr>\n            </table>\n        </div>\n    </div>\n</template>\n\n<script>\nimport Two from '../../two.js';\nimport { scaleBand as d3_scaleBand } from 'd3-scale';\nimport { select as d3_select, create as d3_create } from 'd3-selection';\nimport { mouse as d3_mouse, event as d3_event } from 'd3';\nimport debounce from 'lodash/debounce';\nimport range from 'lodash/range';\nimport { TOOLTIP_DEBOUNCE, BAR_WIDTH_MIN, BAR_HEIGHT_MIN, BAR_MARGIN_DEFAULT } from './../../constants.js';\nimport { getRetinaRatio } from './../../helpers.js';\n\nimport AbstractScale from './../../scales/AbstractScale.js';\nimport DataContainer from './../../data/DataContainer.js';\n\nimport mixin from './mixin.js';\nimport ContinuousScale from './../../scales/ContinuousScale.js';\nimport CategoricalScale from './../../scales/CategoricalScale.js';\n\nlet uuid = 0;\n/**\n * @prop {string} x The x-scale variable key.\n * @prop {string} dataArray An array of data keys.\n * @prop {string} cArray An array of color-scale keys.\n * @prop {number} barMarginX The value for the horizontal margin between bars. Default: 2\n * @prop {number} barMarginY The value for the vertical margin between bars. Default: 2\n * @extends mixin\n * \n * @example\n * <MultiDataTrackPlot\n *      x=\"sample_id\" \n *      :dataArray=\"['gene_A', 'gene_B', 'gene_C']\"\n *      :cArray=\"['mut_class', 'mut_class', 'mut_class']\"\n *      :pWidth=\"500\"\n *      :pHeight=\"300\"\n *      :pMarginTop=\"10\"\n *      :pMarginLeft=\"120\"\n *      :pMarginRight=\"10\"\n *      :pMarginBottom=\"150\"\n *      :getData=\"getData\"\n *      :getScale=\"getScale\"\n *      :clickHandler=\"myClickHandler\"\n * />\n */\nexport default {\n    name: 'MultiDataTrackPlot',\n    mixins: [mixin],\n    props: {\n        'x': {\n            type: String\n        },\n        'dataArray': {\n            type: Array\n        },\n        'cArray': {\n            type: Array\n        },\n        'barMarginX': {\n            type: Number, \n            default: BAR_MARGIN_DEFAULT\n        },\n        'barMarginY': {\n            type: Number, \n            default: 4\n        }\n    },\n    data() {\n        return {\n            tooltipInfo: {\n                x: '',\n                c: '',\n                cName: '',\n            },\n            highlightX1: null,\n            highlightX2: null,\n            highlightY1: null,\n            highlightY2: null,\n            highlightXScale: null,\n            highlightYScale: null,\n            barWidth: 0,\n            barHeight: 0\n        }\n    },\n    beforeCreate() {\n        this.uuid = this.$options.name + uuid.toString();\n        uuid += 1;\n    },\n    created() {\n        // Set data\n        this._dataContainers = this.dataArray.map((dataKey) => {\n            const dataContainer = this.getData(dataKey);\n            console.assert(dataContainer instanceof DataContainer);\n            return dataContainer;\n        });\n\n        // Set scale variables\n        this._xScale = this.getScale(this.x);\n        console.assert(this._xScale instanceof AbstractScale);\n        this._cScales = this.cArray.map((cKey) => {\n            const cScale = this.getScale(cKey);\n            console.assert(cScale instanceof AbstractScale);\n            return cScale;\n        });\n\n        // Subscribe to event publishers here\n        this._xScale.onUpdate(this.uuid, this.drawPlot);\n        this._cScales.forEach((cScale) => {\n            cScale.onUpdate(this.uuid, this.drawPlot);\n        });\n\n        // Subscribe to data mutations here\n        this._dataContainers.forEach((dataContainer) => {\n            dataContainer.onUpdate(this.uuid, this.drawPlot);\n        });\n\n        // Subscribe to highlights here\n        this._xScale.onHighlight(this.uuid, this.highlightX);\n        this._xScale.onHighlightDestroy(this.uuid, this.highlightDestroy);\n    },\n    mounted() {\n        this.drawPlot();\n    },\n    beforeDestroy() {\n        // Unsubscribe to events\n        this._xScale.onUpdate(this.uuid, null);\n        this._cScales.forEach((cScale) => {\n            cScale.onUpdate(this.uuid, null);\n        });\n        \n        // Unsubscribe to data mutations here\n        this._dataContainers.forEach((dataContainer) => {\n            dataContainer.onUpdate(this.uuid, null);\n        });\n\n        // Unsubscribe to highlights here\n        this._xScale.onHighlight(this.uuid, null);\n        this._xScale.onHighlightDestroy(this.uuid, null);\n    },\n    watch: {\n        barMarginX() {\n            this.drawPlot();\n        },\n        barMarginY() {\n            this.drawPlot();\n        },\n        dataArray() {\n            this._dataContainers.forEach((dataContainer) => {\n                dataContainer.onUpdate(this.uuid, null);\n            });\n\n            this._dataContainers = this.dataArray.map((dataKey) => {\n                const dataContainer = this.getData(dataKey);\n                console.assert(dataContainer instanceof DataContainer);\n                return dataContainer;\n            });\n\n            this._dataContainers.forEach((dataContainer) => {\n                dataContainer.onUpdate(this.uuid, this.drawPlot);\n            });\n\n            this.drawPlot();\n        },\n        cArray() {\n            this._cScales.forEach((cScale) => {\n                cScale.onUpdate(this.uuid, null);\n            });\n\n            this._cScales = this.cArray.map((cKey) => {\n                const cScale = this.getScale(cKey);\n                console.assert(cScale instanceof AbstractScale);\n                return cScale;\n            });\n\n            this._cScales.forEach((cScale) => {\n                cScale.onUpdate(this.uuid, this.drawPlot);\n            });\n        }\n    },\n    methods: {\n        tooltip(mouseX, mouseY, x, i, c) {\n            // Set values\n            this.tooltipInfo.x = this._xScale.toHuman(x);\n            this.tooltipInfo.c = this._cScales[i].toHuman(c);\n            this.tooltipInfo.cName = this._cScales[i].name;\n\n            // Set position\n            this.tooltipPosition.left = mouseX;\n            this.tooltipPosition.top = mouseY;\n            \n            // Dispatch highlights\n            this._xScale.emitHighlight(x);\n            this._cScales[i].emitHighlight(c);\n        },\n        tooltipDestroy() {\n            this.tooltipHide();\n\n            // Destroy all highlights here\n            this._xScale.emitHighlightDestroy();\n            this._cScales.forEach((cScale) => {\n                cScale.emitHighlightDestroy();\n            });\n        },\n        highlightX(value) {\n            if(this.highlightXScale) {\n                this.highlightX1 = this.highlightXScale(value);\n                this.highlightX2 = this.highlightXScale(value) + this.barWidth;\n            }\n        },\n        highlightY(value) {\n            if(this.highlightYScale) {\n                this.highlightY1 = this.highlightYScale(value);\n                this.highlightY2 = this.highlightYScale(value) + this.barHeight;\n            }\n        },\n        highlightDestroy() {\n            this.highlightX1 = null;\n            this.highlightX2 = null;\n            this.highlightY1 = null;\n            this.highlightY2 = null;\n        },\n        drawPlot(d3Node) {\n            const vm = this;\n\n            if(vm._dataContainers.length !== vm._cScales.length || vm._dataContainers.reduce((a, h) => (a || h.isLoading), false) || vm._cScales.reduce((a, h) => (a || h.isLoading), false) || vm._xScale.isLoading) {\n                return;\n            }\n            \n            const xScale = vm._xScale;\n            const cScales = vm._cScales;\n            const datas = vm._dataContainers\n                .map(dc => dc.dataCopy)\n                .map(d => d.filter((el) => xScale.domainFiltered.includes(el[vm.x])));\n\n            const x = d3_scaleBand()\n                .domain(xScale.domainFiltered)\n                .range([0, vm.pWidth]);\n\n            vm.highlightXScale = x;\n            \n            const numRows = vm._dataContainers.length;\n            const y = d3_scaleBand()\n                .domain(range(numRows))\n                .range([0, vm.pHeight]);\n\n            vm.highlightYScale = y;\n\n            const barWidth = vm.pWidth / xScale.domainFiltered.length;\n            vm.barWidth = barWidth;\n\n            const barHeight = vm.pHeight / numRows;\n            vm.barHeight = barHeight;\n            \n            \n            /*\n             * Scale up the canvas\n             */\n            let canvas;\n            if(d3Node) {\n                canvas = d3Node;\n            } else {\n                canvas = d3_select(this.plotSelector);\n            }\n\n            const canvasNode = canvas.node();\n\n            if(!canvasNode) {\n                return;\n            }\n\n            const two = new Two({ \n                width: vm.pWidth, \n                height: vm.pHeight, \n                domElement: canvasNode\n            });\n\n            let canvasHidden, contextHidden;\n            try {\n                canvasHidden = d3_select(this.hiddenPlotSelector);\n                contextHidden = canvasHidden.node().getContext('2d');\n            } catch(e) {\n                canvasHidden = d3_create(\"canvas\");\n                contextHidden = canvasHidden.node().getContext('2d');\n            }\n\n            const ratio = getRetinaRatio(contextHidden);\n            const scaledWidth = vm.pWidth * ratio;\n            const scaledHeight = vm.pHeight * ratio;\n\n            canvasHidden\n                .attr(\"width\", scaledWidth)\n                .attr(\"height\", scaledHeight);\n            contextHidden.scale(ratio, ratio);\n\n            /*\n             * Set up the color mappings\n             */\n            const colToNode = {};\n\n            /*\n             * Generates the next color in the sequence, \n             * going from 0,0,0 to 255,255,255.\n             */\n            let nextCol = 1;\n            const genColor = () => {\n                let ret = [];\n                // via http://stackoverflow.com/a/15804183\n                if(nextCol < 16777215){\n                    ret.push(nextCol & 0xff); // R\n                    ret.push((nextCol & 0xff00) >> 8); // G \n                    ret.push((nextCol & 0xff0000) >> 16); // B\n\n                    nextCol += 20;\n                }\n                let col = \"rgb(\" + ret.join(',') + \")\";\n                return col;\n            }\n\n            /*\n             * Draw the track\n             */\n            let barMarginX = vm.barMarginX;\n            if(barWidth - vm.barMarginX <= BAR_WIDTH_MIN) {\n                barMarginX = 0;\n            }\n            let barMarginY = vm.barMarginY;\n            if(barHeight - vm.barMarginY <= BAR_HEIGHT_MIN) {\n                barMarginY = 0;\n            }\n            \n            vm.dataArray.forEach((dataKey, i) => {\n                datas[i].forEach((d) => {\n                    if(\n                        AbstractScale.isUnknown(d[vm.cArray[i]]) ||\n                        (\n                            (cScales[i] instanceof CategoricalScale && cScales[i].domainFiltered.includes(d[vm.cArray[i]]))\n                            || \n                            (cScales[i] instanceof ContinuousScale && cScales[i].domainFiltered[0] <= d[vm.cArray[i]] && cScales[i].domainFiltered[1] >= d[vm.cArray[i]])\n                        )\n                    ) {\n                        const col = genColor();\n                        colToNode[col] = { \"x\": d[vm.x], \"i\": i, \"c\": d[vm.cArray[i]] };\n                        contextHidden.fillStyle = col;\n\n                        const rect = two.makeRectangle(\n                            x(d[vm.x]) + (barMarginX/2) + (barWidth - barMarginX)/2 + 0.5, \n                            y(i) + (barMarginY/2) + (barHeight - barMarginY)/2, \n                            barWidth - barMarginX, \n                            barHeight - barMarginY\n                        );\n                        rect.fill = cScales[i].color(d[vm.cArray[i]]);\n                        rect.noStroke();\n\n                        contextHidden.fillRect(x(d[vm.x]) + 0.5, y(i), barWidth, barHeight);\n                    }\n                });\n            });\n\n            two.update();\n\n            if(d3Node) {\n                /* Ignore interactivity if SVG was passed in (for download). */\n                return;\n            }\n            \n            /*\n             * Listen for mouse events\n             */\n            const getDataFromMouse = (mouseX, mouseY) => {\n                // Get the corresponding pixel color on the hidden canvas\n                const col = contextHidden.getImageData(mouseX * ratio, mouseY * ratio, scaledWidth, scaledHeight).data;\n                const colString = \"rgb(\" + col[0] + \",\" + col[1] + \",\"+ col[2] + \")\";\n                // Look up the node in our map\n                return colToNode[colString];\n            };\n\n            const debouncedTooltipDestroy = debounce(vm.tooltipDestroy, TOOLTIP_DEBOUNCE);\n            canvas.on(\"mousemove\", () => {\n                const mouse = d3_mouse(canvasNode);\n                const mouseX = mouse[0];\n                const mouseY = mouse[1];\n\n                const node = getDataFromMouse(mouseX, mouseY);\n\n                const mouseViewportX = d3_event.clientX;\n                const mouseViewportY = d3_event.clientY;\n\n                if(node) {\n                    vm.tooltip(mouseViewportX, mouseViewportY, node[\"x\"], node[\"i\"], node[\"c\"]); \n                } else {\n                    debouncedTooltipDestroy();\n                }\n            })\n            .on(\"mouseleave\", vm.tooltipDestroy);\n\n            if(vm.clickHandler !== undefined) {\n                canvas.on(\"click\", () => {\n                    const mouse = d3_mouse(canvasNode);\n                    const mouseX = mouse[0];\n                    const mouseY = mouse[1];\n\n                    const node = getDataFromMouse(mouseX, mouseY);\n\n                    if(node) {\n                        vm.clickHandler(node[\"x\"], node[\"i\"], node[\"c\"]);\n                    }\n                });\n            }\n            \n        }\n    }\n}\n</script>\n\n<style>\n@import '../../style/plot-style.css';\n</style>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MultiDataTrackPlot.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MultiDataTrackPlot.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./MultiDataTrackPlot.vue?vue&type=template&id=a537c370&\"\nimport script from \"./MultiDataTrackPlot.vue?vue&type=script&lang=js&\"\nexport * from \"./MultiDataTrackPlot.vue?vue&type=script&lang=js&\"\nimport style0 from \"./MultiDataTrackPlot.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('canvas',{staticClass:\"vdp-plot\",style:({\n            'height': (this.pHeight) + 'px', \n            'width': (this.pWidth) + 'px',\n            'top': (this.pMarginTop) + 'px',\n            'left': (this.pMarginLeft) + 'px'\n        }),attrs:{\"id\":this.plotElemID}}),_c('canvas',{staticClass:\"vdp-plot-hidden\",style:({\n            'height': (this.pHeight) + 'px', \n            'width': (this.pWidth) + 'px',\n            'top': (this.pMarginTop) + 'px',\n            'left': (this.pMarginLeft) + 'px'\n        }),attrs:{\"id\":this.hiddenPlotElemID}}),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(this.highlightX1 !== null),expression:\"this.highlightX1 !== null\"}],staticClass:\"vdp-plot-highlight\",style:({\n            'height': (this.pHeight) + 'px', \n            'width': '1px',\n            'top': (this.pMarginTop) + 'px',\n            'left': (this.pMarginLeft + this.highlightX1 - 0.5) + 'px'\n        })}),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(this.highlightX2 !== null),expression:\"this.highlightX2 !== null\"}],staticClass:\"vdp-plot-highlight\",style:({\n            'height': (this.pHeight) + 'px', \n            'width': '1px',\n            'top': (this.pMarginTop) + 'px',\n            'left': (this.pMarginLeft + this.highlightX2 - 0.5) + 'px'\n        })}),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(this.highlightY1 !== null),expression:\"this.highlightY1 !== null\"}],staticClass:\"vdp-plot-highlight\",style:({\n            'height': '1px', \n            'width': (this.pWidth) + 'px',\n            'top': (this.pMarginTop + this.highlightY1 - 0.5) + 'px',\n            'left': (this.pMarginLeft) + 'px'\n        })}),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(this.highlightY2 !== null),expression:\"this.highlightY2 !== null\"}],staticClass:\"vdp-plot-highlight\",style:({\n            'height': '1px', \n            'width': (this.pWidth) + 'px',\n            'top': (this.pMarginTop + this.highlightY2 - 0.5) + 'px',\n            'left': (this.pMarginLeft) + 'px'\n        })}),_c('div',{staticClass:\"vdp-tooltip\",style:(this.tooltipPositionAttribute),attrs:{\"id\":this.tooltipElemID}},[_c('table',[_c('tr',[_c('th',[_vm._v(_vm._s(this._xScale.name))]),_c('td',[_vm._v(_vm._s(this.tooltipInfo.x))])]),_c('tr',[_c('th',[_vm._v(_vm._s(this._yScale.name))]),_c('td',[_vm._v(_vm._s(this.tooltipInfo.y))])]),_c('tr',[_c('th',[_vm._v(_vm._s(this._cScale.name))]),_c('td',[_vm._v(_vm._s(this.tooltipInfo.c))])])])])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <div>\n        <canvas \n            :id=\"this.plotElemID\" \n            class=\"vdp-plot\" \n            :style=\"{\n                'height': (this.pHeight) + 'px', \n                'width': (this.pWidth) + 'px',\n                'top': (this.pMarginTop) + 'px',\n                'left': (this.pMarginLeft) + 'px'\n            }\"\n        ></canvas>\n        <canvas \n            :id=\"this.hiddenPlotElemID\" \n            class=\"vdp-plot-hidden\" \n            :style=\"{\n                'height': (this.pHeight) + 'px', \n                'width': (this.pWidth) + 'px',\n                'top': (this.pMarginTop) + 'px',\n                'left': (this.pMarginLeft) + 'px'\n            }\"\n        ></canvas>\n        <div v-show=\"this.highlightX1 !== null\"  \n            :style=\"{\n                'height': (this.pHeight) + 'px', \n                'width': '1px',\n                'top': (this.pMarginTop) + 'px',\n                'left': (this.pMarginLeft + this.highlightX1 - 0.5) + 'px'\n            }\"\n            class=\"vdp-plot-highlight\"\n        ></div>\n        <div v-show=\"this.highlightX2 !== null\"  \n            :style=\"{\n                'height': (this.pHeight) + 'px', \n                'width': '1px',\n                'top': (this.pMarginTop) + 'px',\n                'left': (this.pMarginLeft + this.highlightX2 - 0.5) + 'px'\n            }\"\n            class=\"vdp-plot-highlight\"\n        ></div>\n        <div v-show=\"this.highlightY1 !== null\"\n            :style=\"{\n                'height': '1px', \n                'width': (this.pWidth) + 'px',\n                'top': (this.pMarginTop + this.highlightY1 - 0.5) + 'px',\n                'left': (this.pMarginLeft) + 'px'\n            }\"\n            class=\"vdp-plot-highlight\"\n        ></div>\n        <div v-show=\"this.highlightY2 !== null\"\n            :style=\"{\n                'height': '1px', \n                'width': (this.pWidth) + 'px',\n                'top': (this.pMarginTop + this.highlightY2 - 0.5) + 'px',\n                'left': (this.pMarginLeft) + 'px'\n            }\"\n            class=\"vdp-plot-highlight\"\n        ></div>\n        <div :id=\"this.tooltipElemID\" class=\"vdp-tooltip\" :style=\"this.tooltipPositionAttribute\">\n            <table>\n                <tr>\n                    <th>{{ this._xScale.name }}</th>\n                    <td>{{ this.tooltipInfo.x }}</td>\n                </tr>\n                <tr>\n                    <th>{{ this._yScale.name }}</th>\n                    <td>{{ this.tooltipInfo.y }}</td>\n                </tr>\n                <tr>\n                    <th>{{ this._cScale.name }}</th>\n                    <td>{{ this.tooltipInfo.c }}</td>\n                </tr>\n            </table>\n        </div>\n    </div>\n</template>\n\n<script>\nimport Two from '../../two.js';\nimport { hierarchy as d3_hierarchy } from 'd3-hierarchy';\nimport { scaleBand as d3_scaleBand } from 'd3-scale';\nimport { select as d3_select, create as d3_create } from 'd3-selection';\nimport { mouse as d3_mouse, event as d3_event } from 'd3';\nimport debounce from 'lodash/debounce';\nimport { TOOLTIP_DEBOUNCE, BAR_WIDTH_MIN, BAR_HEIGHT_MIN, BAR_MARGIN_DEFAULT } from './../../constants.js';\nimport { getRetinaRatio, filterHierarchy } from './../../helpers.js';\n\n\nimport AbstractScale from './../../scales/AbstractScale.js';\nimport DataContainer from './../../data/DataContainer.js';\n\nimport mixin from './mixin.js';\n\nlet uuid = 0;\n/**\n * @prop {string} h The hierarchy data container key (passed to getData).\n * @prop {string} x The x-scale variable key.\n * @prop {string} y The y-scale variable key.\n * @prop {string} c The color-scale variable key.\n * @prop {number} barMarginX The value for the horizontal margin between bars. Default: 2\n * @prop {number} barMarginY The value for the vertical margin between bars. Default: 2\n * @extends mixin\n * \n * @example\n * <HierarchicalMultiTrackPlot\n *      data=\"exposures_data\"\n *      h=\"clustering\"\n *      x=\"sample_id\" \n *      y=\"signature\"\n *      c=\"exposure\"\n *      :pWidth=\"500\"\n *      :pHeight=\"300\"\n *      :pMarginTop=\"10\"\n *      :pMarginLeft=\"120\"\n *      :pMarginRight=\"10\"\n *      :pMarginBottom=\"150\"\n *      :getData=\"getData\"\n *      :getScale=\"getScale\"\n *      :clickHandler=\"myClickHandler\"\n * />\n */\nexport default {\n    name: 'HierarchicalMultiTrackPlot',\n    mixins: [mixin],\n    props: {\n        'h': {\n            type: String // hierarchy\n        },\n        'x': {\n            type: String\n        },\n        'y': {\n            type: String\n        },\n        'c': {\n            type: String // color\n        },\n        'barMarginX': {\n            type: Number, \n            default: BAR_MARGIN_DEFAULT\n        },\n        'barMarginY': {\n            type: Number, \n            default: BAR_MARGIN_DEFAULT\n        }\n    },\n    data() {\n        return {\n            tooltipInfo: {\n                x: '',\n                y: '',\n                c: ''\n            },\n            highlightXScale: null,\n            highlightYScale: null,\n            highlightX1: null,\n            highlightX2: null,\n            highlightY1: null,\n            highlightY2: null,\n            barWidth: 0,\n            barHeight: 0\n        }\n    },\n    beforeCreate() {\n        this.uuid = this.$options.name + uuid.toString();\n        uuid += 1;\n    },\n    created() {\n        // Set data\n        this._dataContainer = this.getData(this.data);\n        console.assert(this._dataContainer instanceof DataContainer);\n        this._hierarchyContainer = this.getData(this.h);\n        console.assert(this._hierarchyContainer instanceof DataContainer);\n        \n        // Set scale variables\n        this._xScale = this.getScale(this.x);\n        this._yScale = this.getScale(this.y);\n        this._cScale = this.getScale(this.c);\n        console.assert(this._xScale instanceof AbstractScale);\n        console.assert(this._yScale instanceof AbstractScale);\n        console.assert(this._cScale instanceof AbstractScale);\n\n        // Subscribe to event publishers here\n        this._xScale.onUpdate(this.uuid, this.drawPlot);\n        this._yScale.onUpdate(this.uuid, this.drawPlot);\n        this._cScale.onUpdate(this.uuid, this.drawPlot);\n\n        // Subscribe to data mutations here\n        this._dataContainer.onUpdate(this.uuid, this.drawPlot);\n        this._hierarchyContainer.onUpdate(this.uuid, this.drawPlot);\n\n        // Subscribe to highlights here\n        this._xScale.onHighlight(this.uuid, this.highlightX);\n        this._xScale.onHighlightDestroy(this.uuid, this.highlightDestroy);\n\n        this._yScale.onHighlight(this.uuid, this.highlightY);\n        this._yScale.onHighlightDestroy(this.uuid, this.highlightDestroy);\n    },\n    mounted() {\n        this.drawPlot();\n    },\n    beforeDestroy() {\n        // Unsubscribe to events\n        this._yScale.onUpdate(this.uuid, null);\n        this._xScale.onUpdate(this.uuid, null);\n        this._cScale.onUpdate(this.uuid, null);\n\n        // Unsubscribe to data mutations here\n        this._dataContainer.onUpdate(this.uuid, null);\n        this._hierarchyContainer.onUpdate(this.uuid, null);\n\n        // Unsubscribe to highlights here\n        this._yScale.onHighlight(this.uuid, null);\n        this._yScale.onHighlightDestroy(this.uuid, null);\n\n        this._xScale.onHighlight(this.uuid, null);\n        this._xScale.onHighlightDestroy(this.uuid, null);\n    },\n    watch: {\n        barMarginX() {\n            this.drawPlot();\n        },\n        barMarginY() {\n            this.drawPlot();\n        }\n    },\n    methods: {\n        tooltip: function(mouseX, mouseY, x, y, c) {\n            // Set values\n            this.tooltipInfo.x = this._xScale.toHuman(x);\n            this.tooltipInfo.y = this._yScale.toHuman(y);\n            this.tooltipInfo.c = this._cScale.toHuman(c);\n\n            // Set position\n            this.tooltipPosition.left = mouseX;\n            this.tooltipPosition.top = mouseY;\n            \n            // Dispatch highlights\n            this._xScale.emitHighlight(x);\n            this._yScale.emitHighlight(y);\n            this._cScale.emitHighlight(c);\n        },\n        tooltipDestroy: function() {\n            this.tooltipHide();\n\n            // Destroy all highlights here\n            this._xScale.emitHighlightDestroy();\n            this._yScale.emitHighlightDestroy();\n            this._cScale.emitHighlightDestroy();\n        },\n        highlightX(value) {\n            if(this.highlightXScale) {\n                this.highlightX1 = this.highlightXScale(value);\n                this.highlightX2 = this.highlightXScale(value) + this.barWidth;\n            }\n        },\n        highlightY(value) {\n            if(this.highlightYScale) {\n                this.highlightY1 = this.highlightYScale(value);\n                this.highlightY2 = this.highlightYScale(value) + this.barHeight;\n            }\n        },\n        highlightDestroy() {\n            this.highlightX1 = null;\n            this.highlightX2 = null;\n            this.highlightY1 = null;\n            this.highlightY2 = null;\n        },\n        drawPlot(d3Node) {\n            const vm = this;\n\n            if(vm._dataContainer.isLoading || vm._hierarchyContainer.isLoading || vm._xScale.isLoading || vm._yScale.isLoading || vm._cScale.isLoading) {\n                return;\n            }\n            \n            let data = this._dataContainer.dataCopy;\n            let hierarchyData = vm._hierarchyContainer.dataCopy;\n            \n            const xScale = this._xScale;\n            const yScale = this._yScale;\n            const cScale = this._cScale;\n\n            data = data.filter((el) => xScale.domainFiltered.includes(el[vm.x]));\n\n            // Filter the hierarchy\n            hierarchyData = filterHierarchy(hierarchyData, xScale.domainFiltered);\n            const root = d3_hierarchy(hierarchyData);\n            const leaves = root.leaves();\n            // Use leaves to sort x-axis by hierarchy\n            const xDomainSortedByLeaf = leaves.map((el) => el.data.name);\n\n            const x = d3_scaleBand()\n                .domain(xDomainSortedByLeaf)\n                .range([0, vm.pWidth]);\n            \n            vm.highlightXScale = x;\n            \n            const y = d3_scaleBand()\n                .domain(yScale.domainFiltered.slice().reverse())\n                .range([vm.pHeight, 0]);\n\n            vm.highlightYScale = y;\n\n            \n\n            const barWidth = vm.pWidth / xScale.domainFiltered.length;\n            vm.barWidth = barWidth;\n\n            const barHeight = vm.pHeight / yScale.domainFiltered.length;\n            vm.barHeight = barHeight;\n              \n            \n            /*\n             * Scale up the canvas\n             */\n            let canvas;\n            if(d3Node) {\n                canvas = d3Node;\n            } else {\n                canvas = d3_select(this.plotSelector);\n            }\n\n            const canvasNode = canvas.node();\n\n            if(!canvasNode) {\n                return;\n            }\n\n            const two = new Two({ \n                width: vm.pWidth, \n                height: vm.pHeight, \n                domElement: canvasNode\n            });\n\n            let canvasHidden, contextHidden;\n            try {\n                canvasHidden = d3_select(this.hiddenPlotSelector);\n                contextHidden = canvasHidden.node().getContext('2d');\n            } catch(e) {\n                canvasHidden = d3_create(\"canvas\");\n                contextHidden = canvasHidden.node().getContext('2d');\n            }\n\n            const ratio = getRetinaRatio(contextHidden);\n            const scaledWidth = vm.pWidth * ratio;\n            const scaledHeight = vm.pHeight * ratio;\n\n            canvasHidden\n                .attr(\"width\", scaledWidth)\n                .attr(\"height\", scaledHeight);\n            contextHidden.scale(ratio, ratio);\n\n            /*\n             * Set up the color mappings\n             */\n            const colToNode = {};\n\n            /*\n             * Generates the next color in the sequence, \n             * going from 0,0,0 to 255,255,255.\n             */\n            let nextCol = 1;\n            const genColor = () => {\n                let ret = [];\n                // via http://stackoverflow.com/a/15804183\n                if(nextCol < 16777215){\n                    ret.push(nextCol & 0xff); // R\n                    ret.push((nextCol & 0xff00) >> 8); // G \n                    ret.push((nextCol & 0xff0000) >> 16); // B\n\n                    nextCol += 20;\n                }\n                let col = \"rgb(\" + ret.join(',') + \")\";\n                return col;\n            }\n\n            /*\n             * Draw the track\n             */\n            let barMarginX = vm.barMarginX;\n            if(barWidth - vm.barMarginX <= BAR_WIDTH_MIN) {\n                barMarginX = 0;\n            }\n            let barMarginY = vm.barMarginY;\n            if(barHeight - vm.barMarginY <= BAR_HEIGHT_MIN) {\n                barMarginY = 0;\n            }\n            data.forEach((d) => {\n                yScale.domainFiltered.forEach((yVar) => {\n                    const col = genColor();\n                    colToNode[col] = { \"x\": d[vm.x], \"y\": yVar, \"c\": d[yVar] };\n                    contextHidden.fillStyle = col;\n\n                    const rect = two.makeRectangle(x(d[vm.x]) + (barMarginX/2) + (barWidth - barMarginX)/2, y(yVar) + (barMarginY/2) + (barHeight - barMarginY)/2, barWidth - barMarginX, barHeight - barMarginY);\n                    rect.fill = cScale.color(d[yVar]);\n                    rect.noStroke();\n                    contextHidden.fillRect(x(d[vm.x]), y(yVar), barWidth, barHeight);\n                });\n            });\n\n            two.update();\n\n            if(d3Node) {\n                /* Ignore interactivity if SVG was passed in (for download). */\n                return;\n            }\n            \n            /*\n             * Listen for mouse events\n             */\n            const getDataFromMouse = (mouseX, mouseY) => {\n                // Get the corresponding pixel color on the hidden canvas\n                const col = contextHidden.getImageData(mouseX * ratio, mouseY * ratio, scaledWidth, scaledHeight).data;\n                const colString = \"rgb(\" + col[0] + \",\" + col[1] + \",\"+ col[2] + \")\";\n                // Look up the node in our map\n                return colToNode[colString];\n            };\n\n            const debouncedTooltipDestroy = debounce(vm.tooltipDestroy, TOOLTIP_DEBOUNCE);\n            canvas.on(\"mousemove\", () => {\n                const mouse = d3_mouse(canvasNode);\n                const mouseX = mouse[0];\n                const mouseY = mouse[1];\n\n                const node = getDataFromMouse(mouseX, mouseY);\n\n                const mouseViewportX = d3_event.clientX;\n                const mouseViewportY = d3_event.clientY;\n\n                if(node) {\n                    vm.tooltip(mouseViewportX, mouseViewportY, node[\"x\"], node[\"y\"], node[\"c\"]); \n                } else {\n                    debouncedTooltipDestroy();\n                }\n            })\n            .on(\"mouseleave\", vm.tooltipDestroy);\n\n            if(vm.clickHandler !== undefined) {\n                canvas.on(\"click\", () => {\n                    const mouse = d3_mouse(canvasNode);\n                    const mouseX = mouse[0];\n                    const mouseY = mouse[1];\n\n                    const node = getDataFromMouse(mouseX, mouseY);\n\n                    if(node) {\n                        vm.clickHandler(node[\"x\"], node[\"y\"], node[\"c\"]);\n                    }\n                });\n            }\n            \n        }\n    }\n}\n</script>\n\n<style>\n@import '../../style/plot-style.css';\n</style>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./HierarchicalMultiTrackPlot.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./HierarchicalMultiTrackPlot.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./HierarchicalMultiTrackPlot.vue?vue&type=template&id=2b616e30&\"\nimport script from \"./HierarchicalMultiTrackPlot.vue?vue&type=script&lang=js&\"\nexport * from \"./HierarchicalMultiTrackPlot.vue?vue&type=script&lang=js&\"\nimport style0 from \"./HierarchicalMultiTrackPlot.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('canvas',{staticClass:\"vdp-plot\",style:({\n            'height': (this.pHeight) + 'px', \n            'width': (this.pWidth) + 'px',\n            'top': (this.pMarginTop) + 'px',\n            'left': (this.pMarginLeft) + 'px'\n        }),attrs:{\"id\":this.plotElemID}}),_c('canvas',{staticClass:\"vdp-plot-hidden\",style:({\n            'height': (this.pHeight) + 'px', \n            'width': (this.pWidth) + 'px',\n            'top': (this.pMarginTop) + 'px',\n            'left': (this.pMarginLeft) + 'px'\n        }),attrs:{\"id\":this.hiddenPlotElemID}}),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(this.highlightX1 !== null),expression:\"this.highlightX1 !== null\"}],staticClass:\"vdp-plot-highlight\",style:({\n            'height': (this.pHeight) + 'px', \n            'width': '1px',\n            'top': (this.pMarginTop) + 'px',\n            'left': (this.pMarginLeft + this.highlightX1 - 0.5) + 'px'\n        })}),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(this.highlightX2 !== null),expression:\"this.highlightX2 !== null\"}],staticClass:\"vdp-plot-highlight\",style:({\n            'display': (_vm.showHighlight ? 'inline-block' : 'none'),\n            'height': (this.pHeight) + 'px', \n            'width': '1px',\n            'top': (this.pMarginTop) + 'px',\n            'left': (this.pMarginLeft + this.highlightX2 - 0.5) + 'px'\n        })}),_c('div',{staticClass:\"vdp-tooltip\",style:(this.tooltipPositionAttribute),attrs:{\"id\":this.tooltipElemID}},[_c('table',[_c('tr',[_c('th',[_vm._v(_vm._s(this._xScale.name))]),_c('td',[_vm._v(_vm._s(this.tooltipInfo.x))])]),_c('tr',[_c('th',[_vm._v(\"Count\")]),_c('td',[_vm._v(_vm._s(this.tooltipInfo.count))])]),_c('tr',[_c('th',[_vm._v(\"Min\")]),_c('td',[_vm._v(_vm._s(this.tooltipInfo.min))])]),_c('tr',[_c('th',[_vm._v(\"Q1\")]),_c('td',[_vm._v(_vm._s(this.tooltipInfo.q1))])]),_c('tr',[_c('th',[_vm._v(\"Median\")]),_c('td',[_vm._v(_vm._s(this.tooltipInfo.median))])]),_c('tr',[_c('th',[_vm._v(\"Mean\")]),_c('td',[_vm._v(_vm._s(this.tooltipInfo.mean))])]),_c('tr',[_c('th',[_vm._v(\"Q3\")]),_c('td',[_vm._v(_vm._s(this.tooltipInfo.q3))])]),_c('tr',[_c('th',[_vm._v(\"Max\")]),_c('td',[_vm._v(_vm._s(this.tooltipInfo.max))])])])])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <div>\n        <canvas \n            :id=\"this.plotElemID\" \n            class=\"vdp-plot\" \n            :style=\"{\n                'height': (this.pHeight) + 'px', \n                'width': (this.pWidth) + 'px',\n                'top': (this.pMarginTop) + 'px',\n                'left': (this.pMarginLeft) + 'px'\n            }\"\n        ></canvas>\n        <canvas \n            :id=\"this.hiddenPlotElemID\"\n            class=\"vdp-plot-hidden\" \n            :style=\"{\n                'height': (this.pHeight) + 'px', \n                'width': (this.pWidth) + 'px',\n                'top': (this.pMarginTop) + 'px',\n                'left': (this.pMarginLeft) + 'px'\n            }\"\n        ></canvas>\n        <div v-show=\"this.highlightX1 !== null\"\n            :style=\"{\n                'height': (this.pHeight) + 'px', \n                'width': '1px',\n                'top': (this.pMarginTop) + 'px',\n                'left': (this.pMarginLeft + this.highlightX1 - 0.5) + 'px'\n            }\"\n            class=\"vdp-plot-highlight\"\n        ></div>\n        <div v-show=\"this.highlightX2 !== null\"\n            :style=\"{\n                'display': (showHighlight ? 'inline-block' : 'none'),\n                'height': (this.pHeight) + 'px', \n                'width': '1px',\n                'top': (this.pMarginTop) + 'px',\n                'left': (this.pMarginLeft + this.highlightX2 - 0.5) + 'px'\n            }\"\n            class=\"vdp-plot-highlight\"\n        ></div>\n        <div :id=\"this.tooltipElemID\" class=\"vdp-tooltip\" :style=\"this.tooltipPositionAttribute\">\n            <table>\n                <tr>\n                    <th>{{ this._xScale.name }}</th>\n                    <td>{{ this.tooltipInfo.x }}</td>\n                </tr>\n                <tr>\n                    <th>Count</th>\n                    <td>{{ this.tooltipInfo.count }}</td>\n                </tr>\n                <tr>\n                    <th>Min</th>\n                    <td>{{ this.tooltipInfo.min }}</td>\n                </tr>\n                <tr>\n                    <th>Q1</th>\n                    <td>{{ this.tooltipInfo.q1 }}</td>\n                </tr>\n                <tr>\n                    <th>Median</th>\n                    <td>{{ this.tooltipInfo.median }}</td>\n                </tr>\n                <tr>\n                    <th>Mean</th>\n                    <td>{{ this.tooltipInfo.mean }}</td>\n                </tr>\n                <tr>\n                    <th>Q3</th>\n                    <td>{{ this.tooltipInfo.q3 }}</td>\n                </tr>\n                <tr>\n                    <th>Max</th>\n                    <td>{{ this.tooltipInfo.max }}</td>\n                </tr>\n            </table>\n        </div>\n    </div>\n</template>\n\n<script>\nimport Two from '../../two.js';\nimport { scaleLinear as d3_scaleLinear, scaleQuantile as d3_scaleQuantile, scaleBand as d3_scaleBand } from 'd3-scale';\nimport { select as d3_select, create as d3_create } from 'd3-selection';\nimport { mouse as d3_mouse, event as d3_event } from 'd3';\nimport debounce from 'lodash/debounce';\nimport { min as d3_min, max as d3_max, mean as d3_mean } from 'd3-array';\n\nimport { TOOLTIP_DEBOUNCE } from './../../constants.js';\nimport { getRetinaRatio } from './../../helpers.js';\n\n\nimport AbstractScale from './../../scales/AbstractScale.js';\nimport CategoricalScale from './../../scales/CategoricalScale.js';\nimport ContinuousScale from './../../scales/ContinuousScale.js';\n\n\nimport DataContainer from './../../data/DataContainer.js';\n\nimport mixin from './mixin.js';\n\nlet uuid = 0;\n/**\n * @prop {string} variable The key to access the values in the data array objects.\n * @prop {string} s The key for the data containing the variable to stratify by.\n * @prop {string} x The key for the scale to stratify by. Must be categorical.\n * @prop {string} y The y-scale variable key.\n * @prop {string} o The observation-scale variable key. Required in order to match with the stratification data.\n * @prop {number} pointSize The diameter of outlier (and mean) points. Default: 6\n * @prop {boolean} drawOutliers Whether or not to draw outlier points on the plot. Default: true\n * @extends mixin\n * \n * @example\n * <StratifiedBoxPlot\n *      data=\"boxplot_data\"\n *      variable=\"COSMIC 1\"\n *      s=\"stratification_data\"\n *      y=\"exposure\"\n *      o=\"sample_id\"\n *      x=\"smoking_binary\"\n *      :pWidth=\"500\"\n *      :pHeight=\"300\"\n *      :pMarginTop=\"10\"\n *      :pMarginLeft=\"120\"\n *      :pMarginRight=\"10\"\n *      :pMarginBottom=\"150\"\n *      :getData=\"getData\"\n *      :getScale=\"getScale\"\n *      :clickHandler=\"myClickHandler\"\n * />\n */\nexport default {\n    name: 'StratifiedBoxPlot',\n    mixins: [mixin],\n    props: {\n        'variable': {\n            type: String\n        },\n        's': { // stratification data\n            type: String\n        },\n        'x': { // stratification variable scale\n            type: String\n        },\n        'y': {\n            type: String\n        },\n        'o': { // observation\n            type: String\n        },\n        'pointSize': {\n            type: Number,\n            default: 6\n        },\n        'drawOutliers': {\n            type: Boolean,\n            default: true\n        }\n    },\n    data() {\n        return {\n            tooltipInfo: {\n                x: '',\n                count: '',\n                min: '',\n                q1: '',\n                median: '',\n                mean: '',\n                q3: '',\n                max: ''\n            },\n            highlightX1: null,\n            highlightX2: null,\n            highlightScale: null,\n            barWidth: 0\n        }\n    },\n    beforeCreate() {\n        this.uuid = this.$options.name + uuid.toString();\n        uuid += 1;\n    },\n    created() {\n        // Set data\n        this._dataContainer = this.getData(this.data);\n        console.assert(this._dataContainer instanceof DataContainer);\n\n        this._stratificationDataContainer = this.getData(this.s);\n        console.assert(this._stratificationDataContainer instanceof DataContainer);\n\n        // Set scale variables\n        this._yScale = this.getScale(this.y);\n        console.assert(this._yScale instanceof ContinuousScale);\n\n        this._xScale = this.getScale(this.x);\n        console.assert(this._xScale instanceof CategoricalScale);\n\n        this._oScale = this.getScale(this.o);\n        console.assert(this._oScale instanceof AbstractScale);\n\n\n        // Subscribe to event publishers here\n        this._yScale.onUpdate(this.uuid, this.drawPlot);\n        this._xScale.onUpdate(this.uuid, this.drawPlot);\n        this._oScale.onUpdate(this.uuid, this.drawPlot);\n        \n\n        // Subscribe to data mutations here\n        this._dataContainer.onUpdate(this.uuid, this.drawPlot);\n        this._stratificationDataContainer.onUpdate(this.uuid, this.drawPlot);\n\n        // Subscribe to highlights here\n        this._xScale.onHighlight(this.uuid, this.highlight);\n        this._xScale.onHighlightDestroy(this.uuid, this.highlightDestroy);\n\n    },\n    mounted() {\n        this.drawPlot();\n    },\n    beforeDestroy() {\n        // Unsubscribe to events\n        this._yScale.onUpdate(this.uuid, null);\n        this._xScale.onUpdate(this.uuid, null);\n        this._oScale.onUpdate(this.uuid, null);\n\n        // Unsubscribe to data mutations here\n        this._dataContainer.onUpdate(this.uuid, null);\n        this._stratificationDataContainer.onUpdate(this.uuid, null);\n\n        // Unsubscribe to highlights here\n        this._xScale.onHighlight(this.uuid, null);\n        this._xScale.onHighlightDestroy(this.uuid, null);\n    },\n    watch: {\n        pointSize() {\n            this.drawPlot();\n        },\n        drawOutliers() {\n            this.drawPlot();\n        }\n    },\n    methods: {\n        tooltip: function(mouseX, mouseY, node) {\n            // Set values\n            this.tooltipInfo.x = this._xScale.toHuman(node.x);\n            this.tooltipInfo.count = node.count;\n            this.tooltipInfo.min = node.min;\n            this.tooltipInfo.q1 = node.q1;\n            this.tooltipInfo.median = node.median;\n            this.tooltipInfo.mean = node.mean;\n            this.tooltipInfo.q3 = node.q3;\n            this.tooltipInfo.max = node.max;\n\n            // Set position\n            this.tooltipPosition.left = mouseX;\n            this.tooltipPosition.top = mouseY;\n\n            // Dispatch highlights\n            this._xScale.emitHighlight(node.x);\n        },\n        tooltipDestroy: function() {\n            this.tooltipHide();\n\n            // Destroy all highlights here\n            this._xScale.emitHighlightDestroy();\n        },\n        highlight(value) {\n            if(this.highlightScale) {\n                this.highlightX1 = this.highlightScale(value);\n                this.highlightX2 = this.highlightScale(value) + this.barWidth;\n            }\n        },\n        highlightDestroy() {\n            this.highlightX1 = null;\n            this.highlightX2 = null;\n        },\n        drawPlot(d3Node) {\n            const vm = this;\n\n            if(vm._dataContainer.isLoading || vm._stratificationDataContainer.isLoading || vm._xScale.isLoading || vm._yScale.isLoading || vm._oScale.isLoading) {\n                return;\n            }\n            \n            let data = this._dataContainer.dataCopy;\n            let stratificationData = this._stratificationDataContainer.dataCopy;\n\n            const xScale = vm._xScale;\n            const yScale = vm._yScale;\n\n            const oScale = vm._oScale;\n            data = data.filter((el) => oScale.domainFiltered.includes(el[vm.o]));\n            \n\n            const x = d3_scaleBand()\n                .domain(xScale.domainFiltered)\n                .range([0, vm.pWidth]);\n\n            vm.highlightScale = x;\n            \n            const y = d3_scaleLinear()\n                .domain(yScale.domainFiltered)\n                .range([vm.pHeight, 0]);\n\n            const barWidth = vm.pWidth / xScale.domainFiltered.length;\n            vm.barWidth = barWidth;\n              \n            \n            /*\n             * Scale up the canvas\n             */\n            let canvas;\n            if(d3Node) {\n                canvas = d3Node;\n            } else {\n                canvas = d3_select(this.plotSelector);\n            }\n\n            const canvasNode = canvas.node();\n\n            if(!canvasNode) {\n                return;\n            }\n\n            const two = new Two({ \n                width: vm.pWidth, \n                height: vm.pHeight, \n                domElement: canvasNode\n            });\n\n            let canvasHidden, contextHidden;\n            try {\n                canvasHidden = d3_select(this.hiddenPlotSelector);\n                contextHidden = canvasHidden.node().getContext('2d');\n            } catch(e) {\n                canvasHidden = d3_create(\"canvas\");\n                contextHidden = canvasHidden.node().getContext('2d');\n            }\n\n            const ratio = getRetinaRatio(contextHidden);\n            const scaledWidth = vm.pWidth * ratio;\n            const scaledHeight = vm.pHeight * ratio;\n\n            canvasHidden\n                .attr(\"width\", scaledWidth)\n                .attr(\"height\", scaledHeight);\n            contextHidden.scale(ratio, ratio);\n\n            /*\n             * Set up the color mappings\n             */\n            const colToNode = {};\n\n            /*\n             * Generates the next color in the sequence, \n             * going from 0,0,0 to 255,255,255.\n             */\n            let nextCol = 1;\n            const genColor = () => {\n                let ret = [];\n                // via http://stackoverflow.com/a/15804183\n                if(nextCol < 16777215){\n                    ret.push(nextCol & 0xff); // R\n                    ret.push((nextCol & 0xff00) >> 8); // G \n                    ret.push((nextCol & 0xff0000) >> 16); // B\n\n                    nextCol += 20;\n                }\n                let col = \"rgb(\" + ret.join(',') + \")\";\n                return col;\n            }\n\n            /*\n             * Draw the boxes\n             */\n\n            const boxWidth = (barWidth / 2);\n            const boxMargin = barWidth / 4;\n\n\n            const diamondSize = vm.pointSize + 2;\n\n            xScale.domainFiltered.forEach((boxVar) => {\n                let boxData = data.filter((dEl) => {\n                    let sEl = stratificationData.find((sEl) => sEl[vm.o] === dEl[vm.o]);\n                    return (sEl !== undefined && sEl[vm.x] === boxVar);\n                });\n                boxData = boxData.map((el) => el[vm.variable] || 0);\n                let quantile = d3_scaleQuantile()\n                    .domain(boxData)\n                    .range([0, 1, 2, 3]);\n                \n                let quartiles = quantile.quantiles();\n                \n                let q1 = quartiles[0];\n                let median = quartiles[1];\n                let mean = d3_mean(boxData);\n                let q3 = quartiles[2];\n                \n                let iqr = quartiles[2] - quartiles[0];\n                let lowerFence = q1 - iqr;\n                let upperFence = q3 + iqr;\n\n\n                let boxX1 = x(boxVar) + boxMargin;\n                let boxX2 = boxX1 + boxWidth;\n                let boxX = boxX1 + (boxWidth / 2);\n\n\n                const verticalLine = two.makeLine(boxX1 + (boxWidth / 2),y(upperFence), boxX1 + (boxWidth / 2),y(lowerFence));\n                verticalLine.stroke = \"black\";\n\n                const boxRect = two.makeRectangle(boxX1 + boxWidth/2, y(q3) + (y(q1) - y(q3))/2, boxWidth, y(q1) - y(q3));\n                boxRect.linewidth = 1;\n                boxRect.fill = xScale.color(boxVar);\n                boxRect.stroke = \"black\";\n\n                const upperFenceLine = two.makeLine(boxX1,y(upperFence), boxX2,y(upperFence));\n                upperFenceLine.stroke = \"black\";\n\n                const lowerFenceLine = two.makeLine(boxX1,y(lowerFence), boxX2,y(lowerFence));\n                lowerFenceLine.stroke = \"black\";\n\n                const medianLine = two.makeLine(boxX1,y(median), boxX2,y(median));\n                medianLine.stroke = \"black\";\n\n                const meanDiamond = two.makeRectangle(boxX,y(mean), diamondSize-2, diamondSize-2);\n                meanDiamond.stroke = \"black\";\n                meanDiamond.noFill();\n                meanDiamond.rotation = Math.PI/4;\n\n\n                // Draw the outliers\n                if(vm.drawOutliers) {\n                    let outliers = boxData.filter((el) => (el > upperFence) || (el < lowerFence));\n                    outliers.forEach((outlier) => {\n                        const circle = two.makeCircle(boxX, y(outlier), (vm.pointSize / 2));\n                        circle.linewidth = 1;\n                        circle.stroke = \"black\";\n                        circle.noFill();\n                    });\n                }\n\n                // Map data to colors\n                const col = genColor();\n                colToNode[col] = {\n                    x: boxVar,\n                    count: boxData.length,\n                    min: d3_min(boxData), \n                    q1: q1,\n                    median: median,\n                    mean: mean,\n                    q3: q3, \n                    max: d3_max(boxData)\n                };\n                contextHidden.fillStyle = col;\n                contextHidden.fillRect(x(boxVar), 0, barWidth, vm.pHeight);\n            });\n\n            two.update();\n\n            if(d3Node) {\n                /* Ignore interactivity if SVG was passed in (for download). */\n                return;\n            }\n            \n            /*\n             * Listen for mouse events\n             */\n            const getDataFromMouse = (mouseX, mouseY) => {\n                // Get the corresponding pixel color on the hidden canvas\n                const col = contextHidden.getImageData(mouseX * ratio, mouseY * ratio, scaledWidth, scaledHeight).data;\n                const colString = \"rgb(\" + col[0] + \",\" + col[1] + \",\"+ col[2] + \")\";\n                // Look up the node in our map\n                return colToNode[colString];\n            }\n\n            const debouncedTooltipDestroy = debounce(vm.tooltipDestroy, TOOLTIP_DEBOUNCE);\n            canvas.on(\"mousemove\", () => {\n                const mouse = d3_mouse(canvasNode);\n                const mouseX = mouse[0];\n                const mouseY = mouse[1];\n\n                const node = getDataFromMouse(mouseX, mouseY);\n\n                const mouseViewportX = d3_event.clientX;\n                const mouseViewportY = d3_event.clientY;\n\n                if(node) {\n                    vm.tooltip(mouseViewportX, mouseViewportY, node); \n                } else {\n                    debouncedTooltipDestroy();\n                }\n            })\n            .on(\"mouseleave\", vm.tooltipDestroy);\n            \n            if(vm.clickHandler !== undefined) {\n                canvas.on(\"click\", () => {\n                    const mouse = d3_mouse(canvasNode);\n                    const mouseX = mouse[0];\n                    const mouseY = mouse[1];\n\n                    const node = getDataFromMouse(mouseX, mouseY);\n\n                    if(node) {\n                        vm.clickHandler(node[\"x\"]); \n                    }\n                })\n            }\n            \n        }\n    }\n}\n</script>\n\n<style>\n@import '../../style/plot-style.css';\n</style>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./StratifiedBoxPlot.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./StratifiedBoxPlot.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./StratifiedBoxPlot.vue?vue&type=template&id=719be988&\"\nimport script from \"./StratifiedBoxPlot.vue?vue&type=script&lang=js&\"\nexport * from \"./StratifiedBoxPlot.vue?vue&type=script&lang=js&\"\nimport style0 from \"./StratifiedBoxPlot.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('canvas',{staticClass:\"vdp-plot\",style:({\n            'height': (this.pHeight) + 'px', \n            'width': (this.pWidth) + 'px',\n            'top': (this.pMarginTop) + 'px',\n            'left': (this.pMarginLeft) + 'px'\n        }),attrs:{\"id\":this.plotElemID}}),_c('canvas',{staticClass:\"vdp-plot-hidden\",style:({\n            'height': (this.pHeight) + 'px', \n            'width': (this.pWidth) + 'px',\n            'top': (this.pMarginTop) + 'px',\n            'left': (this.pMarginLeft) + 'px'\n        }),attrs:{\"id\":this.hiddenPlotElemID}}),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(this.highlightX1 !== null),expression:\"this.highlightX1 !== null\"}],staticClass:\"vdp-plot-highlight\",style:({\n            'height': (this.pHeight) + 'px', \n            'width': '1px',\n            'top': (this.pMarginTop) + 'px',\n            'left': (this.pMarginLeft + this.highlightX1 - 0.5) + 'px'\n        })}),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(this.highlightX2 !== null),expression:\"this.highlightX2 !== null\"}],staticClass:\"vdp-plot-highlight\",style:({\n            'display': (_vm.showHighlight ? 'inline-block' : 'none'),\n            'height': (this.pHeight) + 'px', \n            'width': '1px',\n            'top': (this.pMarginTop) + 'px',\n            'left': (this.pMarginLeft + this.highlightX2 - 0.5) + 'px'\n        })}),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(this.highlightX1Secondary !== null),expression:\"this.highlightX1Secondary !== null\"}],staticClass:\"vdp-plot-highlight\",style:({\n            'height': (this.pHeight) + 'px', \n            'width': '1px',\n            'top': (this.pMarginTop) + 'px',\n            'left': (this.pMarginLeft + this.highlightX1Secondary - 0.5) + 'px'\n        })}),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(this.highlightX2Secondary !== null),expression:\"this.highlightX2Secondary !== null\"}],staticClass:\"vdp-plot-highlight\",style:({\n            'display': (_vm.showHighlight ? 'inline-block' : 'none'),\n            'height': (this.pHeight) + 'px', \n            'width': '1px',\n            'top': (this.pMarginTop) + 'px',\n            'left': (this.pMarginLeft + this.highlightX2Secondary - 0.5) + 'px'\n        })}),_c('div',{staticClass:\"vdp-tooltip\",style:(this.tooltipPositionAttribute),attrs:{\"id\":this.tooltipElemID}},[_c('table',[_c('tr',[_c('th',[_vm._v(_vm._s(this._xScale.name))]),_c('td',[_vm._v(_vm._s(this.tooltipInfo.x))])]),_c('tr',[_c('th',[_vm._v(_vm._s(this._x2Scale.name))]),_c('td',[_vm._v(_vm._s(this.tooltipInfo.x2))])]),_c('tr',[_c('th',[_vm._v(\"Count\")]),_c('td',[_vm._v(_vm._s(this.tooltipInfo.count))])]),_c('tr',[_c('th',[_vm._v(\"Min\")]),_c('td',[_vm._v(_vm._s(this.tooltipInfo.min))])]),_c('tr',[_c('th',[_vm._v(\"Q1\")]),_c('td',[_vm._v(_vm._s(this.tooltipInfo.q1))])]),_c('tr',[_c('th',[_vm._v(\"Median\")]),_c('td',[_vm._v(_vm._s(this.tooltipInfo.median))])]),_c('tr',[_c('th',[_vm._v(\"Mean\")]),_c('td',[_vm._v(_vm._s(this.tooltipInfo.mean))])]),_c('tr',[_c('th',[_vm._v(\"Q3\")]),_c('td',[_vm._v(_vm._s(this.tooltipInfo.q3))])]),_c('tr',[_c('th',[_vm._v(\"Max\")]),_c('td',[_vm._v(_vm._s(this.tooltipInfo.max))])])])])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <div>\n        <canvas \n            :id=\"this.plotElemID\" \n            class=\"vdp-plot\" \n            :style=\"{\n                'height': (this.pHeight) + 'px', \n                'width': (this.pWidth) + 'px',\n                'top': (this.pMarginTop) + 'px',\n                'left': (this.pMarginLeft) + 'px'\n            }\"\n        ></canvas>\n        <canvas \n            :id=\"this.hiddenPlotElemID\"\n            class=\"vdp-plot-hidden\" \n            :style=\"{\n                'height': (this.pHeight) + 'px', \n                'width': (this.pWidth) + 'px',\n                'top': (this.pMarginTop) + 'px',\n                'left': (this.pMarginLeft) + 'px'\n            }\"\n        ></canvas>\n        <div v-show=\"this.highlightX1 !== null\"\n            :style=\"{\n                'height': (this.pHeight) + 'px', \n                'width': '1px',\n                'top': (this.pMarginTop) + 'px',\n                'left': (this.pMarginLeft + this.highlightX1 - 0.5) + 'px'\n            }\"\n            class=\"vdp-plot-highlight\"\n        ></div>\n        <div v-show=\"this.highlightX2 !== null\"\n            :style=\"{\n                'display': (showHighlight ? 'inline-block' : 'none'),\n                'height': (this.pHeight) + 'px', \n                'width': '1px',\n                'top': (this.pMarginTop) + 'px',\n                'left': (this.pMarginLeft + this.highlightX2 - 0.5) + 'px'\n            }\"\n            class=\"vdp-plot-highlight\"\n        ></div>\n        <div v-show=\"this.highlightX1Secondary !== null\"\n            :style=\"{\n                'height': (this.pHeight) + 'px', \n                'width': '1px',\n                'top': (this.pMarginTop) + 'px',\n                'left': (this.pMarginLeft + this.highlightX1Secondary - 0.5) + 'px'\n            }\"\n            class=\"vdp-plot-highlight\"\n        ></div>\n        <div v-show=\"this.highlightX2Secondary !== null\"\n            :style=\"{\n                'display': (showHighlight ? 'inline-block' : 'none'),\n                'height': (this.pHeight) + 'px', \n                'width': '1px',\n                'top': (this.pMarginTop) + 'px',\n                'left': (this.pMarginLeft + this.highlightX2Secondary - 0.5) + 'px'\n            }\"\n            class=\"vdp-plot-highlight\"\n        ></div>\n        <div :id=\"this.tooltipElemID\" class=\"vdp-tooltip\" :style=\"this.tooltipPositionAttribute\">\n            <table>\n                <tr>\n                    <th>{{ this._xScale.name }}</th>\n                    <td>{{ this.tooltipInfo.x }}</td>\n                </tr>\n                <tr>\n                    <th>{{ this._x2Scale.name }}</th>\n                    <td>{{ this.tooltipInfo.x2 }}</td>\n                </tr>\n                <tr>\n                    <th>Count</th>\n                    <td>{{ this.tooltipInfo.count }}</td>\n                </tr>\n                <tr>\n                    <th>Min</th>\n                    <td>{{ this.tooltipInfo.min }}</td>\n                </tr>\n                <tr>\n                    <th>Q1</th>\n                    <td>{{ this.tooltipInfo.q1 }}</td>\n                </tr>\n                <tr>\n                    <th>Median</th>\n                    <td>{{ this.tooltipInfo.median }}</td>\n                </tr>\n                <tr>\n                    <th>Mean</th>\n                    <td>{{ this.tooltipInfo.mean }}</td>\n                </tr>\n                <tr>\n                    <th>Q3</th>\n                    <td>{{ this.tooltipInfo.q3 }}</td>\n                </tr>\n                <tr>\n                    <th>Max</th>\n                    <td>{{ this.tooltipInfo.max }}</td>\n                </tr>\n            </table>\n        </div>\n    </div>\n</template>\n\n<script>\nimport Two from '../../two.js';\nimport { scaleLinear as d3_scaleLinear, scaleQuantile as d3_scaleQuantile, scaleBand as d3_scaleBand } from 'd3-scale';\nimport { select as d3_select, create as d3_create } from 'd3-selection';\nimport { mouse as d3_mouse, event as d3_event } from 'd3';\nimport debounce from 'lodash/debounce';\nimport { min as d3_min, max as d3_max, mean as d3_mean } from 'd3-array';\n\nimport { TOOLTIP_DEBOUNCE } from './../../constants.js';\nimport { getRetinaRatio } from './../../helpers.js';\n\n\nimport AbstractScale from './../../scales/AbstractScale.js';\nimport CategoricalScale from './../../scales/CategoricalScale.js';\nimport ContinuousScale from './../../scales/ContinuousScale.js';\n\n\nimport DataContainer from './../../data/DataContainer.js';\n\nimport mixin from './mixin.js';\n\nlet uuid = 0;\n/**\n * @prop {string} variable The key to access the values in the data array objects.\n * @prop {string} s The key for the data containing the variable to stratify by.\n * @prop {string} x The key for the scale to stratify by. Must be categorical.\n * @prop {string} s2 The key for the data containing the secondary variable to stratify by.\n * @prop {string} x2 The key for the secondary scale to stratify by. Must be categorical.\n * @prop {string} y The y-scale variable key.\n * @prop {string} o The observation-scale variable key. Required in order to match with the stratification data.\n * @prop {number} pointSize The diameter of outlier (and mean) points. Default: 6\n * @prop {boolean} drawOutliers Whether or not to draw outlier points on the plot. Default: true\n * @extends mixin\n * \n * @example\n * <DoubleStratifiedBoxPlot\n *      data=\"boxplot_data\"\n *      variable=\"COSMIC 1\"\n *      s=\"stratification_data\"\n *      x=\"smoking_binary\"\n *      s2=\"stratification_data\"\n *      x2=\"sex\"\n *      y=\"exposure\"\n *      o=\"sample_id\"\n *      :pWidth=\"500\"\n *      :pHeight=\"300\"\n *      :pMarginTop=\"10\"\n *      :pMarginLeft=\"120\"\n *      :pMarginRight=\"10\"\n *      :pMarginBottom=\"150\"\n *      :getData=\"getData\"\n *      :getScale=\"getScale\"\n *      :clickHandler=\"myClickHandler\"\n * />\n */\nexport default {\n    name: 'DoubleStratifiedBoxPlot',\n    mixins: [mixin],\n    props: {\n        'variable': {\n            type: String\n        },\n        's': { // stratification data\n            type: String\n        },\n        'x': { // stratification variable scale\n            type: String\n        },\n        's2': { // stratification data 2\n            type: String\n        },\n        'x2': { // stratification variable scale 2\n            type: String\n        },\n        'y': {\n            type: String\n        },\n        'o': { // observation\n            type: String\n        },\n        'pointSize': {\n            type: Number,\n            default: 6\n        },\n        'drawOutliers': {\n            type: Boolean,\n            default: true\n        }\n    },\n    data() {\n        return {\n            tooltipInfo: {\n                x: '',\n                x2: '',\n                count: '',\n                min: '',\n                q1: '',\n                median: '',\n                mean: '',\n                q3: '',\n                max: ''\n            },\n            highlightX1: null,\n            highlightX2: null,\n            highlightScale: null,\n            barWidth: 0,\n            highlightX1Secondary: null,\n            highlightX2Secondary: null,\n            highlightScaleSecondary: null,\n            highlightScaleSecondaryAll: null,\n            barWidthSecondary: 0\n        }\n    },\n    beforeCreate() {\n        this.uuid = this.$options.name + uuid.toString();\n        uuid += 1;\n    },\n    created() {\n        // Set data\n        this._dataContainer = this.getData(this.data);\n        console.assert(this._dataContainer instanceof DataContainer);\n\n        this._stratificationDataContainer = this.getData(this.s);\n        console.assert(this._stratificationDataContainer instanceof DataContainer);\n\n        this._stratificationDataContainer2 = this.getData(this.s2);\n        console.assert(this._stratificationDataContainer2 instanceof DataContainer);\n\n        // Set scale variables\n        this._yScale = this.getScale(this.y);\n        console.assert(this._yScale instanceof ContinuousScale);\n\n        this._xScale = this.getScale(this.x);\n        console.assert(this._xScale instanceof CategoricalScale);\n\n        this._x2Scale = this.getScale(this.x2);\n        console.assert(this._x2Scale instanceof CategoricalScale);\n\n        this._oScale = this.getScale(this.o);\n        console.assert(this._oScale instanceof AbstractScale);\n\n\n        // Subscribe to event publishers here\n        this._yScale.onUpdate(this.uuid, this.drawPlot);\n        this._xScale.onUpdate(this.uuid, this.drawPlot);\n        this._x2Scale.onUpdate(this.uuid, this.drawPlot);\n        this._oScale.onUpdate(this.uuid, this.drawPlot);\n        \n\n        // Subscribe to data mutations here\n        this._dataContainer.onUpdate(this.uuid, this.drawPlot);\n        this._stratificationDataContainer.onUpdate(this.uuid, this.drawPlot);\n        this._stratificationDataContainer2.onUpdate(this.uuid, this.drawPlot);\n\n        // Subscribe to highlights here\n        this._xScale.onHighlight(this.uuid, this.highlight);\n        this._xScale.onHighlightDestroy(this.uuid, this.highlightDestroy);\n\n        this._x2Scale.onHighlight(this.uuid, this.highlightSecondary);\n        this._x2Scale.onHighlightDestroy(this.uuid, this.highlightDestroy);\n\n    },\n    mounted() {\n        this.drawPlot();\n    },\n    beforeDestroy() {\n        // Unsubscribe to events\n        this._yScale.onUpdate(this.uuid, null);\n        this._xScale.onUpdate(this.uuid, null);\n        this._x2Scale.onUpdate(this.uuid, null);\n        this._oScale.onUpdate(this.uuid, null);\n\n        // Unsubscribe to data mutations here\n        this._dataContainer.onUpdate(this.uuid, null);\n        this._stratificationDataContainer.onUpdate(this.uuid, null);\n        this._stratificationDataContainer2.onUpdate(this.uuid, null);\n\n        // Unsubscribe to highlights here\n        this._xScale.onHighlight(this.uuid, null);\n        this._xScale.onHighlightDestroy(this.uuid, null);\n\n        this._x2Scale.onHighlight(this.uuid, null);\n        this._x2Scale.onHighlightDestroy(this.uuid, null);\n    },\n    watch: {\n        pointSize() {\n            this.drawPlot();\n        },\n        drawOutliers() {\n            this.drawPlot();\n        }\n    },\n    methods: {\n        tooltip: function(mouseX, mouseY, node) {\n            // Set values\n            this.tooltipInfo.x = this._xScale.toHuman(node.x);\n            this.tooltipInfo.x2 = this._x2Scale.toHuman(node.x2);\n            this.tooltipInfo.count = node.count;\n            this.tooltipInfo.min = node.min;\n            this.tooltipInfo.q1 = node.q1;\n            this.tooltipInfo.median = node.median;\n            this.tooltipInfo.mean = node.mean;\n            this.tooltipInfo.q3 = node.q3;\n            this.tooltipInfo.max = node.max;\n\n            // Set position\n            this.tooltipPosition.left = mouseX;\n            this.tooltipPosition.top = mouseY;\n\n            // Dispatch highlights\n            this._xScale.emitHighlight(node.x);\n\n            this.highlightScaleSecondary = this.highlightScaleSecondaryAll[node.xi];\n            this._x2Scale.emitHighlight(node.x2);\n        },\n        tooltipDestroy: function() {\n            this.tooltipHide();\n\n            // Destroy all highlights here\n            this._xScale.emitHighlightDestroy();\n            this._x2Scale.emitHighlightDestroy();\n        },\n        highlight(value) {\n            if(this.highlightScale) {\n                this.highlightX1 = this.highlightScale(value);\n                this.highlightX2 = this.highlightScale(value) + this.barWidth;\n            }\n        },\n        highlightSecondary(value) {\n            if(this.highlightScaleSecondary) {\n                this.highlightX1Secondary = this.highlightScaleSecondary(value);\n                this.highlightX2Secondary = this.highlightScaleSecondary(value) + this.barWidthSecondary;\n            }\n        },\n        highlightDestroy() {\n            this.highlightX1 = null;\n            this.highlightX2 = null;\n            this.highlightX1Secondary = null;\n            this.highlightX2Secondary = null;\n        },\n        drawPlot(d3Node) {\n            const vm = this;\n\n            if(vm._dataContainer.isLoading || \n                vm._stratificationDataContainer.isLoading || \n                vm._stratificationDataContainer2.isLoading || \n                vm._xScale.isLoading || vm._x2Scale.isLoading || vm._yScale.isLoading || vm._oScale.isLoading) {\n                return;\n            }\n            \n            let data = this._dataContainer.dataCopy;\n            let stratificationData = this._stratificationDataContainer.dataCopy;\n            let stratificationData2 = this._stratificationDataContainer2.dataCopy;\n\n            const xScale = vm._xScale;\n            const x2Scale = vm._x2Scale;\n            const yScale = vm._yScale;\n\n            const oScale = vm._oScale;\n            data = data.filter((el) => oScale.domainFiltered.includes(el[vm.o]));\n            \n\n            const x = d3_scaleBand()\n                .domain(xScale.domainFiltered)\n                .range([0, vm.pWidth]);\n\n            const x2AxisWidth = vm.pWidth / xScale.domainFiltered.length;\n            const x2 = xScale.domainFiltered.map((xEl, i) => {\n                return d3_scaleBand()\n                    .domain(x2Scale.domainFiltered)\n                    .range([i*x2AxisWidth, (i+1)*x2AxisWidth]);\n            });\n\n            vm.highlightScale = x;\n            vm.highlightScaleSecondaryAll = x2;\n            \n            const y = d3_scaleLinear()\n                .domain(yScale.domainFiltered)\n                .range([vm.pHeight, 0]);\n\n            const barWidth = vm.pWidth / xScale.domainFiltered.length;\n            vm.barWidth = barWidth;\n\n            const barWidthSecondary = barWidth / x2Scale.domainFiltered.length;\n            vm.barWidthSecondary = barWidthSecondary;\n            \n            \n            /*\n             * Scale up the canvas\n             */\n            let canvas;\n            if(d3Node) {\n                canvas = d3Node;\n            } else {\n                canvas = d3_select(this.plotSelector);\n            }\n\n            const canvasNode = canvas.node();\n\n            if(!canvasNode) {\n                return;\n            }\n\n            const two = new Two({ \n                width: vm.pWidth, \n                height: vm.pHeight, \n                domElement: canvasNode\n            });\n\n            let canvasHidden, contextHidden;\n            try {\n                canvasHidden = d3_select(this.hiddenPlotSelector);\n                contextHidden = canvasHidden.node().getContext('2d');\n            } catch(e) {\n                canvasHidden = d3_create(\"canvas\");\n                contextHidden = canvasHidden.node().getContext('2d');\n            }\n\n            const ratio = getRetinaRatio(contextHidden);\n            const scaledWidth = vm.pWidth * ratio;\n            const scaledHeight = vm.pHeight * ratio;\n\n            canvasHidden\n                .attr(\"width\", scaledWidth)\n                .attr(\"height\", scaledHeight);\n            contextHidden.scale(ratio, ratio);\n\n            /*\n             * Set up the color mappings\n             */\n            const colToNode = {};\n\n            /*\n             * Generates the next color in the sequence, \n             * going from 0,0,0 to 255,255,255.\n             */\n            let nextCol = 1;\n            const genColor = () => {\n                let ret = [];\n                // via http://stackoverflow.com/a/15804183\n                if(nextCol < 16777215){\n                    ret.push(nextCol & 0xff); // R\n                    ret.push((nextCol & 0xff00) >> 8); // G \n                    ret.push((nextCol & 0xff0000) >> 16); // B\n\n                    nextCol += 20;\n                }\n                let col = \"rgb(\" + ret.join(',') + \")\";\n                return col;\n            }\n\n            /*\n             * Draw the boxes\n             */\n\n            const boxWidth = (barWidthSecondary / 2);\n            const boxMargin = barWidthSecondary / 4;\n\n\n            const diamondSize = vm.pointSize + 2;\n\n            xScale.domainFiltered.forEach((boxVar, xi) => {\n                x2Scale.domainFiltered.forEach((boxVarSecondary) => {\n                    const x = x2[xi];\n\n                    let boxData = data.filter((dEl) => {\n                        const sEl = stratificationData.find((sEl) => sEl[vm.o] === dEl[vm.o]);\n                        const sEl2 = stratificationData2.find((sEl) => sEl[vm.o] === dEl[vm.o]);\n                        return (sEl !== undefined && sEl2 !== undefined && sEl[vm.x] === boxVar && sEl2[vm.x2] === boxVarSecondary);\n                    });\n                    boxData = boxData.map((el) => el[vm.variable] || 0);\n                    let quantile = d3_scaleQuantile()\n                        .domain(boxData)\n                        .range([0, 1, 2, 3]);\n                    \n                    let quartiles = quantile.quantiles();\n                    \n                    let q1 = quartiles[0];\n                    let median = quartiles[1];\n                    let mean = d3_mean(boxData);\n                    let q3 = quartiles[2];\n                    \n                    let iqr = quartiles[2] - quartiles[0];\n                    let lowerFence = q1 - iqr;\n                    let upperFence = q3 + iqr;\n\n\n                    let boxX1 = x(boxVarSecondary) + boxMargin;\n                    let boxX2 = boxX1 + boxWidth;\n                    let boxX = boxX1 + (boxWidth / 2);\n\n                    if(boxData.length > 0) {\n                        const verticalLine = two.makeLine(boxX1 + (boxWidth / 2),y(upperFence), boxX1 + (boxWidth / 2),y(lowerFence));\n                        verticalLine.stroke = \"black\";\n\n                        const boxRect = two.makeRectangle(boxX1 + boxWidth/2, y(q3) + (y(q1) - y(q3))/2, boxWidth, y(q1) - y(q3));\n                        boxRect.linewidth = 1;\n                        boxRect.fill = x2Scale.color(boxVarSecondary);\n                        boxRect.stroke = \"black\";\n\n                        const upperFenceLine = two.makeLine(boxX1,y(upperFence), boxX2,y(upperFence));\n                        upperFenceLine.stroke = \"black\";\n\n                        const lowerFenceLine = two.makeLine(boxX1,y(lowerFence), boxX2,y(lowerFence));\n                        lowerFenceLine.stroke = \"black\";\n\n                        const medianLine = two.makeLine(boxX1,y(median), boxX2,y(median));\n                        medianLine.stroke = \"black\";\n\n                        const meanDiamond = two.makeRectangle(boxX,y(mean), diamondSize-2, diamondSize-2);\n                        meanDiamond.stroke = \"black\";\n                        meanDiamond.noFill();\n                        meanDiamond.rotation = Math.PI/4;\n                    }\n\n                    // Draw the outliers\n                    if(vm.drawOutliers) {\n                        let outliers = boxData.filter((el) => (el > upperFence) || (el < lowerFence));\n                        outliers.forEach((outlier) => {\n                            const circle = two.makeCircle(boxX, y(outlier), (vm.pointSize / 2));\n                            circle.linewidth = 1;\n                            circle.stroke = \"black\";\n                            circle.noFill();\n                        });\n                    }\n\n                    // Map data to colors\n                    const col = genColor();\n                    colToNode[col] = {\n                        x: boxVar,\n                        xi: xi,\n                        x2: boxVarSecondary,\n                        count: boxData.length,\n                        min: d3_min(boxData), \n                        q1: q1,\n                        median: median,\n                        mean: mean,\n                        q3: q3, \n                        max: d3_max(boxData)\n                    };\n                    contextHidden.fillStyle = col;\n                    contextHidden.fillRect(x(boxVarSecondary), 0, barWidth, vm.pHeight);\n                });\n            });\n\n            two.update();\n\n            if(d3Node) {\n                /* Ignore interactivity if SVG was passed in (for download). */\n                return;\n            }\n            \n            /*\n             * Listen for mouse events\n             */\n            const getDataFromMouse = (mouseX, mouseY) => {\n                // Get the corresponding pixel color on the hidden canvas\n                const col = contextHidden.getImageData(mouseX * ratio, mouseY * ratio, scaledWidth, scaledHeight).data;\n                const colString = \"rgb(\" + col[0] + \",\" + col[1] + \",\"+ col[2] + \")\";\n                // Look up the node in our map\n                return colToNode[colString];\n            }\n\n            const debouncedTooltipDestroy = debounce(vm.tooltipDestroy, TOOLTIP_DEBOUNCE);\n            canvas.on(\"mousemove\", () => {\n                const mouse = d3_mouse(canvasNode);\n                const mouseX = mouse[0];\n                const mouseY = mouse[1];\n\n                const node = getDataFromMouse(mouseX, mouseY);\n\n                const mouseViewportX = d3_event.clientX;\n                const mouseViewportY = d3_event.clientY;\n\n                if(node) {\n                    vm.tooltip(mouseViewportX, mouseViewportY, node); \n                } else {\n                    debouncedTooltipDestroy();\n                }\n            })\n            .on(\"mouseleave\", vm.tooltipDestroy);\n            \n            if(vm.clickHandler !== undefined) {\n                canvas.on(\"click\", () => {\n                    const mouse = d3_mouse(canvasNode);\n                    const mouseX = mouse[0];\n                    const mouseY = mouse[1];\n\n                    const node = getDataFromMouse(mouseX, mouseY);\n\n                    if(node) {\n                        vm.clickHandler(node[\"x\"], node[\"x2\"]); \n                    }\n                })\n            }\n            \n        }\n    }\n}\n</script>\n\n<style>\n@import '../../style/plot-style.css';\n</style>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./DoubleStratifiedBoxPlot.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./DoubleStratifiedBoxPlot.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./DoubleStratifiedBoxPlot.vue?vue&type=template&id=bc602042&\"\nimport script from \"./DoubleStratifiedBoxPlot.vue?vue&type=script&lang=js&\"\nexport * from \"./DoubleStratifiedBoxPlot.vue?vue&type=script&lang=js&\"\nimport style0 from \"./DoubleStratifiedBoxPlot.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('canvas',{staticClass:\"vdp-plot\",style:({\n            'height': (this.pHeight) + 'px', \n            'width': (this.pWidth) + 'px',\n            'top': (this.pMarginTop) + 'px',\n            'left': (this.pMarginLeft) + 'px'\n        }),attrs:{\"id\":this.plotElemID}}),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(this.highlightX1 !== null),expression:\"this.highlightX1 !== null\"}],staticClass:\"vdp-plot-highlight\",style:({\n            'height': (this.pHeight) + 'px', \n            'width': '1px',\n            'top': (this.pMarginTop) + 'px',\n            'left': (this.pMarginLeft + this.highlightX1 - 0.5) + 'px'\n        })}),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(this.highlightY1 !== null),expression:\"this.highlightY1 !== null\"}],staticClass:\"vdp-plot-highlight\",style:({\n            'display': (_vm.showHighlight ? 'inline-block' : 'none'),\n            'height': '1px',\n            'width': (this.pWidth) + 'px', \n            'top': (this.pMarginTop + this.highlightY1 - 0.5) + 'px',\n            'left': (this.pMarginLeft) + 'px'\n        })}),_c('div',{staticClass:\"vdp-tooltip\",style:(this.tooltipPositionAttribute),attrs:{\"id\":this.tooltipElemID}},[_c('table',[_c('tr',[_c('th',[_vm._v(_vm._s(this._oScale.name))]),_c('td',[_vm._v(_vm._s(this.tooltipInfo.o))])]),_c('tr',[_c('th',[_vm._v(_vm._s(this._xScale.name))]),_c('td',[_vm._v(_vm._s(this.tooltipInfo.x))])]),_c('tr',[_c('th',[_vm._v(_vm._s(this._yScale.name))]),_c('td',[_vm._v(_vm._s(this.tooltipInfo.y))])])])])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <div>\n        <canvas \n            :id=\"this.plotElemID\" \n            class=\"vdp-plot\" \n            :style=\"{\n                'height': (this.pHeight) + 'px', \n                'width': (this.pWidth) + 'px',\n                'top': (this.pMarginTop) + 'px',\n                'left': (this.pMarginLeft) + 'px'\n            }\"\n        ></canvas>\n        <div v-show=\"this.highlightX1 !== null\"\n            :style=\"{\n                'height': (this.pHeight) + 'px', \n                'width': '1px',\n                'top': (this.pMarginTop) + 'px',\n                'left': (this.pMarginLeft + this.highlightX1 - 0.5) + 'px'\n            }\"\n            class=\"vdp-plot-highlight\"\n        ></div>\n        <div v-show=\"this.highlightY1 !== null\"\n            :style=\"{\n                'display': (showHighlight ? 'inline-block' : 'none'),\n                'height': '1px',\n                'width': (this.pWidth) + 'px', \n                'top': (this.pMarginTop + this.highlightY1 - 0.5) + 'px',\n                'left': (this.pMarginLeft) + 'px'\n            }\"\n            class=\"vdp-plot-highlight\"\n        ></div>\n        <div :id=\"this.tooltipElemID\" class=\"vdp-tooltip\" :style=\"this.tooltipPositionAttribute\">\n            <table>\n                <tr>\n                    <th>{{ this._oScale.name }}</th>\n                    <td>{{ this.tooltipInfo.o }}</td>\n                </tr>\n                <tr>\n                    <th>{{ this._xScale.name }}</th>\n                    <td>{{ this.tooltipInfo.x }}</td>\n                </tr>\n                <tr>\n                    <th>{{ this._yScale.name }}</th>\n                    <td>{{ this.tooltipInfo.y }}</td>\n                </tr>\n                \n            </table>\n        </div>\n    </div>\n</template>\n\n<script>\nimport Two from '../../two.js';\nimport { scaleLinear as d3_scaleLinear } from 'd3-scale';\nimport { select as d3_select } from 'd3-selection';\nimport { mouse as d3_mouse, event as d3_event } from 'd3';\nimport debounce from 'lodash/debounce';\nimport { TOOLTIP_DEBOUNCE } from './../../constants.js';\nimport { getDelaunay } from './../../helpers.js';\n\nimport AbstractScale from './../../scales/AbstractScale.js';\nimport ContinuousScale from './../../scales/ContinuousScale.js';\n\nimport DataContainer from './../../data/DataContainer.js';\n\nimport mixin from './mixin.js';\n\nlet uuid = 0;\n/**\n * @prop {string} variable The key to access the values in the data array objects.\n * @prop {string} s The key for the data containing the variable to stratify by.\n * @prop {string} x The x-scale variable key. Must be continuous.\n * @prop {string} y The y-scale variable key. Must be continuous.\n * @prop {string} o The observation-scale variable key. Required in order to match with the stratification data.\n * @prop {boolean} fillPoints Whether or not to fill points. Default: false\n * @prop {number} pointSize Default size for points. Default: 3\n * @prop {string} strokeColor Color for point outlines. Optional. Will override the x color scale if provided.\n * @extends mixin\n * \n * @example\n * <StratifiedScatterPlot\n *      data=\"exposures_data\"\n *      variable=\"COSMIC 1\"\n *      s=\"clinical_data\"\n *      y=\"cosmic_1_exposure\"\n *      o=\"sample_id\"\n *      x=\"age\"\n *      :pWidth=\"500\"\n *      :pHeight=\"300\"\n *      :pMarginTop=\"10\"\n *      :pMarginLeft=\"120\"\n *      :pMarginRight=\"10\"\n *      :pMarginBottom=\"150\"\n *      :getData=\"getData\"\n *      :getScale=\"getScale\"\n *      :clickHandler=\"myClickHandler\"\n * />\n */\nexport default {\n    name: 'StratifiedScatterPlot',\n    mixins: [mixin],\n    props: {\n        'variable': {\n            type: String\n        },\n        's': { // stratification data\n            type: String\n        },\n        'x': { // stratification variable scale\n            type: String\n        },\n        'y': {\n            type: String\n        },\n        'o': { // observation\n            type: String\n        },\n        'pointSize': {\n            type: Number,\n            default: 3\n        },\n        'fillPoints': {\n            type: Boolean,\n            default: false\n        },\n        'strokeColor': {\n            type: String\n        }\n    },\n    data() {\n        return {\n            tooltipInfo: {\n                x: '',\n                y: '',\n                o: ''\n            },\n            highlightX1: null,\n            highlightY1: null,\n            highlightXScale: null,\n            highlightYScale: null\n        }\n    },\n    beforeCreate() {\n        this.uuid = this.$options.name + uuid.toString();\n        uuid += 1;\n    },\n    created() {\n        // Set data\n        this._dataContainer = this.getData(this.data);\n        console.assert(this._dataContainer instanceof DataContainer);\n\n        this._stratificationDataContainer = this.getData(this.s);\n        console.assert(this._stratificationDataContainer instanceof DataContainer);\n\n        // Set scale variables\n        this._yScale = this.getScale(this.y);\n        console.assert(this._yScale instanceof ContinuousScale);\n\n        this._xScale = this.getScale(this.x);\n        console.assert(this._xScale instanceof ContinuousScale);\n\n        this._oScale = this.getScale(this.o);\n        console.assert(this._oScale instanceof AbstractScale);\n\n\n        // Subscribe to event publishers here\n        this._yScale.onUpdate(this.uuid, this.drawPlot);\n        this._xScale.onUpdate(this.uuid, this.drawPlot);\n        this._oScale.onUpdate(this.uuid, this.drawPlot);\n        \n\n        // Subscribe to data mutations here\n        this._dataContainer.onUpdate(this.uuid, this.drawPlot);\n        this._stratificationDataContainer.onUpdate(this.uuid, this.drawPlot);\n\n        // Subscribe to highlights here\n        this._xScale.onHighlight(this.uuid, this.highlightX);\n        this._xScale.onHighlightDestroy(this.uuid, this.highlightDestroy);\n\n        this._yScale.onHighlight(this.uuid, this.highlightY);\n        this._yScale.onHighlightDestroy(this.uuid, this.highlightDestroy);\n\n    },\n    mounted() {\n        this.drawPlot();\n    },\n    beforeDestroy() {\n        // Unsubscribe to events\n        this._yScale.onUpdate(this.uuid, null);\n        this._xScale.onUpdate(this.uuid, null);\n        this._oScale.onUpdate(this.uuid, null);\n\n        // Unsubscribe to data mutations here\n        this._dataContainer.onUpdate(this.uuid, null);\n        this._stratificationDataContainer.onUpdate(this.uuid, null);\n\n        // Unsubscribe to highlights here\n        this._xScale.onHighlight(this.uuid, null);\n        this._xScale.onHighlightDestroy(this.uuid, null);\n\n        this._yScale.onHighlight(this.uuid, null);\n        this._yScale.onHighlightDestroy(this.uuid, null);\n    },\n    watch: {\n        pointSize() {\n            this.drawPlot();\n        },\n        fillPoints() {\n            this.drawPlot();\n        },\n        strokeColor() {\n            this.drawPlot();\n        }\n    },\n    methods: {\n        tooltip: function(mouseX, mouseY, o, x, y) {\n            // Set values\n            this.tooltipInfo.o = this._oScale.toHuman(o);\n            this.tooltipInfo.x = this._xScale.toHuman(x);\n            this.tooltipInfo.y = this._yScale.toHuman(y);\n\n            // Set position\n            this.tooltipPosition.left = mouseX;\n            this.tooltipPosition.top = mouseY;\n            \n            // Dispatch highlights\n            this._oScale.emitHighlight(o);\n            this._xScale.emitHighlight(x);\n            this._yScale.emitHighlight(y);\n        },\n        tooltipDestroy: function() {\n            this.tooltipHide();\n\n            // Destroy all highlights here\n            this._xScale.emitHighlightDestroy();\n            this._yScale.emitHighlightDestroy();\n            this._oScale.emitHighlightDestroy();\n        },\n        highlightX(value) {\n            if(this.highlightXScale) {\n                this.highlightX1 = this.highlightXScale(value);\n            }\n        },\n        highlightY(value) {\n            if(this.highlightYScale) {\n                this.highlightY1 = this.highlightYScale(value);\n            }\n        },\n        highlightDestroy() {\n            this.highlightX1 = null;\n            this.highlightY1 = null;\n        },\n        drawPlot(d3Node) {\n            const vm = this;\n\n            if(vm._dataContainer.isLoading || vm._stratificationDataContainer.isLoading || vm._xScale.isLoading || vm._yScale.isLoading || vm._oScale.isLoading) {\n                return;\n            }\n            \n            let data = this._dataContainer.dataCopy;\n            let stratificationData = this._stratificationDataContainer.dataCopy;\n\n            const xScale = vm._xScale;\n            const yScale = vm._yScale;\n\n            const oScale = vm._oScale;\n            data = data.filter((el) => oScale.domainFiltered.includes(el[vm.o]));\n            stratificationData = stratificationData.filter((el) => oScale.domainFiltered.includes(el[vm.o]));\n            \n\n            const x = d3_scaleLinear()\n                .domain(xScale.domainFiltered)\n                .range([0, vm.pWidth]);\n\n            vm.highlightXScale = x;\n            \n            const y = d3_scaleLinear()\n                .domain(yScale.domainFiltered)\n                .range([vm.pHeight, 0]);\n            \n            vm.highlightYScale = y;\n            \n            /*\n             * Scale up the canvas\n             */\n            let canvas;\n            if(d3Node) {\n                canvas = d3Node;\n            } else {\n                canvas = d3_select(this.plotSelector);\n            }\n\n            const canvasNode = canvas.node();\n\n            if(!canvasNode) {\n                return;\n            }\n\n            const two = new Two({ \n                width: vm.pWidth, \n                height: vm.pHeight, \n                domElement: canvasNode\n            });\n\n             /*\n             * Prepare for interactivity\n             */\n            const points = [];\n            const pointsData = [];\n\n            /*\n             * Draw the points\n             */\n            data.forEach((d) => {\n                let sEl = stratificationData.find((sEl) => sEl[vm.o] === d[vm.o]);\n                if(sEl !== undefined && !AbstractScale.isUnknown(sEl[vm.x])) {\n                    const circle = two.makeCircle(x(sEl[vm.x]), y(d[vm.variable]), vm.pointSize);\n                    circle.linewidth = 0.5;\n                    if(vm.strokeColor !== undefined) {\n                        circle.stroke = vm.strokeColor;\n                    } else {\n                        circle.stroke = xScale.color(sEl[vm.x]);\n                    }\n                    circle.fill = xScale.color(sEl[vm.x]);\n                    if(!vm.fillPoints) {\n                        circle.noFill();\n                    }\n\n                    points.push([x(sEl[vm.x]), y(d[vm.variable])]);\n                    pointsData.push({\n                        \"y\": d[vm.variable],\n                        \"o\": d[vm.o],\n                        \"x\": sEl[vm.x]\n                    });\n                }\n            });\n\n            two.update();\n\n            if(d3Node) {\n                /* Ignore interactivity if SVG was passed in (for download). */\n                return;\n            }\n            \n            /*\n             * More prepare for interactivity\n             */\n            const delaunay = getDelaunay(points, true);\n            \n            /*\n             * Listen for mouse events\n             */\n            const getDataFromMouse = (mouseX, mouseY) => {\n                const i = delaunay.find(mouseX, mouseY);\n                return pointsData[i];\n            };\n\n            const debouncedTooltipDestroy = debounce(vm.tooltipDestroy, TOOLTIP_DEBOUNCE);\n            canvas.on(\"mousemove\", () => {\n                const mouse = d3_mouse(canvasNode);\n                const mouseX = mouse[0];\n                const mouseY = mouse[1];\n\n                const node = getDataFromMouse(mouseX, mouseY);\n\n                const mouseViewportX = d3_event.clientX;\n                const mouseViewportY = d3_event.clientY;\n\n                if(node) {\n                    vm.tooltip(mouseViewportX, mouseViewportY, node[\"o\"], node[\"x\"], node[\"y\"]); \n                } else {\n                    debouncedTooltipDestroy();\n                }\n            })\n            .on(\"mouseleave\", vm.tooltipDestroy);\n\n            if(vm.clickHandler !== undefined) {\n                canvas.on(\"click\", () => {\n                    const mouse = d3_mouse(canvasNode);\n                    const mouseX = mouse[0];\n                    const mouseY = mouse[1];\n\n                    const node = getDataFromMouse(mouseX, mouseY);\n\n                    if(node) {\n                        vm.clickHandler(node[\"o\"], node[\"x\"], node[\"y\"]); \n                    }\n                });\n            }\n        }\n    }\n}\n</script>\n\n<style>\n@import '../../style/plot-style.css';\n</style>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./StratifiedScatterPlot.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./StratifiedScatterPlot.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./StratifiedScatterPlot.vue?vue&type=template&id=0d5643d8&\"\nimport script from \"./StratifiedScatterPlot.vue?vue&type=script&lang=js&\"\nexport * from \"./StratifiedScatterPlot.vue?vue&type=script&lang=js&\"\nimport style0 from \"./StratifiedScatterPlot.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('canvas',{staticClass:\"vdp-plot\",style:({\n            'height': (this.pHeight) + 'px', \n            'width': (this.pWidth) + 'px',\n            'top': (this.pMarginTop) + 'px',\n            'left': (this.pMarginLeft) + 'px'\n        }),attrs:{\"id\":this.plotElemID}}),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(this.highlightX1 !== null),expression:\"this.highlightX1 !== null\"}],staticClass:\"vdp-plot-highlight\",style:({\n            'height': (this.pHeight) + 'px', \n            'width': '1px',\n            'top': (this.pMarginTop) + 'px',\n            'left': (this.pMarginLeft + this.highlightX1 - 0.5) + 'px'\n        })}),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(this.highlightX1Secondary !== null),expression:\"this.highlightX1Secondary !== null\"}],staticClass:\"vdp-plot-highlight\",style:({\n            'height': (this.pHeight) + 'px', \n            'width': '1px',\n            'top': (this.pMarginTop) + 'px',\n            'left': (this.pMarginLeft + this.highlightX1Secondary - 0.5) + 'px'\n        })}),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(this.highlightY1 !== null),expression:\"this.highlightY1 !== null\"}],staticClass:\"vdp-plot-highlight\",style:({\n            'display': (_vm.showHighlight ? 'inline-block' : 'none'),\n            'height': '1px',\n            'width': (this.pWidth) + 'px', \n            'top': (this.pMarginTop + this.highlightY1 - 0.5) + 'px',\n            'left': (this.pMarginLeft) + 'px'\n        })}),_c('div',{staticClass:\"vdp-tooltip\",style:(this.tooltipPositionAttribute),attrs:{\"id\":this.tooltipElemID}},[_c('table',[_c('tr',[_c('th',[_vm._v(_vm._s(this._oScale.name))]),_c('td',[_vm._v(_vm._s(this.tooltipInfo.o))])]),_c('tr',[_c('th',[_vm._v(_vm._s(this._xScale.name))]),_c('td',[_vm._v(_vm._s(this.tooltipInfo.x))])]),_c('tr',[_c('th',[_vm._v(_vm._s(this._x2Scale.name))]),_c('td',[_vm._v(_vm._s(this.tooltipInfo.x2))])]),_c('tr',[_c('th',[_vm._v(_vm._s(this._yScale.name))]),_c('td',[_vm._v(_vm._s(this.tooltipInfo.y))])])])])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <div>\n        <canvas \n            :id=\"this.plotElemID\" \n            class=\"vdp-plot\" \n            :style=\"{\n                'height': (this.pHeight) + 'px', \n                'width': (this.pWidth) + 'px',\n                'top': (this.pMarginTop) + 'px',\n                'left': (this.pMarginLeft) + 'px'\n            }\"\n        ></canvas>\n        <div v-show=\"this.highlightX1 !== null\"\n            :style=\"{\n                'height': (this.pHeight) + 'px', \n                'width': '1px',\n                'top': (this.pMarginTop) + 'px',\n                'left': (this.pMarginLeft + this.highlightX1 - 0.5) + 'px'\n            }\"\n            class=\"vdp-plot-highlight\"\n        ></div>\n        <div v-show=\"this.highlightX1Secondary !== null\"\n            :style=\"{\n                'height': (this.pHeight) + 'px', \n                'width': '1px',\n                'top': (this.pMarginTop) + 'px',\n                'left': (this.pMarginLeft + this.highlightX1Secondary - 0.5) + 'px'\n            }\"\n            class=\"vdp-plot-highlight\"\n        ></div>\n        <div v-show=\"this.highlightY1 !== null\"\n            :style=\"{\n                'display': (showHighlight ? 'inline-block' : 'none'),\n                'height': '1px',\n                'width': (this.pWidth) + 'px', \n                'top': (this.pMarginTop + this.highlightY1 - 0.5) + 'px',\n                'left': (this.pMarginLeft) + 'px'\n            }\"\n            class=\"vdp-plot-highlight\"\n        ></div>\n        <div :id=\"this.tooltipElemID\" class=\"vdp-tooltip\" :style=\"this.tooltipPositionAttribute\">\n            <table>\n                <tr>\n                    <th>{{ this._oScale.name }}</th>\n                    <td>{{ this.tooltipInfo.o }}</td>\n                </tr>\n                <tr>\n                    <th>{{ this._xScale.name }}</th>\n                    <td>{{ this.tooltipInfo.x }}</td>\n                </tr>\n                <tr>\n                    <th>{{ this._x2Scale.name }}</th>\n                    <td>{{ this.tooltipInfo.x2 }}</td>\n                </tr>\n                <tr>\n                    <th>{{ this._yScale.name }}</th>\n                    <td>{{ this.tooltipInfo.y }}</td>\n                </tr>\n                \n            </table>\n        </div>\n    </div>\n</template>\n\n<script>\nimport Two from '../../two.js';\nimport { scaleLinear as d3_scaleLinear } from 'd3-scale';\nimport { select as d3_select } from 'd3-selection';\nimport { mouse as d3_mouse, event as d3_event } from 'd3';\nimport debounce from 'lodash/debounce';\nimport { TOOLTIP_DEBOUNCE } from './../../constants.js';\nimport { getDelaunay } from './../../helpers.js';\n\nimport AbstractScale from './../../scales/AbstractScale.js';\nimport ContinuousScale from './../../scales/ContinuousScale.js';\n\nimport DataContainer from './../../data/DataContainer.js';\n\nimport mixin from './mixin.js';\n\nlet uuid = 0;\n/**\n * @prop {string} variable The key to access the values in the data array objects.\n * @prop {string} s The key for the data containing the variable to stratify by.\n * @prop {string} x The x-scale variable key. Must be continuous.\n * @prop {string} s2 The key for the data containing the secondary variable to stratify by.\n * @prop {string} x2 The secondary x-scale variable key.\n * @prop {string} y The y-scale variable key. Must be continuous.\n * @prop {string} o The observation-scale variable key. Required in order to match with the stratification data.\n * @prop {boolean} fillPoints Whether or not to fill points. Default: false\n * @prop {number} pointSize Default size for points. Default: 3\n * @prop {string} strokeColor Color for point outlines. Optional. Will override the x color scale if provided.\n * @extends mixin\n * \n * @example\n * <DoubleStratifiedScatterPlot\n *      data=\"exposures_data\"\n *      variable=\"COSMIC 1\"\n *      s=\"clinical_data\"\n *      x=\"age\"\n *      s2=\"clinical_data\"\n *      x2=\"sex\"\n *      y=\"cosmic_1_exposure\"\n *      o=\"sample_id\"\n *      :pWidth=\"500\"\n *      :pHeight=\"300\"\n *      :pMarginTop=\"10\"\n *      :pMarginLeft=\"120\"\n *      :pMarginRight=\"10\"\n *      :pMarginBottom=\"150\"\n *      :getData=\"getData\"\n *      :getScale=\"getScale\"\n *      :clickHandler=\"myClickHandler\"\n * />\n */\nexport default {\n    name: 'DoubleStratifiedScatterPlot',\n    mixins: [mixin],\n    props: {\n        'variable': {\n            type: String\n        },\n        's': { // stratification data\n            type: String\n        },\n        'x': { // stratification variable scale\n            type: String\n        },\n        's2': { // stratification data 2\n            type: String\n        },\n        'x2': { // stratification variable scale 2\n            type: String\n        },\n        'y': {\n            type: String\n        },\n        'o': { // observation\n            type: String\n        },\n        'pointSize': {\n            type: Number,\n            default: 3\n        },\n        'fillPoints': {\n            type: Boolean,\n            default: false\n        },\n        'strokeColor': {\n            type: String\n        }\n    },\n    data() {\n        return {\n            tooltipInfo: {\n                x: '',\n                x2: '',\n                y: '',\n                o: ''\n            },\n            highlightX1: null,\n            highlightX1Secondary: null,\n            highlightY1: null,\n            highlightXScale: null,\n            highlightXScaleSecondary: null,\n            highlightXScaleSecondaryAll: null,\n            highlightYScale: null\n        }\n    },\n    beforeCreate() {\n        this.uuid = this.$options.name + uuid.toString();\n        uuid += 1;\n    },\n    created() {\n        // Set data\n        this._dataContainer = this.getData(this.data);\n        console.assert(this._dataContainer instanceof DataContainer);\n\n        this._stratificationDataContainer = this.getData(this.s);\n        console.assert(this._stratificationDataContainer instanceof DataContainer);\n\n        this._stratificationDataContainer2 = this.getData(this.s2);\n        console.assert(this._stratificationDataContainer2 instanceof DataContainer);\n\n        // Set scale variables\n        this._yScale = this.getScale(this.y);\n        console.assert(this._yScale instanceof ContinuousScale);\n\n        this._xScale = this.getScale(this.x);\n        console.assert(this._xScale instanceof ContinuousScale);\n\n        this._x2Scale = this.getScale(this.x2);\n        console.assert(this._x2Scale instanceof AbstractScale);\n\n        this._oScale = this.getScale(this.o);\n        console.assert(this._oScale instanceof AbstractScale);\n\n\n        // Subscribe to event publishers here\n        this._yScale.onUpdate(this.uuid, this.drawPlot);\n        this._xScale.onUpdate(this.uuid, this.drawPlot);\n        this._x2Scale.onUpdate(this.uuid, this.drawPlot);\n        this._oScale.onUpdate(this.uuid, this.drawPlot);\n        \n\n        // Subscribe to data mutations here\n        this._dataContainer.onUpdate(this.uuid, this.drawPlot);\n        this._stratificationDataContainer.onUpdate(this.uuid, this.drawPlot);\n        this._stratificationDataContainer2.onUpdate(this.uuid, this.drawPlot);\n\n        // Subscribe to highlights here\n        this._xScale.onHighlight(this.uuid, this.highlightX);\n        this._xScale.onHighlightDestroy(this.uuid, this.highlightDestroy);\n\n        this._x2Scale.onHighlight(this.uuid, this.highlightXSecondary);\n        this._x2Scale.onHighlightDestroy(this.uuid, this.highlightDestroy);\n\n        this._yScale.onHighlight(this.uuid, this.highlightY);\n        this._yScale.onHighlightDestroy(this.uuid, this.highlightDestroy);\n\n    },\n    mounted() {\n        this.drawPlot();\n    },\n    beforeDestroy() {\n        // Unsubscribe to events\n        this._yScale.onUpdate(this.uuid, null);\n        this._xScale.onUpdate(this.uuid, null);\n        this._x2Scale.onUpdate(this.uuid, null);\n        this._oScale.onUpdate(this.uuid, null);\n\n        // Unsubscribe to data mutations here\n        this._dataContainer.onUpdate(this.uuid, null);\n        this._stratificationDataContainer.onUpdate(this.uuid, null);\n        this._stratificationDataContainer2.onUpdate(this.uuid, null);\n\n        // Unsubscribe to highlights here\n        this._xScale.onHighlight(this.uuid, null);\n        this._xScale.onHighlightDestroy(this.uuid, null);\n\n        this._x2Scale.onHighlight(this.uuid, null);\n        this._x2Scale.onHighlightDestroy(this.uuid, null);\n\n        this._yScale.onHighlight(this.uuid, null);\n        this._yScale.onHighlightDestroy(this.uuid, null);\n    },\n    watch: {\n        pointSize() {\n            this.drawPlot();\n        },\n        fillPoints() {\n            this.drawPlot();\n        },\n        strokeColor() {\n            this.drawPlot();\n        }\n    },\n    methods: {\n        tooltip: function(mouseX, mouseY, o, x, x2, y) {\n            // Set values\n            this.tooltipInfo.o = this._oScale.toHuman(o);\n            this.tooltipInfo.x = this._xScale.toHuman(x);\n            this.tooltipInfo.x2 = this._x2Scale.toHuman(x2);\n            this.tooltipInfo.y = this._yScale.toHuman(y);\n\n            // Set position\n            this.tooltipPosition.left = mouseX;\n            this.tooltipPosition.top = mouseY;\n\n            // Dispatch highlights\n            this._oScale.emitHighlight(o);\n            this._xScale.emitHighlight(x);\n            this._x2Scale.emitHighlight(x2);\n            this._yScale.emitHighlight(y);\n        },\n        tooltipDestroy: function() {\n            this.tooltipHide();\n\n            // Destroy all highlights here\n            this._xScale.emitHighlightDestroy();\n            this._x2Scale.emitHighlightDestroy();\n            this._yScale.emitHighlightDestroy();\n            this._oScale.emitHighlightDestroy();\n        },\n        highlightX(value) {\n            if(this.highlightXScale) {\n                this.highlightX1 = this.highlightXScale(value);\n            }\n        },\n        highlightXSecondary(value) {\n            if(this.highlightXScaleSecondary) {\n                this.highlightX1Secondary = this.highlightXScaleSecondary(value);\n            }\n        },\n        highlightY(value) {\n            if(this.highlightYScale) {\n                this.highlightY1 = this.highlightYScale(value);\n            }\n        },\n        highlightDestroy() {\n            this.highlightX1 = null;\n            this.highlightX1Secondary = null;\n            this.highlightY1 = null;\n        },\n        drawPlot(d3Node) {\n            const vm = this;\n\n            if(vm._dataContainer.isLoading || \n                vm._stratificationDataContainer.isLoading || \n                vm._stratificationDataContainer2.isLoading || \n                vm._xScale.isLoading || vm._x2Scale.isLoading || vm._yScale.isLoading || vm._oScale.isLoading) {\n                return;\n            }\n            \n            let data = this._dataContainer.dataCopy;\n            let stratificationData = this._stratificationDataContainer.dataCopy;\n            let stratificationData2 = this._stratificationDataContainer2.dataCopy;\n\n            const xScale = vm._xScale;\n            const x2Scale = vm._x2Scale;\n            const yScale = vm._yScale;\n\n            const oScale = vm._oScale;\n            data = data.filter((el) => oScale.domainFiltered.includes(el[vm.o]));\n            stratificationData = stratificationData.filter((el) => oScale.domainFiltered.includes(el[vm.o]));\n            stratificationData2 = stratificationData2.filter((el) => oScale.domainFiltered.includes(el[vm.o]));\n            \n\n            const x = d3_scaleLinear()\n                .domain(xScale.domainFiltered)\n                .range([0, vm.pWidth]);\n            \n            const y = d3_scaleLinear()\n                .domain(yScale.domainFiltered)\n                .range([vm.pHeight, 0]);\n            \n            vm.highlightXScale = x;\n            vm.highlightYScale = y;\n              \n\n            \n            /*\n             * Scale up the canvas\n             */\n            let canvas;\n            if(d3Node) {\n                canvas = d3Node;\n            } else {\n                canvas = d3_select(this.plotSelector);\n            }\n\n            const canvasNode = canvas.node();\n\n            if(!canvasNode) {\n                return;\n            }\n\n            const two = new Two({ \n                width: vm.pWidth, \n                height: vm.pHeight, \n                domElement: canvasNode\n            });\n\n\n             /*\n             * Prepare for interactivity\n             */\n            const points = [];\n            const pointsData = [];\n\n            /*\n             * Draw the points\n             */\n            data.forEach((d) => {\n                let sEl = stratificationData.find((sEl) => sEl[vm.o] === d[vm.o]);\n                let sEl2 = stratificationData2.find((sEl) => sEl[vm.o] === d[vm.o]);\n                if(sEl !== undefined && sEl2 !== undefined && !AbstractScale.isUnknown(sEl[vm.x]) && !AbstractScale.isUnknown(sEl2[vm.x2])) {\n                    \n                    points.push([x(sEl[vm.x]), y(d[vm.variable])]);\n                    pointsData.push({\n                        \"y\": d[vm.variable],\n                        \"o\": d[vm.o],\n                        \"x\": sEl[vm.x],\n                        \"x2\": sEl2[vm.x2]\n                    });\n\n                    const circle = two.makeCircle(x(sEl[vm.x]), y(d[vm.variable]), vm.pointSize);\n                    circle.fill = x2Scale.color(sEl2[vm.x2]);\n                    circle.linewidth = 0.5;\n                    if(vm.strokeColor !== undefined) {\n                        circle.stroke = vm.strokeColor;\n                    } else {\n                        circle.stroke = x2Scale.color(sEl2[vm.x2]);\n                    }\n                    if(!vm.fillPoints) {\n                        circle.noFill();\n                    }\n                }\n            });\n\n            two.update();\n\n            if(d3Node) {\n                /* Ignore interactivity if SVG was passed in (for download). */\n                return;\n            }\n            \n            /*\n             * More prepare for interactivity\n             */\n            const delaunay = getDelaunay(points, true);\n            \n            /*\n             * Listen for mouse events\n             */\n            const getDataFromMouse = (mouseX, mouseY) => {\n                const i = delaunay.find(mouseX, mouseY);\n                return pointsData[i];\n            };\n\n            const debouncedTooltipDestroy = debounce(vm.tooltipDestroy, TOOLTIP_DEBOUNCE);\n            canvas.on(\"mousemove\", () => {\n                const mouse = d3_mouse(canvasNode);\n                const mouseX = mouse[0];\n                const mouseY = mouse[1];\n\n                const node = getDataFromMouse(mouseX, mouseY);\n\n                const mouseViewportX = d3_event.clientX;\n                const mouseViewportY = d3_event.clientY;\n\n                if(node) {\n                    vm.tooltip(mouseViewportX, mouseViewportY, node[\"o\"], node[\"x\"], node[\"x2\"], node[\"y\"]); \n                } else {\n                    debouncedTooltipDestroy();\n                }\n            })\n            .on(\"mouseleave\", vm.tooltipDestroy);\n\n            if(vm.clickHandler !== undefined) {\n                canvas.on(\"click\", () => {\n                    const mouse = d3_mouse(canvasNode);\n                    const mouseX = mouse[0];\n                    const mouseY = mouse[1];\n\n                    const node = getDataFromMouse(mouseX, mouseY);\n\n                    if(node) {\n                        vm.clickHandler(node[\"o\"], node[\"x\"], node[\"x2\"], node[\"y\"]); \n                    }\n                });\n            }\n        }\n    }\n}\n</script>\n\n<style>\n@import '../../style/plot-style.css';\n</style>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./DoubleStratifiedScatterPlot.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./DoubleStratifiedScatterPlot.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./DoubleStratifiedScatterPlot.vue?vue&type=template&id=2c1495b9&\"\nimport script from \"./DoubleStratifiedScatterPlot.vue?vue&type=script&lang=js&\"\nexport * from \"./DoubleStratifiedScatterPlot.vue?vue&type=script&lang=js&\"\nimport style0 from \"./DoubleStratifiedScatterPlot.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('canvas',{staticClass:\"vdp-plot\",style:({\n            'height': (this.pHeight) + 'px', \n            'width': (this.pWidth) + 'px',\n            'top': (this.pMarginTop) + 'px',\n            'left': (this.pMarginLeft) + 'px'\n        }),attrs:{\"id\":this.plotElemID}}),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(this.highlightX1 !== null),expression:\"this.highlightX1 !== null\"}],staticClass:\"vdp-plot-highlight\",style:({\n            'height': (this.pHeight) + 'px', \n            'width': '1px',\n            'top': (this.pMarginTop) + 'px',\n            'left': (this.pMarginLeft + this.highlightX1 - 0.5) + 'px'\n        })}),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(this.highlightX2 !== null),expression:\"this.highlightX2 !== null\"}],staticClass:\"vdp-plot-highlight\",style:({\n            'display': (_vm.showHighlight ? 'inline-block' : 'none'),\n            'height': (this.pHeight) + 'px', \n            'width': '1px',\n            'top': (this.pMarginTop) + 'px',\n            'left': (this.pMarginLeft + this.highlightX2 - 0.5) + 'px'\n        })}),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(this.highlightY1 !== null),expression:\"this.highlightY1 !== null\"}],staticClass:\"vdp-plot-highlight\",style:({\n            'display': (_vm.showHighlight ? 'inline-block' : 'none'),\n            'height': '1px',\n            'width': (this.pWidth) + 'px', \n            'top': (this.pMarginTop + this.highlightY1 - 0.5) + 'px',\n            'left': (this.pMarginLeft) + 'px'\n        })}),_c('div',{staticClass:\"vdp-tooltip\",style:(this.tooltipPositionAttribute),attrs:{\"id\":this.tooltipElemID}},[_c('table',[_c('tr',[_c('th',[_vm._v(_vm._s(this._xScale.name))]),_c('td',[_vm._v(_vm._s(this.tooltipInfo.x))])]),_c('tr',[_c('th',[_vm._v(\"Count\")]),_c('td',[_vm._v(_vm._s(this.tooltipInfo.count))])]),_c('tr',[_c('th',[_vm._v(\"Min\")]),_c('td',[_vm._v(_vm._s(this.tooltipInfo.min))])]),_c('tr',[_c('th',[_vm._v(\"Q1\")]),_c('td',[_vm._v(_vm._s(this.tooltipInfo.q1))])]),_c('tr',[_c('th',[_vm._v(\"Median\")]),_c('td',[_vm._v(_vm._s(this.tooltipInfo.median))])]),_c('tr',[_c('th',[_vm._v(\"Mean\")]),_c('td',[_vm._v(_vm._s(this.tooltipInfo.mean))])]),_c('tr',[_c('th',[_vm._v(\"Q3\")]),_c('td',[_vm._v(_vm._s(this.tooltipInfo.q3))])]),_c('tr',[_c('th',[_vm._v(\"Max\")]),_c('td',[_vm._v(_vm._s(this.tooltipInfo.max))])])]),_c('table',{style:({'border-top': '1px solid #cdcdcd'})},[_c('tr',[_c('th',[_vm._v(_vm._s(this._oScale.name))]),_c('td',[_vm._v(_vm._s(this.tooltipInfo.o))])]),_c('tr',[_c('th',[_vm._v(_vm._s(this._yScale.name))]),_c('td',[_vm._v(_vm._s(this.tooltipInfo.y))])])])])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <div>\n        <canvas \n            :id=\"this.plotElemID\" \n            class=\"vdp-plot\" \n            :style=\"{\n                'height': (this.pHeight) + 'px', \n                'width': (this.pWidth) + 'px',\n                'top': (this.pMarginTop) + 'px',\n                'left': (this.pMarginLeft) + 'px'\n            }\"\n        ></canvas>\n        <div v-show=\"this.highlightX1 !== null\"\n            :style=\"{\n                'height': (this.pHeight) + 'px', \n                'width': '1px',\n                'top': (this.pMarginTop) + 'px',\n                'left': (this.pMarginLeft + this.highlightX1 - 0.5) + 'px'\n            }\"\n            class=\"vdp-plot-highlight\"\n        ></div>\n        <div v-show=\"this.highlightX2 !== null\"\n            :style=\"{\n                'display': (showHighlight ? 'inline-block' : 'none'),\n                'height': (this.pHeight) + 'px', \n                'width': '1px',\n                'top': (this.pMarginTop) + 'px',\n                'left': (this.pMarginLeft + this.highlightX2 - 0.5) + 'px'\n            }\"\n            class=\"vdp-plot-highlight\"\n        ></div>\n        <div v-show=\"this.highlightY1 !== null\"\n            :style=\"{\n                'display': (showHighlight ? 'inline-block' : 'none'),\n                'height': '1px',\n                'width': (this.pWidth) + 'px', \n                'top': (this.pMarginTop + this.highlightY1 - 0.5) + 'px',\n                'left': (this.pMarginLeft) + 'px'\n            }\"\n            class=\"vdp-plot-highlight\"\n        ></div>\n        <div :id=\"this.tooltipElemID\" class=\"vdp-tooltip\" :style=\"this.tooltipPositionAttribute\">\n            <table>\n                <tr>\n                    <th>{{ this._xScale.name }}</th>\n                    <td>{{ this.tooltipInfo.x }}</td>\n                </tr>\n                <tr>\n                    <th>Count</th>\n                    <td>{{ this.tooltipInfo.count }}</td>\n                </tr>\n                <tr>\n                    <th>Min</th>\n                    <td>{{ this.tooltipInfo.min }}</td>\n                </tr>\n                <tr>\n                    <th>Q1</th>\n                    <td>{{ this.tooltipInfo.q1 }}</td>\n                </tr>\n                <tr>\n                    <th>Median</th>\n                    <td>{{ this.tooltipInfo.median }}</td>\n                </tr>\n                <tr>\n                    <th>Mean</th>\n                    <td>{{ this.tooltipInfo.mean }}</td>\n                </tr>\n                <tr>\n                    <th>Q3</th>\n                    <td>{{ this.tooltipInfo.q3 }}</td>\n                </tr>\n                <tr>\n                    <th>Max</th>\n                    <td>{{ this.tooltipInfo.max }}</td>\n                </tr>\n            </table>\n            <table :style=\"{'border-top': '1px solid #cdcdcd'}\">\n                <tr>\n                    <th>{{ this._oScale.name }}</th>\n                    <td>{{ this.tooltipInfo.o }}</td>\n                </tr>\n                <tr>\n                    <th>{{ this._yScale.name }}</th>\n                    <td>{{ this.tooltipInfo.y }}</td>\n                </tr>\n            </table>\n        </div>\n    </div>\n</template>\n\n<script>\nimport Two from '../../two.js';\nimport { scaleLinear as d3_scaleLinear, scaleQuantile as d3_scaleQuantile, scaleBand as d3_scaleBand } from 'd3-scale';\nimport { select as d3_select } from 'd3-selection';\nimport { mouse as d3_mouse, event as d3_event } from 'd3';\nimport debounce from 'lodash/debounce';\nimport { min as d3_min, max as d3_max, mean as d3_mean, histogram as d3_histogram } from 'd3-array';\n\nimport { TOOLTIP_DEBOUNCE } from './../../constants.js';\nimport { seededRandom, getDelaunay } from './../../helpers.js';\n\n\nimport AbstractScale from './../../scales/AbstractScale.js';\nimport CategoricalScale from './../../scales/CategoricalScale.js';\nimport ContinuousScale from './../../scales/ContinuousScale.js';\n\n\nimport DataContainer from './../../data/DataContainer.js';\n\nimport mixin from './mixin.js';\n\nlet uuid = 0;\n/**\n * @prop {string} variable The key to access the values in the data array objects.\n * @prop {string} s The key for the data containing the variable to stratify by.\n * @prop {string} x The key for the scale to stratify by. Must be categorical.\n * @prop {string} y The y-scale variable key.\n * @prop {string} o The observation-scale variable key. Required in order to match with the stratification data.\n * @prop {number} pointSize The diameter of points. Default: 3\n * @prop {number} seed A random seed. Optional.\n * @prop {boolean} fillPoints Whether to fill points. Default: true\n * @prop {string} strokeColor Color for point outlines. Optional. Will override the x color scale if provided.\n * @extends mixin\n * \n * @example\n * <StratifiedSinaPlot\n *      data=\"boxplot_data\"\n *      variable=\"COSMIC 1\"\n *      s=\"stratification_data\"\n *      y=\"exposure\"\n *      o=\"sample_id\"\n *      x=\"smoking_binary\"\n *      :pWidth=\"500\"\n *      :pHeight=\"300\"\n *      :pMarginTop=\"10\"\n *      :pMarginLeft=\"120\"\n *      :pMarginRight=\"10\"\n *      :pMarginBottom=\"150\"\n *      :getData=\"getData\"\n *      :getScale=\"getScale\"\n *      :clickHandler=\"myClickHandler\"\n * />\n */\nexport default {\n    name: 'StratifiedSinaPlot',\n    mixins: [mixin],\n    props: {\n        'variable': {\n            type: String\n        },\n        's': { // stratification data\n            type: String\n        },\n        'x': { // stratification variable scale\n            type: String\n        },\n        'y': {\n            type: String\n        },\n        'o': { // observation\n            type: String\n        },\n        'pointSize': {\n            type: Number,\n            default: 3\n        },\n        'seed': {\n            type: Number,\n            default: 1\n        },\n        'fillPoints': {\n            type: Boolean,\n            default: true\n        },\n        'strokeColor': {\n            type: String\n        }\n    },\n    data() {\n        return {\n            tooltipInfo: {\n                x: '',\n                count: '',\n                min: '',\n                q1: '',\n                median: '',\n                mean: '',\n                q3: '',\n                max: ''\n            },\n            highlightX1: null,\n            highlightX2: null,\n            highlightXScale: null,\n            highlightY1: null,\n            highlightYScale: null,\n            barWidth: 0\n        }\n    },\n    beforeCreate() {\n        this.uuid = this.$options.name + uuid.toString();\n        uuid += 1;\n    },\n    created() {\n        // Set data\n        this._dataContainer = this.getData(this.data);\n        console.assert(this._dataContainer instanceof DataContainer);\n\n        this._stratificationDataContainer = this.getData(this.s);\n        console.assert(this._stratificationDataContainer instanceof DataContainer);\n\n        // Set scale variables\n        this._yScale = this.getScale(this.y);\n        console.assert(this._yScale instanceof ContinuousScale);\n\n        this._xScale = this.getScale(this.x);\n        console.assert(this._xScale instanceof CategoricalScale);\n\n        this._oScale = this.getScale(this.o);\n        console.assert(this._oScale instanceof AbstractScale);\n\n\n        // Subscribe to event publishers here\n        this._yScale.onUpdate(this.uuid, this.drawPlot);\n        this._xScale.onUpdate(this.uuid, this.drawPlot);\n        this._oScale.onUpdate(this.uuid, this.drawPlot);\n        \n\n        // Subscribe to data mutations here\n        this._dataContainer.onUpdate(this.uuid, this.drawPlot);\n        this._stratificationDataContainer.onUpdate(this.uuid, this.drawPlot);\n\n        // Subscribe to highlights here\n        this._xScale.onHighlight(this.uuid, this.highlightX);\n        this._xScale.onHighlightDestroy(this.uuid, this.highlightDestroy);\n\n        this._yScale.onHighlight(this.uuid, this.highlightY);\n        this._yScale.onHighlightDestroy(this.uuid, this.highlightDestroy);\n\n    },\n    mounted() {\n        this.drawPlot();\n    },\n    beforeDestroy() {\n        // Unsubscribe to events\n        this._yScale.onUpdate(this.uuid, null);\n        this._xScale.onUpdate(this.uuid, null);\n        this._oScale.onUpdate(this.uuid, null);\n\n        // Unsubscribe to data mutations here\n        this._dataContainer.onUpdate(this.uuid, null);\n        this._stratificationDataContainer.onUpdate(this.uuid, null);\n\n        // Unsubscribe to highlights here\n        this._xScale.onHighlight(this.uuid, null);\n        this._xScale.onHighlightDestroy(this.uuid, null);\n\n        this._yScale.onHighlight(this.uuid, null);\n        this._yScale.onHighlightDestroy(this.uuid, null);\n    },\n    watch: {\n        pointSize() {\n            this.drawPlot();\n        },\n        fillPoints() {\n            this.drawPlot();\n        },\n        strokeColor() {\n            this.drawPlot();\n        }\n    },\n    methods: {\n        tooltip: function(mouseX, mouseY, node) {\n\n            this.tooltipInfo.o = this._oScale.toHuman(node.o);\n            this.tooltipInfo.y = this._yScale.toHuman(node.y);\n\n            let xNode = node.xNode;\n            // Set values\n            this.tooltipInfo.x = this._xScale.toHuman(xNode.x);\n            this.tooltipInfo.count = xNode.count;\n            this.tooltipInfo.min = xNode.min;\n            this.tooltipInfo.q1 = xNode.q1;\n            this.tooltipInfo.median = xNode.median;\n            this.tooltipInfo.mean = xNode.mean;\n            this.tooltipInfo.q3 = xNode.q3;\n            this.tooltipInfo.max = xNode.max;\n\n            // Set position\n            this.tooltipPosition.left = mouseX;\n            this.tooltipPosition.top = mouseY;\n\n            // Dispatch highlights\n            this._xScale.emitHighlight(xNode.x);\n            this._yScale.emitHighlight(node.y);\n            this._oScale.emitHighlight(node.o);\n        },\n        tooltipDestroy: function() {\n            this.tooltipHide();\n\n            // Destroy all highlights here\n            this._xScale.emitHighlightDestroy();\n            this._yScale.emitHighlightDestroy();\n            this._oScale.emitHighlightDestroy();\n        },\n        highlightX(value) {\n            if(this.highlightXScale) {\n                this.highlightX1 = this.highlightXScale(value);\n                this.highlightX2 = this.highlightXScale(value) + this.barWidth;\n            }\n        },\n        highlightY(value) {\n            if(this.highlightYScale) {\n                this.highlightY1 = this.highlightYScale(value);\n            }\n        },\n        highlightDestroy() {\n            this.highlightX1 = null;\n            this.highlightX2 = null;\n            this.highlightY1 = null;\n        },\n        drawPlot(d3Node) {\n            const vm = this;\n\n            if(vm._dataContainer.isLoading || vm._stratificationDataContainer.isLoading || vm._xScale.isLoading || vm._yScale.isLoading || vm._oScale.isLoading) {\n                return;\n            }\n            \n            let data = this._dataContainer.dataCopy;\n            let stratificationData = this._stratificationDataContainer.dataCopy;\n\n            const xScale = vm._xScale;\n            const yScale = vm._yScale;\n\n            const oScale = vm._oScale;\n            data = data.filter((el) => oScale.domainFiltered.includes(el[vm.o]));\n            \n\n            const x = d3_scaleBand()\n                .domain(xScale.domainFiltered)\n                .range([0, vm.pWidth]);\n\n            vm.highlightXScale = x;\n            \n            const y = d3_scaleLinear()\n                .domain(yScale.domainFiltered)\n                .range([vm.pHeight, 0]);\n\n            vm.highlightYScale = y;\n\n            const barWidth = vm.pWidth / xScale.domainFiltered.length;\n            vm.barWidth = barWidth;\n            \n            /*\n             * Scale up the canvas\n             */\n            let canvas;\n            if(d3Node) {\n                canvas = d3Node;\n            } else {\n                canvas = d3_select(this.plotSelector);\n            }\n\n            const canvasNode = canvas.node();\n\n            if(!canvasNode) {\n                return;\n            }\n\n            const two = new Two({ \n                width: vm.pWidth, \n                height: vm.pHeight, \n                domElement: canvasNode\n            });\n\n            /*\n             * Get the random number generator.\n             */\n            const random = seededRandom(vm.seed);\n\n            /*\n             * Prepare for interactivity\n             */\n            const points = [];\n            const pointsData = [];\n\n            /*\n             * Draw the boxes\n             */\n\n            const boxWidth = (barWidth / 2);\n            const boxMargin = barWidth / 4;\n\n            xScale.domainFiltered.forEach((boxVar) => {\n                let boxData = data.filter((dEl) => {\n                    let sEl = stratificationData.find((sEl) => sEl[vm.o] === dEl[vm.o]);\n                    return (sEl !== undefined && sEl[vm.x] === boxVar);\n                });\n                let boxDataValues = boxData.map((el) => el[vm.variable] || 0);\n                let quantile = d3_scaleQuantile()\n                    .domain(boxDataValues)\n                    .range([0, 1, 2, 3]);\n                \n                let quartiles = quantile.quantiles();\n                \n                let q1 = quartiles[0];\n                let median = quartiles[1];\n                let mean = d3_mean(boxDataValues);\n                let q3 = quartiles[2];\n                \n                let boxX1 = x(boxVar) + boxMargin;\n                let boxX2 = boxX1 + boxWidth;\n\n                // Draw the points\n                let histogram = d3_histogram()\n                    .domain(yScale.domainFiltered)\n                    .value((d) => d[vm.variable] || 0);\n                \n                let bins = histogram(boxData);\n                let maxBinLength = d3_max(bins, (d) => d.length);\n                let innerX = d3_scaleLinear().domain([-maxBinLength, maxBinLength]).range([boxX1, boxX2]);\n                let innerXZero = innerX(0);\n\n                let xNode = {\n                    x: boxVar,\n                    count: boxDataValues.length,\n                    min: d3_min(boxDataValues), \n                    q1: q1,\n                    median: median,\n                    mean: mean,\n                    q3: q3, \n                    max: d3_max(boxDataValues)\n                };\n\n                bins.forEach((binData) => {\n                    binData.forEach((d) => {\n                        const xVal = innerX(-binData.length)+random()*2*(innerX(binData.length)-innerXZero);\n                        const yVal = y(d[vm.variable]);\n                        \n                        const circle = two.makeCircle(xVal, yVal, vm.pointSize);\n                        circle.stroke = (vm.strokeColor ? vm.strokeColor : xScale.color(boxVar));\n                        circle.fill = xScale.color(boxVar);\n                        circle.linewidth = 0.5;\n\n                        if(!vm.fillPoints) {\n                            circle.noFill();\n                        }\n\n\n                        points.push([xVal, yVal]); // For Delaunay\n                        pointsData.push({\n                            'xNode': xNode,\n                            'y': d[vm.variable],\n                            'o': d[vm.o]\n                        });\n                    });\n                });\n            });\n\n            two.update();\n\n            if(d3Node) {\n                /* Ignore interactivity if SVG was passed in (for download). */\n                return;\n            }\n            \n            const delaunay = getDelaunay(points, false);\n\n            /*\n             * Listen for mouse events\n             */\n            const getDataFromMouse = (mouseX, mouseY) => {\n                const i = delaunay.find(mouseX, mouseY);\n                return pointsData[i];\n            };\n\n            const debouncedTooltipDestroy = debounce(vm.tooltipDestroy, TOOLTIP_DEBOUNCE);\n            canvas.on(\"mousemove\", () => {\n                const mouse = d3_mouse(canvasNode);\n                const mouseX = mouse[0];\n                const mouseY = mouse[1];\n\n                const node = getDataFromMouse(mouseX, mouseY);\n\n                const mouseViewportX = d3_event.clientX;\n                const mouseViewportY = d3_event.clientY;\n\n                if(node) {\n                    vm.tooltip(mouseViewportX, mouseViewportY, node); \n                } else {\n                    debouncedTooltipDestroy();\n                }\n            })\n            .on(\"mouseleave\", vm.tooltipDestroy);\n\n            if(vm.clickHandler !== undefined) {\n                canvas.on(\"click\", () => {\n                    const mouse = d3_mouse(canvasNode);\n                    const mouseX = mouse[0];\n                    const mouseY = mouse[1];\n\n                    const node = getDataFromMouse(mouseX, mouseY);\n\n                    if(node) {\n                        vm.clickHandler(node['o'], node['y'], node['xNode']['x']);\n                    }\n                });\n            }\n            \n        }\n    }\n}\n</script>\n\n<style>\n@import '../../style/plot-style.css';\n</style>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./StratifiedSinaPlot.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./StratifiedSinaPlot.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./StratifiedSinaPlot.vue?vue&type=template&id=2e6facdb&\"\nimport script from \"./StratifiedSinaPlot.vue?vue&type=script&lang=js&\"\nexport * from \"./StratifiedSinaPlot.vue?vue&type=script&lang=js&\"\nimport style0 from \"./StratifiedSinaPlot.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('canvas',{staticClass:\"vdp-plot\",style:({\n            'height': (this.pHeight) + 'px', \n            'width': (this.pWidth) + 'px',\n            'top': (this.pMarginTop) + 'px',\n            'left': (this.pMarginLeft) + 'px'\n        }),attrs:{\"id\":this.plotElemID}}),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(this.highlightX1 !== null),expression:\"this.highlightX1 !== null\"}],staticClass:\"vdp-plot-highlight\",style:({\n            'height': (this.pHeight) + 'px', \n            'width': '1px',\n            'top': (this.pMarginTop) + 'px',\n            'left': (this.pMarginLeft + this.highlightX1 - 0.5) + 'px'\n        })}),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(this.highlightX2 !== null),expression:\"this.highlightX2 !== null\"}],staticClass:\"vdp-plot-highlight\",style:({\n            'display': (_vm.showHighlight ? 'inline-block' : 'none'),\n            'height': (this.pHeight) + 'px', \n            'width': '1px',\n            'top': (this.pMarginTop) + 'px',\n            'left': (this.pMarginLeft + this.highlightX2 - 0.5) + 'px'\n        })}),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(this.highlightX1Secondary !== null),expression:\"this.highlightX1Secondary !== null\"}],staticClass:\"vdp-plot-highlight\",style:({\n            'height': (this.pHeight) + 'px', \n            'width': '1px',\n            'top': (this.pMarginTop) + 'px',\n            'left': (this.pMarginLeft + this.highlightX1Secondary- 0.5) + 'px'\n        })}),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(this.highlightX2Secondary !== null),expression:\"this.highlightX2Secondary !== null\"}],staticClass:\"vdp-plot-highlight\",style:({\n            'display': (_vm.showHighlight ? 'inline-block' : 'none'),\n            'height': (this.pHeight) + 'px', \n            'width': '1px',\n            'top': (this.pMarginTop) + 'px',\n            'left': (this.pMarginLeft + this.highlightX2Secondary - 0.5) + 'px'\n        })}),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(this.highlightY1 !== null),expression:\"this.highlightY1 !== null\"}],staticClass:\"vdp-plot-highlight\",style:({\n            'display': (_vm.showHighlight ? 'inline-block' : 'none'),\n            'height': '1px',\n            'width': (this.pWidth) + 'px', \n            'top': (this.pMarginTop + this.highlightY1 - 0.5) + 'px',\n            'left': (this.pMarginLeft) + 'px'\n        })}),_c('div',{staticClass:\"vdp-tooltip\",style:(this.tooltipPositionAttribute),attrs:{\"id\":this.tooltipElemID}},[_c('table',[_c('tr',[_c('th',[_vm._v(_vm._s(this._xScale.name))]),_c('td',[_vm._v(_vm._s(this.tooltipInfo.x))])]),_c('tr',[_c('th',[_vm._v(_vm._s(this._x2Scale.name))]),_c('td',[_vm._v(_vm._s(this.tooltipInfo.x2))])]),_c('tr',[_c('th',[_vm._v(\"Count\")]),_c('td',[_vm._v(_vm._s(this.tooltipInfo.count))])]),_c('tr',[_c('th',[_vm._v(\"Min\")]),_c('td',[_vm._v(_vm._s(this.tooltipInfo.min))])]),_c('tr',[_c('th',[_vm._v(\"Q1\")]),_c('td',[_vm._v(_vm._s(this.tooltipInfo.q1))])]),_c('tr',[_c('th',[_vm._v(\"Median\")]),_c('td',[_vm._v(_vm._s(this.tooltipInfo.median))])]),_c('tr',[_c('th',[_vm._v(\"Mean\")]),_c('td',[_vm._v(_vm._s(this.tooltipInfo.mean))])]),_c('tr',[_c('th',[_vm._v(\"Q3\")]),_c('td',[_vm._v(_vm._s(this.tooltipInfo.q3))])]),_c('tr',[_c('th',[_vm._v(\"Max\")]),_c('td',[_vm._v(_vm._s(this.tooltipInfo.max))])])]),_c('table',{style:({'border-top': '1px solid #cdcdcd'})},[_c('tr',[_c('th',[_vm._v(_vm._s(this._oScale.name))]),_c('td',[_vm._v(_vm._s(this.tooltipInfo.o))])]),_c('tr',[_c('th',[_vm._v(_vm._s(this._yScale.name))]),_c('td',[_vm._v(_vm._s(this.tooltipInfo.y))])])])])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <div>\n        <canvas \n            :id=\"this.plotElemID\" \n            class=\"vdp-plot\" \n            :style=\"{\n                'height': (this.pHeight) + 'px', \n                'width': (this.pWidth) + 'px',\n                'top': (this.pMarginTop) + 'px',\n                'left': (this.pMarginLeft) + 'px'\n            }\"\n        ></canvas>\n        <div v-show=\"this.highlightX1 !== null\"\n            :style=\"{\n                'height': (this.pHeight) + 'px', \n                'width': '1px',\n                'top': (this.pMarginTop) + 'px',\n                'left': (this.pMarginLeft + this.highlightX1 - 0.5) + 'px'\n            }\"\n            class=\"vdp-plot-highlight\"\n        ></div>\n        <div v-show=\"this.highlightX2 !== null\"\n            :style=\"{\n                'display': (showHighlight ? 'inline-block' : 'none'),\n                'height': (this.pHeight) + 'px', \n                'width': '1px',\n                'top': (this.pMarginTop) + 'px',\n                'left': (this.pMarginLeft + this.highlightX2 - 0.5) + 'px'\n            }\"\n            class=\"vdp-plot-highlight\"\n        ></div>\n        <div v-show=\"this.highlightX1Secondary !== null\"\n            :style=\"{\n                'height': (this.pHeight) + 'px', \n                'width': '1px',\n                'top': (this.pMarginTop) + 'px',\n                'left': (this.pMarginLeft + this.highlightX1Secondary- 0.5) + 'px'\n            }\"\n            class=\"vdp-plot-highlight\"\n        ></div>\n        <div v-show=\"this.highlightX2Secondary !== null\"\n            :style=\"{\n                'display': (showHighlight ? 'inline-block' : 'none'),\n                'height': (this.pHeight) + 'px', \n                'width': '1px',\n                'top': (this.pMarginTop) + 'px',\n                'left': (this.pMarginLeft + this.highlightX2Secondary - 0.5) + 'px'\n            }\"\n            class=\"vdp-plot-highlight\"\n        ></div>\n        <div v-show=\"this.highlightY1 !== null\"\n            :style=\"{\n                'display': (showHighlight ? 'inline-block' : 'none'),\n                'height': '1px',\n                'width': (this.pWidth) + 'px', \n                'top': (this.pMarginTop + this.highlightY1 - 0.5) + 'px',\n                'left': (this.pMarginLeft) + 'px'\n            }\"\n            class=\"vdp-plot-highlight\"\n        ></div>\n        <div :id=\"this.tooltipElemID\" class=\"vdp-tooltip\" :style=\"this.tooltipPositionAttribute\">\n            <table>\n                <tr>\n                    <th>{{ this._xScale.name }}</th>\n                    <td>{{ this.tooltipInfo.x }}</td>\n                </tr>\n                <tr>\n                    <th>{{ this._x2Scale.name }}</th>\n                    <td>{{ this.tooltipInfo.x2 }}</td>\n                </tr>\n                <tr>\n                    <th>Count</th>\n                    <td>{{ this.tooltipInfo.count }}</td>\n                </tr>\n                <tr>\n                    <th>Min</th>\n                    <td>{{ this.tooltipInfo.min }}</td>\n                </tr>\n                <tr>\n                    <th>Q1</th>\n                    <td>{{ this.tooltipInfo.q1 }}</td>\n                </tr>\n                <tr>\n                    <th>Median</th>\n                    <td>{{ this.tooltipInfo.median }}</td>\n                </tr>\n                <tr>\n                    <th>Mean</th>\n                    <td>{{ this.tooltipInfo.mean }}</td>\n                </tr>\n                <tr>\n                    <th>Q3</th>\n                    <td>{{ this.tooltipInfo.q3 }}</td>\n                </tr>\n                <tr>\n                    <th>Max</th>\n                    <td>{{ this.tooltipInfo.max }}</td>\n                </tr>\n            </table>\n            <table :style=\"{'border-top': '1px solid #cdcdcd'}\">\n                <tr>\n                    <th>{{ this._oScale.name }}</th>\n                    <td>{{ this.tooltipInfo.o }}</td>\n                </tr>\n                <tr>\n                    <th>{{ this._yScale.name }}</th>\n                    <td>{{ this.tooltipInfo.y }}</td>\n                </tr>\n            </table>\n        </div>\n    </div>\n</template>\n\n<script>\nimport Two from '../../two.js';\nimport { scaleLinear as d3_scaleLinear, scaleQuantile as d3_scaleQuantile, scaleBand as d3_scaleBand } from 'd3-scale';\nimport { select as d3_select } from 'd3-selection';\nimport { mouse as d3_mouse, event as d3_event } from 'd3';\nimport debounce from 'lodash/debounce';\nimport { min as d3_min, max as d3_max, mean as d3_mean, histogram as d3_histogram } from 'd3-array';\n\nimport { TOOLTIP_DEBOUNCE } from './../../constants.js';\nimport { seededRandom, getDelaunay } from './../../helpers.js';\n\n\nimport AbstractScale from './../../scales/AbstractScale.js';\nimport CategoricalScale from './../../scales/CategoricalScale.js';\nimport ContinuousScale from './../../scales/ContinuousScale.js';\n\n\nimport DataContainer from './../../data/DataContainer.js';\n\nimport mixin from './mixin.js';\n\nlet uuid = 0;\n/**\n * @prop {string} variable The key to access the values in the data array objects.\n * @prop {string} s The key for the data containing the variable to stratify by.\n * @prop {string} x The key for the scale to stratify by. Must be categorical.\n * @prop {string} s2 The key for the data containing the secondary variable to stratify by.\n * @prop {string} x2 The key for the secondary scale to stratify by. Must be categorical.\n * @prop {string} y The y-scale variable key.\n * @prop {string} o The observation-scale variable key. Required in order to match with the stratification data.\n * @prop {number} pointSize The diameter of points. Default: 3\n * @prop {number} seed A random seed. Optional.\n * @prop {boolean} fillPoints Whether to fill points. Default: true\n * @prop {string} strokeColor Color for point outlines. Optional. Will override the x color scale if provided.\n * @extends mixin\n * \n * @example\n * <DoubleStratifiedSinaPlot\n *      data=\"boxplot_data\"\n *      variable=\"COSMIC 1\"\n *      s=\"stratification_data\"\n *      x=\"smoking_binary\"\n *      s2=\"stratification_data\"\n *      x2=\"sex\"\n *      y=\"exposure\"\n *      o=\"sample_id\"\n *      :pWidth=\"500\"\n *      :pHeight=\"300\"\n *      :pMarginTop=\"10\"\n *      :pMarginLeft=\"120\"\n *      :pMarginRight=\"10\"\n *      :pMarginBottom=\"150\"\n *      :getData=\"getData\"\n *      :getScale=\"getScale\"\n *      :clickHandler=\"myClickHandler\"\n * />\n */\nexport default {\n    name: 'DoubleStratifiedSinaPlot',\n    mixins: [mixin],\n    props: {\n        'variable': {\n            type: String\n        },\n        's': { // stratification data\n            type: String\n        },\n        'x': { // stratification variable scale\n            type: String\n        },\n        's2': { // stratification data 2\n            type: String\n        },\n        'x2': { // stratification variable scale 2\n            type: String\n        },\n        'y': {\n            type: String\n        },\n        'o': { // observation\n            type: String\n        },\n        'pointSize': {\n            type: Number,\n            default: 3\n        },\n        'seed': {\n            type: Number,\n            default: 1\n        },\n        'fillPoints': {\n            type: Boolean,\n            default: true\n        },\n        'strokeColor': {\n            type: String\n        }\n    },\n    data() {\n        return {\n            tooltipInfo: {\n                x: '',\n                x2: '',\n                count: '',\n                min: '',\n                q1: '',\n                median: '',\n                mean: '',\n                q3: '',\n                max: ''\n            },\n            highlightX1: null,\n            highlightX2: null,\n            highlightXScale: null,\n            highlightX1Secondary: null,\n            highlightX2Secondary: null,\n            highlightXScaleSecondary: null,\n            highlightXScaleSecondaryAll: null,\n            highlightY1: null,\n            highlightYScale: null,\n            barWidth: 0,\n            barWidthSecondary: 0\n        }\n    },\n    beforeCreate() {\n        this.uuid = this.$options.name + uuid.toString();\n        uuid += 1;\n    },\n    created() {\n        // Set data\n        this._dataContainer = this.getData(this.data);\n        console.assert(this._dataContainer instanceof DataContainer);\n\n        this._stratificationDataContainer = this.getData(this.s);\n        console.assert(this._stratificationDataContainer instanceof DataContainer);\n\n        this._stratificationDataContainer2 = this.getData(this.s2);\n        console.assert(this._stratificationDataContainer2 instanceof DataContainer);\n\n        // Set scale variables\n        this._yScale = this.getScale(this.y);\n        console.assert(this._yScale instanceof ContinuousScale);\n\n        this._xScale = this.getScale(this.x);\n        console.assert(this._xScale instanceof CategoricalScale);\n\n        this._x2Scale = this.getScale(this.x2);\n        console.assert(this._x2Scale instanceof CategoricalScale);\n\n        this._oScale = this.getScale(this.o);\n        console.assert(this._oScale instanceof AbstractScale);\n\n\n        // Subscribe to event publishers here\n        this._yScale.onUpdate(this.uuid, this.drawPlot);\n        this._xScale.onUpdate(this.uuid, this.drawPlot);\n        this._x2Scale.onUpdate(this.uuid, this.drawPlot);\n        this._oScale.onUpdate(this.uuid, this.drawPlot);\n        \n\n        // Subscribe to data mutations here\n        this._dataContainer.onUpdate(this.uuid, this.drawPlot);\n        this._stratificationDataContainer.onUpdate(this.uuid, this.drawPlot);\n        this._stratificationDataContainer2.onUpdate(this.uuid, this.drawPlot);\n\n        // Subscribe to highlights here\n        this._xScale.onHighlight(this.uuid, this.highlightX);\n        this._xScale.onHighlightDestroy(this.uuid, this.highlightDestroy);\n\n        this._x2Scale.onHighlight(this.uuid, this.highlightXSecondary);\n        this._x2Scale.onHighlightDestroy(this.uuid, this.highlightDestroy);\n\n        this._yScale.onHighlight(this.uuid, this.highlightY);\n        this._yScale.onHighlightDestroy(this.uuid, this.highlightDestroy);\n\n    },\n    mounted() {\n        this.drawPlot();\n    },\n    beforeDestroy() {\n        // Unsubscribe to events\n        this._yScale.onUpdate(this.uuid, null);\n        this._xScale.onUpdate(this.uuid, null);\n        this._x2Scale.onUpdate(this.uuid, null);\n        this._oScale.onUpdate(this.uuid, null);\n\n        // Unsubscribe to data mutations here\n        this._dataContainer.onUpdate(this.uuid, null);\n        this._stratificationDataContainer.onUpdate(this.uuid, null);\n        this._stratificationDataContainer2.onUpdate(this.uuid, null);\n\n        // Unsubscribe to highlights here\n        this._xScale.onHighlight(this.uuid, null);\n        this._xScale.onHighlightDestroy(this.uuid, null);\n\n        this._x2Scale.onHighlight(this.uuid, null);\n        this._x2Scale.onHighlightDestroy(this.uuid, null);\n\n        this._yScale.onHighlight(this.uuid, null);\n        this._yScale.onHighlightDestroy(this.uuid, null);\n    },\n    watch: {\n        pointSize() {\n            this.drawPlot();\n        },\n        fillPoints() {\n            this.drawPlot();\n        },\n        strokeColor() {\n            this.drawPlot();\n        }\n    },\n    methods: {\n        tooltip: function(mouseX, mouseY, node) {\n\n            this.tooltipInfo.o = this._oScale.toHuman(node.o);\n            this.tooltipInfo.y = this._yScale.toHuman(node.y);\n\n            let xNode = node.xNode;\n            // Set values\n            this.tooltipInfo.x = this._xScale.toHuman(xNode.x);\n            this.tooltipInfo.x2 = this._xScale.toHuman(xNode.x2);\n            this.tooltipInfo.count = xNode.count;\n            this.tooltipInfo.min = xNode.min;\n            this.tooltipInfo.q1 = xNode.q1;\n            this.tooltipInfo.median = xNode.median;\n            this.tooltipInfo.mean = xNode.mean;\n            this.tooltipInfo.q3 = xNode.q3;\n            this.tooltipInfo.max = xNode.max;\n\n            // Set position\n            this.tooltipPosition.left = mouseX;\n            this.tooltipPosition.top = mouseY;\n\n            this.highlightXScaleSecondary = this.highlightXScaleSecondaryAll[xNode.xi];\n\n            // Dispatch highlights\n            this._xScale.emitHighlight(xNode.x);\n            this._x2Scale.emitHighlight(xNode.x2);\n            this._yScale.emitHighlight(node.y);\n            this._oScale.emitHighlight(node.o);\n        },\n        tooltipDestroy: function() {\n            this.tooltipHide();\n\n            // Destroy all highlights here\n            this._xScale.emitHighlightDestroy();\n            this._x2Scale.emitHighlightDestroy();\n            this._yScale.emitHighlightDestroy();\n            this._oScale.emitHighlightDestroy();\n        },\n        highlightX(value) {\n            if(this.highlightXScale) {\n                this.highlightX1 = this.highlightXScale(value);\n                this.highlightX2 = this.highlightXScale(value) + this.barWidth;\n            }\n        },\n        highlightXSecondary(value) {\n            if(this.highlightXScaleSecondary) {\n                this.highlightX1Secondary = this.highlightXScaleSecondary(value);\n                this.highlightX2Secondary = this.highlightXScaleSecondary(value) + this.barWidthSecondary;\n            }\n        },\n        highlightY(value) {\n            if(this.highlightYScale) {\n                this.highlightY1 = this.highlightYScale(value);\n            }\n        },\n        highlightDestroy() {\n            this.highlightX1 = null;\n            this.highlightX2 = null;\n            this.highlightX1Secondary = null;\n            this.highlightX2Secondary = null;\n            this.highlightY1 = null;\n        },\n        drawPlot(d3Node) {\n            const vm = this;\n\n            if(vm._dataContainer.isLoading || vm._stratificationDataContainer.isLoading || vm._stratificationDataContainer2.isLoading || vm._xScale.isLoading || vm._x2Scale.isLoading || vm._yScale.isLoading || vm._oScale.isLoading) {\n                return;\n            }\n            \n            let data = this._dataContainer.dataCopy;\n            let stratificationData = this._stratificationDataContainer.dataCopy;\n            let stratificationData2 = this._stratificationDataContainer2.dataCopy;\n\n            const xScale = vm._xScale;\n            const x2Scale = vm._x2Scale;\n            const yScale = vm._yScale;\n\n            const oScale = vm._oScale;\n            data = data.filter((el) => oScale.domainFiltered.includes(el[vm.o]));\n            \n\n            const x = d3_scaleBand()\n                .domain(xScale.domainFiltered)\n                .range([0, vm.pWidth]);\n\n            const x2AxisWidth = vm.pWidth / xScale.domainFiltered.length;\n            const x2 = xScale.domainFiltered.map((xEl, i) => {\n                return d3_scaleBand()\n                    .domain(x2Scale.domainFiltered)\n                    .range([i*x2AxisWidth, (i+1)*x2AxisWidth]);\n            });\n\n            vm.highlightXScale = x;\n            vm.highlightXScaleSecondaryAll = x2;\n            \n            const y = d3_scaleLinear()\n                .domain(yScale.domainFiltered)\n                .range([vm.pHeight, 0]);\n\n            vm.highlightYScale = y;\n\n            const barWidth = vm.pWidth / xScale.domainFiltered.length;\n            vm.barWidth = barWidth;\n\n            const barWidthSecondary = barWidth / xScale.domainFiltered.length;\n            vm.barWidthSecondary = barWidthSecondary;\n            \n            /*\n             * Scale up the canvas\n             */\n            let canvas;\n            if(d3Node) {\n                canvas = d3Node;\n            } else {\n                canvas = d3_select(this.plotSelector);\n            }\n\n            const canvasNode = canvas.node();\n\n            if(!canvasNode) {\n                return;\n            }\n\n            const two = new Two({ \n                width: vm.pWidth, \n                height: vm.pHeight, \n                domElement: canvasNode\n            });\n\n            /*\n             * Get the random number generator.\n             */\n            const random = seededRandom(vm.seed);\n\n            /*\n             * Prepare for interactivity\n             */\n            const points = [];\n            const pointsData = [];\n\n            /*\n             * Draw the boxes\n             */\n\n            const boxWidth = (barWidthSecondary / 2);\n            const boxMargin = barWidthSecondary / 4;\n\n            xScale.domainFiltered.forEach((boxVar, xi) => {\n                x2Scale.domainFiltered.forEach((boxVarSecondary) => {\n                    const x = x2[xi];\n\n                    let boxData = data.filter((dEl) => {\n                        let sEl = stratificationData.find((sEl) => sEl[vm.o] === dEl[vm.o]);\n                        let sEl2 = stratificationData2.find((sEl) => sEl[vm.o] === dEl[vm.o]);\n                        return (sEl !== undefined && sEl2 !== undefined && sEl[vm.x] === boxVar && sEl[vm.x2] === boxVarSecondary);\n                    });\n                    let boxDataValues = boxData.map((el) => el[vm.variable] || 0);\n                    let quantile = d3_scaleQuantile()\n                        .domain(boxDataValues)\n                        .range([0, 1, 2, 3]);\n                    \n                    let quartiles = quantile.quantiles();\n                    \n                    let q1 = quartiles[0];\n                    let median = quartiles[1];\n                    let mean = d3_mean(boxDataValues);\n                    let q3 = quartiles[2];\n                    \n                    let boxX1 = x(boxVarSecondary) + boxMargin;\n                    let boxX2 = boxX1 + boxWidth;\n\n                    // Draw the points\n                    let histogram = d3_histogram()\n                        .domain(yScale.domainFiltered)\n                        .value((d) => d[vm.variable] || 0);\n                    \n                    let bins = histogram(boxData);\n                    let maxBinLength = d3_max(bins, (d) => d.length);\n                    let innerX = d3_scaleLinear().domain([-maxBinLength, maxBinLength]).range([boxX1, boxX2]);\n                    let innerXZero = innerX(0);\n\n                    let xNode = {\n                        x: boxVar,\n                        xi: xi,\n                        x2: boxVarSecondary,\n                        count: boxDataValues.length,\n                        min: d3_min(boxDataValues), \n                        q1: q1,\n                        median: median,\n                        mean: mean,\n                        q3: q3, \n                        max: d3_max(boxDataValues)\n                    };\n\n                    bins.forEach((binData) => {\n                        binData.forEach((d) => {\n                            let xVal = innerX(-binData.length)+random()*2*(innerX(binData.length)-innerXZero);\n                            let yVal = y(d[vm.variable]);\n                            const circle = two.makeCircle(xVal, yVal, vm.pointSize);\n                            circle.linewidth = 0.5;\n                            if(vm.strokeColor !== undefined) {\n                                circle.stroke = vm.strokeColor;\n                            } else {\n                                circle.stroke = x2Scale.color(boxVarSecondary);\n                            }\n                            circle.fill = x2Scale.color(boxVarSecondary);\n                            if(!vm.fillPoints) {\n                                circle.noFill(); \n                            }\n\n                            points.push([xVal, yVal]); // For Delaunay\n                            pointsData.push({\n                                'xNode': xNode,\n                                'y': d[vm.variable],\n                                'o': d[vm.o]\n                            });\n                        });\n                    });\n                });\n            });\n\n            two.update();\n\n            if(d3Node) {\n                /* Ignore interactivity if SVG was passed in (for download). */\n                return;\n            }\n            \n\n            const delaunay = getDelaunay(points, false);\n\n            /*\n             * Listen for mouse events\n             */\n            const getDataFromMouse = (mouseX, mouseY) => {\n                const i = delaunay.find(mouseX, mouseY);\n                return pointsData[i];\n            };\n\n            const debouncedTooltipDestroy = debounce(vm.tooltipDestroy, TOOLTIP_DEBOUNCE);\n            canvas.on(\"mousemove\", () => {\n                const mouse = d3_mouse(canvasNode);\n                const mouseX = mouse[0];\n                const mouseY = mouse[1];\n\n                const node = getDataFromMouse(mouseX, mouseY);\n\n                const mouseViewportX = d3_event.clientX;\n                const mouseViewportY = d3_event.clientY;\n\n                if(node) {\n                    vm.tooltip(mouseViewportX, mouseViewportY, node); \n                } else {\n                    debouncedTooltipDestroy();\n                }\n            })\n            .on(\"mouseleave\", vm.tooltipDestroy);\n\n            if(vm.clickHandler !== undefined) {\n                canvas.on(\"click\", () => {\n                    const mouse = d3_mouse(canvasNode);\n                    const mouseX = mouse[0];\n                    const mouseY = mouse[1];\n\n                    const node = getDataFromMouse(mouseX, mouseY);\n\n                    if(node) {\n                        vm.clickHandler(node['o'], node['y'], node['xNode']['x'], node['xNode']['x2']);\n                    }\n                });\n            }\n            \n        }\n    }\n}\n</script>\n\n<style>\n@import '../../style/plot-style.css';\n</style>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./DoubleStratifiedSinaPlot.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./DoubleStratifiedSinaPlot.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./DoubleStratifiedSinaPlot.vue?vue&type=template&id=5c522bc5&\"\nimport script from \"./DoubleStratifiedSinaPlot.vue?vue&type=script&lang=js&\"\nexport * from \"./DoubleStratifiedSinaPlot.vue?vue&type=script&lang=js&\"\nimport style0 from \"./DoubleStratifiedSinaPlot.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('canvas',{staticClass:\"vdp-plot\",style:({\n            'height': (this.pHeight) + 'px', \n            'width': (this.pWidth) + 'px',\n            'top': (this.pMarginTop) + 'px',\n            'left': (this.pMarginLeft) + 'px'\n        }),attrs:{\"id\":this.plotElemID}}),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(this.highlightX1 !== null),expression:\"this.highlightX1 !== null\"}],staticClass:\"vdp-plot-highlight\",style:({\n            'height': (this.pHeight) + 'px', \n            'width': '1px',\n            'top': (this.pMarginTop) + 'px',\n            'left': (this.pMarginLeft + this.highlightX1 - 0.5) + 'px'\n        })}),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(this.highlightY1 !== null),expression:\"this.highlightY1 !== null\"}],staticClass:\"vdp-plot-highlight\",style:({\n            'display': (_vm.showHighlight ? 'inline-block' : 'none'),\n            'height': '1px',\n            'width': (this.pWidth) + 'px', \n            'top': (this.pMarginTop + this.highlightY1 - 0.5) + 'px',\n            'left': (this.pMarginLeft) + 'px'\n        })}),_c('div',{staticClass:\"vdp-tooltip\",style:(this.tooltipPositionAttribute),attrs:{\"id\":this.tooltipElemID}},[_c('table',[_c('tr',[_c('th',[_vm._v(_vm._s(this._oScale.name))]),_c('td',[_vm._v(_vm._s(this.tooltipInfo.o))])]),_c('tr',[_c('th',[_vm._v(_vm._s(this._cScale.name))]),_c('td',[_vm._v(_vm._s(this.tooltipInfo.c))])]),_c('tr',[_c('th',[_vm._v(_vm._s(this._xScale.name))]),_c('td',[_vm._v(_vm._s(this.tooltipInfo.x))])]),_c('tr',[_c('th',[_vm._v(_vm._s(this._yScale.name))]),_c('td',[_vm._v(_vm._s(this.tooltipInfo.y))])])])])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <div>\n        <canvas \n            :id=\"this.plotElemID\" \n            class=\"vdp-plot\" \n            :style=\"{\n                'height': (this.pHeight) + 'px', \n                'width': (this.pWidth) + 'px',\n                'top': (this.pMarginTop) + 'px',\n                'left': (this.pMarginLeft) + 'px'\n            }\"\n        ></canvas>\n        <div v-show=\"this.highlightX1 !== null\"\n            :style=\"{\n                'height': (this.pHeight) + 'px', \n                'width': '1px',\n                'top': (this.pMarginTop) + 'px',\n                'left': (this.pMarginLeft + this.highlightX1 - 0.5) + 'px'\n            }\"\n            class=\"vdp-plot-highlight\"\n        ></div>\n        <div v-show=\"this.highlightY1 !== null\"\n            :style=\"{\n                'display': (showHighlight ? 'inline-block' : 'none'),\n                'height': '1px',\n                'width': (this.pWidth) + 'px', \n                'top': (this.pMarginTop + this.highlightY1 - 0.5) + 'px',\n                'left': (this.pMarginLeft) + 'px'\n            }\"\n            class=\"vdp-plot-highlight\"\n        ></div>\n        <div :id=\"this.tooltipElemID\" class=\"vdp-tooltip\" :style=\"this.tooltipPositionAttribute\">\n            <table>\n                <tr>\n                    <th>{{ this._oScale.name }}</th>\n                    <td>{{ this.tooltipInfo.o }}</td>\n                </tr>\n                <tr>\n                    <th>{{ this._cScale.name }}</th>\n                    <td>{{ this.tooltipInfo.c }}</td>\n                </tr>\n                <tr>\n                    <th>{{ this._xScale.name }}</th>\n                    <td>{{ this.tooltipInfo.x }}</td>\n                </tr>\n                <tr>\n                    <th>{{ this._yScale.name }}</th>\n                    <td>{{ this.tooltipInfo.y }}</td>\n                </tr>\n            </table>\n        </div>\n    </div>\n</template>\n\n<script>\nimport Two from '../../two.js';\nimport { scaleLinear as d3_scaleLinear } from 'd3-scale';\nimport { select as d3_select } from 'd3-selection';\nimport { mouse as d3_mouse, event as d3_event } from 'd3';\nimport debounce from 'lodash/debounce';\nimport { TOOLTIP_DEBOUNCE } from './../../constants.js';\nimport { getDelaunay } from './../../helpers.js';\n\nimport AbstractScale from './../../scales/AbstractScale.js';\nimport ContinuousScale from './../../scales/ContinuousScale.js';\n\nimport DataContainer from './../../data/DataContainer.js';\n\nimport mixin from './mixin.js';\n\nlet uuid = 0;\n/**\n * @prop {string} deathVariable The survival \"days to death\" variable key. Default: \"days_to_death\"\n * @prop {string} followupVariable The survival \"days to last followup\" variable key. Default: \"days_to_last_followup\"\n * @prop {string} s The key for the data containing the variable to stratify by.\n * @prop {string} variable The key for the variable to stratify by in the s dataset.\n * @prop {string} c The color-scale (line-scale) variable key. Should contain the categories of the stratified variable. Must be categorical.\n * @prop {string} x The x-scale variable key. Should represent survival time. Must be continuous.\n * @prop {string} y The y-scale variable key. Should represent survival percentage. Must be continuous.\n * @prop {string} o The observation-scale variable key. Required in order to match the survival data with the stratification data.\n * @prop {number} lineWidth The line width. Default: 2\n * @prop {number} tickHeight The tick height. Default: 8\n * @extends mixin\n * \n * @example\n * <StratifiedKaplanMeierPlot\n *      data=\"survival_data\"\n *      s=\"dominant_signature_data\"\n *      variable=\"dominant_signature\"\n *      c=\"signatures\"\n *      x=\"survival_time\"\n *      y=\"survival_pct\"\n *      o=\"sample_id\"\n *      :pWidth=\"500\"\n *      :pHeight=\"300\"\n *      :pMarginTop=\"10\"\n *      :pMarginLeft=\"120\"\n *      :pMarginRight=\"10\"\n *      :pMarginBottom=\"150\"\n *      :getData=\"getData\"\n *      :getScale=\"getScale\"\n *      :clickHandler=\"myClickHandler\"\n * />\n */\nexport default {\n    name: 'StratifiedKaplanMeierPlot',\n    mixins: [mixin],\n    props: {\n        'deathVariable': {\n            type: String,\n            default: \"days_to_death\"\n        },\n        'followupVariable': {\n            type: String,\n            default: \"days_to_last_followup\"\n        },\n        's': { // stratification data\n            type: String\n        },\n        'variable': { // stratification variable\n            type: String\n        },\n        'c': { // stratification variable value scale - for the different lines (and line colors) on the plot\n            type: String\n        },\n        'x': { // survival time scale\n            type: String\n        },\n        'y': { // survival percentage scale\n            type: String\n        },\n        'o': { // observation\n            type: String\n        },\n        'lineWidth': {\n            type: Number,\n            default: 2\n        },\n        'tickHeight': {\n            type: Number,\n            default: 8\n        }\n    },\n    data() {\n        return {\n            tooltipInfo: {\n                x: '',\n                y: '',\n                o: '',\n                c: ''\n            },\n            highlightX1: null,\n            highlightY1: null,\n            highlightXScale: null,\n            highlightYScale: null\n        }\n    },\n    beforeCreate() {\n        this.uuid = this.$options.name + uuid.toString();\n        uuid += 1;\n    },\n    created() {\n        // Set data\n        this._dataContainer = this.getData(this.data);\n        console.assert(this._dataContainer instanceof DataContainer);\n\n        this._stratificationDataContainer = this.getData(this.s);\n        console.assert(this._stratificationDataContainer instanceof DataContainer);\n\n        // Set scale variables\n        this._yScale = this.getScale(this.y);\n        console.assert(this._yScale instanceof ContinuousScale);\n\n        this._xScale = this.getScale(this.x);\n        console.assert(this._xScale instanceof ContinuousScale);\n\n        this._oScale = this.getScale(this.o);\n        console.assert(this._oScale instanceof AbstractScale);\n\n        this._cScale = this.getScale(this.c);\n        console.assert(this._cScale instanceof AbstractScale);\n\n\n        // Subscribe to event publishers here\n        this._yScale.onUpdate(this.uuid, this.drawPlot);\n        this._xScale.onUpdate(this.uuid, this.drawPlot);\n        this._oScale.onUpdate(this.uuid, this.drawPlot);\n        this._cScale.onUpdate(this.uuid, this.drawPlot);\n        \n\n        // Subscribe to data mutations here\n        this._dataContainer.onUpdate(this.uuid, this.drawPlot);\n        this._stratificationDataContainer.onUpdate(this.uuid, this.drawPlot);\n\n        // Subscribe to highlights here\n        this._xScale.onHighlight(this.uuid, this.highlightX);\n        this._xScale.onHighlightDestroy(this.uuid, this.highlightDestroy);\n\n        this._yScale.onHighlight(this.uuid, this.highlightY);\n        this._yScale.onHighlightDestroy(this.uuid, this.highlightDestroy);\n\n    },\n    mounted() {\n        this.drawPlot();\n    },\n    beforeDestroy() {\n        // Unsubscribe to events\n        this._yScale.onUpdate(this.uuid, null);\n        this._xScale.onUpdate(this.uuid, null);\n        this._oScale.onUpdate(this.uuid, null);\n        this._cScale.onUpdate(this.uuid, null);\n\n        // Unsubscribe to data mutations here\n        this._dataContainer.onUpdate(this.uuid, null);\n        this._stratificationDataContainer.onUpdate(this.uuid, null);\n\n        // Unsubscribe to highlights here\n        this._xScale.onHighlight(this.uuid, null);\n        this._xScale.onHighlightDestroy(this.uuid, null);\n\n        this._yScale.onHighlight(this.uuid, null);\n        this._yScale.onHighlightDestroy(this.uuid, null);\n    },\n    watch: {\n        lineWidth() {\n            this.drawPlot();\n        },\n        tickHeight() {\n            this.drawPlot();\n        }\n    },\n    methods: {\n        tooltip: function(mouseX, mouseY, o, x, y, c) {\n            // Set values\n            this.tooltipInfo.o = this._oScale.toHuman(o);\n            this.tooltipInfo.x = this._xScale.toHuman(x);\n            this.tooltipInfo.y = this._yScale.toHuman(y);\n            this.tooltipInfo.c = this._cScale.toHuman(c);\n\n            // Set position\n            this.tooltipPosition.left = mouseX;\n            this.tooltipPosition.top = mouseY;\n            \n            // Dispatch highlights\n            this._oScale.emitHighlight(o);\n            this._xScale.emitHighlight(x);\n            this._yScale.emitHighlight(y);\n            this._cScale.emitHighlight(c);\n        },\n        tooltipDestroy: function() {\n            this.tooltipHide();\n\n            // Destroy all highlights here\n            this._xScale.emitHighlightDestroy();\n            this._yScale.emitHighlightDestroy();\n            this._oScale.emitHighlightDestroy();\n            this._cScale.emitHighlightDestroy();\n        },\n        highlightX(value) {\n            if(this.highlightXScale) {\n                this.highlightX1 = this.highlightXScale(value);\n            }\n        },\n        highlightY(value) {\n            if(this.highlightYScale) {\n                this.highlightY1 = this.highlightYScale(value);\n            }\n        },\n        highlightDestroy() {\n            this.highlightX1 = null;\n            this.highlightY1 = null;\n        },\n        drawPlot(d3Node) {\n            const vm = this;\n\n            if(vm._dataContainer.isLoading || vm._stratificationDataContainer.isLoading || vm._xScale.isLoading || vm._yScale.isLoading || vm._oScale.isLoading || vm._cScale.isLoading) {\n                return;\n            }\n            \n            let data = this._dataContainer.dataCopy;\n            let stratificationData = this._stratificationDataContainer.dataCopy;\n\n            const xScale = vm._xScale;\n            const yScale = vm._yScale;\n            const cScale = vm._cScale;\n            const oScale = vm._oScale;\n            \n            data = data.filter((el) => oScale.domainFiltered.includes(el[vm.o]));\n            stratificationData = stratificationData.filter((el) => oScale.domainFiltered.includes(el[vm.o]));\n            \n\n            const x = d3_scaleLinear()\n                .domain(xScale.domainFiltered)\n                .range([0, vm.pWidth]);\n\n            vm.highlightXScale = x;\n            \n            const y = d3_scaleLinear()\n                .domain(yScale.domainFiltered)\n                .range([vm.pHeight, 0]);\n            \n            vm.highlightYScale = y;\n              \n\n            \n            /*\n             * Scale up the canvas\n             */\n            let canvas;\n            if(d3Node) {\n                canvas = d3Node;\n            } else {\n                canvas = d3_select(this.plotSelector);\n            }\n\n            const canvasNode = canvas.node();\n\n            if(!canvasNode) {\n                return;\n            }\n\n            const two = new Two({ \n                width: vm.pWidth, \n                height: vm.pHeight, \n                domElement: canvasNode\n            });\n\n             /*\n             * Prepare for interactivity\n             */\n            const points = [];\n            const pointsData = [];\n\n            \n            /*\n             * Match the survival data to the stratification data\n             */\n            let matchedData = [];\n            data.forEach((dEl) => {\n                let sEl = stratificationData.find((sEl) => sEl[vm.o] === dEl[vm.o]);\n                if(sEl !== undefined) {\n                    matchedData.push({\n                        \"dEl\": dEl,\n                        \"sEl\": sEl \n                    });\n                }\n            });\n\n            /*\n             * Draw the points\n             */\n            cScale.domainFiltered.forEach((cEl) => {\n                const cData = matchedData\n                    .filter(el => el[\"sEl\"][vm.variable] === cEl)\n                    .sort((aEl, bEl) => {\n                        let aVal = (AbstractScale.isUnknown(aEl[\"dEl\"][vm.deathVariable]) ? aEl[\"dEl\"][vm.followupVariable] : aEl[\"dEl\"][vm.deathVariable]);\n                        if(AbstractScale.isUnknown(aVal)) {\n                            return 1;\n                        }\n                        let bVal = (AbstractScale.isUnknown(bEl[\"dEl\"][vm.deathVariable]) ? bEl[\"dEl\"][vm.followupVariable] : bEl[\"dEl\"][vm.deathVariable]);\n                        if(AbstractScale.isUnknown(bVal)) {\n                            return -1;\n                        }\n                        return aVal - bVal;\n                    });\n                const step = 100 / cData.length;\n\n                let currSurvivalPct = 100;\n                let prevXVal = 0;\n\n                cData.forEach((match, i) => {\n                    let sEl = match[\"sEl\"];\n                    let dEl = match[\"dEl\"];\n\n                    // Compute x and y values based on survival\n                    let xVal;\n                    let drop = false;\n                    if(!AbstractScale.isUnknown(dEl[vm.deathVariable])) {\n                        xVal = dEl[vm.deathVariable];\n                    } else {\n                        if(!AbstractScale.isUnknown(dEl[vm.followupVariable])) {\n                            xVal = dEl[vm.followupVariable];\n                            drop = true;\n                        } else {\n                            xVal = xScale.domain[1];\n                        }\n                    }\n\n                    // Draw a horizontal line to the current time, using the previous percent\n                    const horizontalLine = two.makeLine(x(prevXVal) - 1, y(currSurvivalPct), x(xVal) + 1, y(currSurvivalPct));\n                    horizontalLine.linewidth = vm.lineWidth;\n                    horizontalLine.stroke = cScale.color(cEl);\n\n                    // Add a tick line if using data from followup rather than death\n                    if(drop) {\n                        const tickLine = two.makeLine(x(xVal), y(currSurvivalPct) - vm.tickHeight / 2, x(xVal), y(currSurvivalPct) + vm.tickHeight / 2);\n                        tickLine.linewidth = vm.lineWidth;\n                        tickLine.stroke = cScale.color(cEl);\n                    }\n\n                    let prevSurvivalPct = currSurvivalPct;\n                    prevXVal = xVal;\n\n                    // Draw a vertical line to the current time, using the current percent\n                    if(i < cData.length - 1 && !drop) {\n                        // Decrease percent\n                        currSurvivalPct -= step;\n                        const verticalLine = two.makeLine(x(xVal), y(prevSurvivalPct), x(xVal), y(currSurvivalPct));\n                        verticalLine.linewidth = vm.lineWidth;\n                        verticalLine.stroke = cScale.color(cEl);\n                    }\n                    points.push([x(xVal), y(currSurvivalPct)]);\n                    pointsData.push({\n                        \"y\": currSurvivalPct,\n                        \"o\": dEl[vm.o],\n                        \"x\": xVal,\n                        \"c\": sEl[vm.variable]\n                    });\n\n                    \n                });\n            });\n\n            two.update();\n\n            if(d3Node) {\n                /* Ignore interactivity if SVG was passed in (for download). */\n                return;\n            }\n            \n            /*\n             * More prepare for interactivity\n             */\n            const delaunay = getDelaunay(points, true);\n            \n            /*\n             * Listen for mouse events\n             */\n            const getDataFromMouse = (mouseX, mouseY) => {\n                const i = delaunay.find(mouseX, mouseY);\n                return pointsData[i];\n            };\n\n            const debouncedTooltipDestroy = debounce(vm.tooltipDestroy, TOOLTIP_DEBOUNCE);\n            canvas.on(\"mousemove\", () => {\n                const mouse = d3_mouse(canvasNode);\n                const mouseX = mouse[0];\n                const mouseY = mouse[1];\n\n                const node = getDataFromMouse(mouseX, mouseY);\n\n                const mouseViewportX = d3_event.clientX;\n                const mouseViewportY = d3_event.clientY;\n\n                if(node) {\n                    vm.tooltip(mouseViewportX, mouseViewportY, node[\"o\"], node[\"x\"], node[\"y\"], node[\"c\"]); \n                } else {\n                    debouncedTooltipDestroy();\n                }\n            })\n            .on(\"mouseleave\", vm.tooltipDestroy);\n\n            if(vm.clickHandler !== undefined) {\n                canvas.on(\"click\", () => {\n                    const mouse = d3_mouse(canvasNode);\n                    const mouseX = mouse[0];\n                    const mouseY = mouse[1];\n\n                    const node = getDataFromMouse(mouseX, mouseY);\n\n                    if(node) {\n                        vm.clickHandler(node[\"o\"], node[\"x\"], node[\"y\"], node[\"c\"]); \n                    }\n                });\n            }\n        }\n    }\n}\n</script>\n\n<style>\n@import '../../style/plot-style.css';\n</style>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./StratifiedKaplanMeierPlot.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./StratifiedKaplanMeierPlot.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./StratifiedKaplanMeierPlot.vue?vue&type=template&id=cf670344&\"\nimport script from \"./StratifiedKaplanMeierPlot.vue?vue&type=script&lang=js&\"\nexport * from \"./StratifiedKaplanMeierPlot.vue?vue&type=script&lang=js&\"\nimport style0 from \"./StratifiedKaplanMeierPlot.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('canvas',{staticClass:\"vdp-plot\",style:({\n            'height': (this.pHeight) + 'px', \n            'width': (this.pWidth) + 'px',\n            'top': (this.pMarginTop) + 'px',\n            'left': (this.pMarginLeft) + 'px'\n        }),attrs:{\"id\":this.plotElemID}}),_c('canvas',{staticClass:\"vdp-plot-hidden\",style:({\n            'height': (this.pHeight) + 'px', \n            'width': (this.pWidth) + 'px',\n            'top': (this.pMarginTop) + 'px',\n            'left': (this.pMarginLeft) + 'px'\n        }),attrs:{\"id\":this.hiddenPlotElemID}}),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(this.highlightX1 !== null),expression:\"this.highlightX1 !== null\"}],staticClass:\"vdp-plot-highlight\",style:({\n            'height': (this.pHeight) + 'px', \n            'width': '1px',\n            'top': (this.pMarginTop) + 'px',\n            'left': (this.pMarginLeft + this.highlightX1 - 0.5) + 'px'\n        })}),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(this.highlightX2 !== null),expression:\"this.highlightX2 !== null\"}],staticClass:\"vdp-plot-highlight\",style:({\n            'height': (this.pHeight) + 'px', \n            'width': '1px',\n            'top': (this.pMarginTop) + 'px',\n            'left': (this.pMarginLeft + this.highlightX2 - 0.5) + 'px'\n        })}),_c('div',{staticClass:\"vdp-tooltip\",style:(this.tooltipPositionAttribute),attrs:{\"id\":this.tooltipElemID}},[_c('table',[_c('tr',[_c('th',[_vm._v(_vm._s(this._xScale.name))]),_c('td',[_vm._v(_vm._s(this.tooltipInfo.x))])]),_c('tr',[_c('th',[_vm._v(_vm._s(this._yScale.name))]),_c('td',[_vm._v(_vm._s(this.tooltipInfo.y))])])])])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <div>\n        <canvas \n            :id=\"this.plotElemID\" \n            class=\"vdp-plot\" \n            :style=\"{\n                'height': (this.pHeight) + 'px', \n                'width': (this.pWidth) + 'px',\n                'top': (this.pMarginTop) + 'px',\n                'left': (this.pMarginLeft) + 'px'\n            }\"\n        ></canvas>\n        <canvas \n            :id=\"this.hiddenPlotElemID\" \n            class=\"vdp-plot-hidden\" \n            :style=\"{\n                'height': (this.pHeight) + 'px', \n                'width': (this.pWidth) + 'px',\n                'top': (this.pMarginTop) + 'px',\n                'left': (this.pMarginLeft) + 'px'\n            }\"\n        ></canvas>\n        <div v-show=\"this.highlightX1 !== null\"\n            :style=\"{\n                'height': (this.pHeight) + 'px', \n                'width': '1px',\n                'top': (this.pMarginTop) + 'px',\n                'left': (this.pMarginLeft + this.highlightX1 - 0.5) + 'px'\n            }\"\n            class=\"vdp-plot-highlight\"\n        ></div>\n        <div v-show=\"this.highlightX2 !== null\"\n            :style=\"{\n                'height': (this.pHeight) + 'px', \n                'width': '1px',\n                'top': (this.pMarginTop) + 'px',\n                'left': (this.pMarginLeft + this.highlightX2 - 0.5) + 'px'\n            }\"\n            class=\"vdp-plot-highlight\"\n        ></div>\n        <div :id=\"this.tooltipElemID\" class=\"vdp-tooltip\" :style=\"this.tooltipPositionAttribute\">\n            <table>\n                <tr>\n                    <th>{{ this._xScale.name }}</th>\n                    <td>{{ this.tooltipInfo.x }}</td>\n                </tr>\n                <tr>\n                    <th>{{ this._yScale.name }}</th>\n                    <td>{{ this.tooltipInfo.y }}</td>\n                </tr>\n            </table>\n        </div>\n    </div>\n</template>\n\n<script>\nimport Two from '../../two.js';\nimport { scaleBand as d3_scaleBand, scaleLinear as d3_scaleLinear, scaleLog as d3_scaleLog } from 'd3-scale';\nimport { select as d3_select, create as d3_create } from 'd3-selection';\nimport { mouse as d3_mouse, event as d3_event } from 'd3';\nimport debounce from 'lodash/debounce';\nimport { TOOLTIP_DEBOUNCE, BAR_MARGIN_DEFAULT, BAR_WIDTH_MIN } from './../../constants.js';\nimport { getRetinaRatio } from './../../helpers.js';\n\nimport AbstractScale from './../../scales/AbstractScale.js';\nimport DataContainer from './../../data/DataContainer.js';\n\nimport mixin from './mixin.js';\n\nlet uuid = 0;\n/**\n * @prop {string} x The x-scale variable key.\n * @prop {string} y The y-scale variable key.\n * @prop {string} o The observation-scale variable key. Used to filter observations.\n * @prop {function} filterFunction A function used to filter values to determine whether to count them.\n * @prop {number} barMarginX The value for the horizontal margin between bars. Default: 2\n * @prop {string} barColor A color for all bars. Optional. If provided, overrides using the x scale for colors.\n * @prop {boolean} logY Whether or not to log-scale the y axis. Default: false\n * @extends mixin\n * \n * @example\n * <CountBarPlot\n *      data=\"exposures_data\"\n *      x=\"signature\" \n *      y=\"exposure\"\n *      o=\"sample_id\"\n *      :filterFunction=\"((val) => (val > 1))\"\n *      :pWidth=\"500\"\n *      :pHeight=\"300\"\n *      :pMarginTop=\"10\"\n *      :pMarginLeft=\"120\"\n *      :pMarginRight=\"10\"\n *      :pMarginBottom=\"150\"\n *      :getData=\"getData\"\n *      :getScale=\"getScale\"\n *      :clickHandler=\"myClickHandler\"\n * />\n */\nexport default {\n    name: 'CountBarPlot',\n    mixins: [mixin],\n    props: {\n        'x': {\n            type: String\n        },\n        'y': {\n            type: String\n        },\n        'o': { // observation\n            type: String\n        },\n        'filterFunction': {\n            type: Function\n        },\n        'barColor': {\n            type: String\n        },\n        'barMarginX': {\n            type: Number, \n            default: BAR_MARGIN_DEFAULT\n        },\n        'logY': {\n            type: Boolean,\n            default: false\n        }\n    },\n    data() {\n        return {\n            tooltipInfo: {\n                x: '',\n                y: ''\n            },\n            highlightX1: null,\n            highlightX2: null,\n            highlightScale: null,\n            barWidth: 0\n        }\n    },\n    beforeCreate() {\n        this.uuid = this.$options.name + uuid.toString();\n        uuid += 1;\n    },\n    created() {\n        // Set data\n        this._dataContainer = this.getData(this.data);\n        console.assert(this._dataContainer instanceof DataContainer);\n        // Set scale variables\n        this._xScale = this.getScale(this.x);\n        this._yScale = this.getScale(this.y);\n        this._oScale = this.getScale(this.o);\n        console.assert(this._xScale instanceof AbstractScale);\n        console.assert(this._yScale instanceof AbstractScale);\n        console.assert(this._oScale instanceof AbstractScale);\n\n        // Subscribe to event publishers here\n        this._xScale.onUpdate(this.uuid, this.drawPlot);\n        this._yScale.onUpdate(this.uuid, this.drawPlot);\n        this._oScale.onUpdate(this.uuid, this.drawPlot);\n\n        // Subscribe to data mutations here\n        this._dataContainer.onUpdate(this.uuid, this.drawPlot);\n\n        // Subscribe to highlights here\n        this._xScale.onHighlight(this.uuid, this.highlightX);\n        this._xScale.onHighlightDestroy(this.uuid, this.highlightDestroy);\n    },\n    mounted() {\n        this.drawPlot();\n    },\n    beforeDestroy() {\n        // Unsubscribe to events\n        this._yScale.onUpdate(this.uuid, null);\n        this._xScale.onUpdate(this.uuid, null);\n        this._oScale.onUpdate(this.uuid, null);\n\n        // Unsubscribe to data mutations here\n        this._dataContainer.onUpdate(this.uuid, null);\n\n        // Unsubscribe to highlights here\n        this._xScale.onHighlight(this.uuid, null);\n        this._xScale.onHighlightDestroy(this.uuid, null);\n    },\n    watch: {\n        barMarginX() {\n            this.drawPlot();\n        },\n        barColor() {\n            this.drawPlot();\n        },\n        logY() {\n            this.drawPlot();\n        }\n    },\n    methods: {\n        tooltip: function(mouseX, mouseY, x, y) {\n            // Set values\n            this.tooltipInfo.x = this._xScale.toHuman(x);\n            this.tooltipInfo.y = this._yScale.toHuman(y);\n\n            // Set position\n            this.tooltipPosition.left = mouseX;\n            this.tooltipPosition.top = mouseY;\n            \n            // Dispatch highlights\n            this._xScale.emitHighlight(x);\n            this._yScale.emitHighlight(y);\n        },\n        tooltipDestroy: function() {\n            this.tooltipHide();\n\n            // Destroy all highlights here\n            this._xScale.emitHighlightDestroy();\n            this._yScale.emitHighlightDestroy();\n        },\n        highlightX(value) {\n            if(this.highlightScale) {\n                this.highlightX1 = this.highlightScale(value);\n                this.highlightX2 = this.highlightScale(value) + this.barWidth;\n            }\n        },\n        highlightDestroy() {\n            this.highlightX1 = null;\n            this.highlightX2 = null;\n        },\n        drawPlot(d3Node) {\n            const vm = this;\n\n            if(vm._dataContainer.isLoading || vm._xScale.isLoading || vm._yScale.isLoading || vm._oScale.isLoading) {\n                return;\n            }\n            \n            let data = vm._dataContainer.dataCopy;\n\n            const xScale = this._xScale;\n            const yScale = this._yScale;\n            const oScale = this._oScale;\n\n            data = data.filter((el) => oScale.domainFiltered.includes(el[vm.o]));\n\n            const x = d3_scaleBand()\n                .domain(xScale.domainFiltered)\n                .range([0, vm.pWidth]);\n\n            vm.highlightScale = x;\n            \n            let yScaleFunc = d3_scaleLinear;\n            if(vm.logY) {\n                yScaleFunc = d3_scaleLog;\n            }\n            const y = yScaleFunc()\n                .domain(yScale.domainFiltered)\n                .range([vm.pHeight, 0]);\n\n            const barWidth = vm.pWidth / xScale.domainFiltered.length;\n            vm.barWidth = barWidth;\n            \n            /*\n             * Scale up the canvas\n             */\n            let canvas;\n            if(d3Node) {\n                canvas = d3Node;\n            } else {\n                canvas = d3_select(this.plotSelector);\n            }\n\n            const canvasNode = canvas.node();\n\n            if(!canvasNode) {\n                return;\n            }\n\n            const two = new Two({ \n                width: vm.pWidth, \n                height: vm.pHeight, \n                domElement: canvasNode\n            });\n\n            let canvasHidden, contextHidden;\n            try {\n                canvasHidden = d3_select(this.hiddenPlotSelector);\n                contextHidden = canvasHidden.node().getContext('2d');\n            } catch(e) {\n                canvasHidden = d3_create(\"canvas\");\n                contextHidden = canvasHidden.node().getContext('2d');\n            }\n\n            const ratio = getRetinaRatio(contextHidden);\n            const scaledWidth = vm.pWidth * ratio;\n            const scaledHeight = vm.pHeight * ratio;\n\n            canvasHidden\n                .attr(\"width\", scaledWidth)\n                .attr(\"height\", scaledHeight);\n            contextHidden.scale(ratio, ratio);\n\n            /*\n             * Set up the color mappings\n             */\n            const colToNode = {};\n\n            /*\n             * Generates the next color in the sequence, \n             * going from 0,0,0 to 255,255,255.\n             */\n            let nextCol = 1;\n            const genColor = () => {\n                let ret = [];\n                // via http://stackoverflow.com/a/15804183\n                if(nextCol < 16777215){\n                    ret.push(nextCol & 0xff); // R\n                    ret.push((nextCol & 0xff00) >> 8); // G \n                    ret.push((nextCol & 0xff0000) >> 16); // B\n\n                    nextCol += 20;\n                }\n                let col = \"rgb(\" + ret.join(',') + \")\";\n                return col;\n            }\n\n            /*\n             * Draw the bars\n             */\n            let barMarginX = vm.barMarginX;\n            if(barWidth - vm.barMarginX <= BAR_WIDTH_MIN) {\n                barMarginX = 0;\n            }\n            \n            xScale.domainFiltered.forEach((xVal) => {\n                const yVal = data.filter((el) => (!AbstractScale.isUnknown(el[xVal]) && vm.filterFunction(el[xVal], el, xVal))).length;\n\n                const col = genColor();\n                colToNode[col] = { \"x\": xVal, \"y\": yVal };\n                contextHidden.fillStyle = col;\n\n                let height = vm.pHeight - y(yVal);\n                const rect = two.makeRectangle(x(xVal) + (barMarginX/2) + (barWidth - barMarginX)/2, y(yVal) + height/2, barWidth - barMarginX, height);\n                rect.noStroke();\n                if(vm.barColor !== undefined) {\n                    rect.fill = vm.barColor;\n                } else {\n                    rect.fill = xScale.color(xVal);\n                }\n                \n                contextHidden.fillRect(x(xVal), 0, barWidth, vm.pHeight);\n            });\n\n            two.update();\n\n            if(d3Node) {\n                /* Ignore interactivity if SVG was passed in (for download). */\n                return;\n            }\n            \n            /*\n             * Listen for mouse events\n             */\n            const getDataFromMouse = (mouseX, mouseY) => {\n                // Get the corresponding pixel color on the hidden canvas\n                const col = contextHidden.getImageData(mouseX * ratio, mouseY * ratio, scaledWidth, scaledHeight).data;\n                const colString = \"rgb(\" + col[0] + \",\" + col[1] + \",\"+ col[2] + \")\";\n                // Look up the node in our map\n                return colToNode[colString];\n            };\n\n            const debouncedTooltipDestroy = debounce(vm.tooltipDestroy, TOOLTIP_DEBOUNCE);\n            canvas.on(\"mousemove\", () => {\n                const mouse = d3_mouse(canvasNode);\n                const mouseX = mouse[0];\n                const mouseY = mouse[1];\n\n                const node = getDataFromMouse(mouseX, mouseY);\n\n                const mouseViewportX = d3_event.clientX;\n                const mouseViewportY = d3_event.clientY;\n\n                if(node) {\n                    vm.tooltip(mouseViewportX, mouseViewportY, node[\"x\"], node[\"y\"]); \n                } else {\n                    debouncedTooltipDestroy();\n                }\n            })\n            .on(\"mouseleave\", vm.tooltipDestroy);\n\n            if(vm.clickHandler !== undefined) {\n                canvas.on(\"click\", () => {\n                    const mouse = d3_mouse(canvasNode);\n                    const mouseX = mouse[0];\n                    const mouseY = mouse[1];\n\n                    const node = getDataFromMouse(mouseX, mouseY);\n\n                    if(node) {\n                        vm.clickHandler(node[\"x\"], node[\"y\"]);\n                    }\n                });\n            }\n            \n        }\n    }\n}\n</script>\n\n<style>\n@import '../../style/plot-style.css';\n</style>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CountBarPlot.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CountBarPlot.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./CountBarPlot.vue?vue&type=template&id=21d15e20&\"\nimport script from \"./CountBarPlot.vue?vue&type=script&lang=js&\"\nexport * from \"./CountBarPlot.vue?vue&type=script&lang=js&\"\nimport style0 from \"./CountBarPlot.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('canvas',{staticClass:\"vdp-plot\",style:({\n            'height': (this.pHeight) + 'px', \n            'width': (this.pWidth) + 'px',\n            'top': (this.pMarginTop) + 'px',\n            'left': (this.pMarginLeft) + 'px'\n        }),attrs:{\"id\":this.plotElemID}}),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(this.highlightX1 !== null),expression:\"this.highlightX1 !== null\"}],staticClass:\"vdp-plot-highlight\",style:({\n            'height': (this.pHeight) + 'px', \n            'width': '1px',\n            'top': (this.pMarginTop) + 'px',\n            'left': (this.pMarginLeft + this.highlightX1 - 0.5) + 'px'\n        })}),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(this.highlightY1 !== null),expression:\"this.highlightY1 !== null\"}],staticClass:\"vdp-plot-highlight\",style:({\n            'height': '1px', \n            'width': (this.pWidth) + 'px', \n            'top': (this.pMarginTop + this.highlightY1 - 0.5) + 'px',\n            'left': (this.pMarginLeft) + 'px'\n        })}),_c('div',{staticClass:\"vdp-tooltip\",style:(this.tooltipPositionAttribute),attrs:{\"id\":this.tooltipElemID}},[_c('table',[_c('tr',[_c('th',[_vm._v(\"Chromosome\")]),_c('td',[_vm._v(_vm._s(this.tooltipInfo.chromosome))])]),_c('tr',[_c('th',[_vm._v(\"Position\")]),_c('td',[_vm._v(_vm._s(this.tooltipInfo.position))])]),_c('tr',[_c('th',[_vm._v(_vm._s(this._yScale.name))]),_c('td',[_vm._v(_vm._s(this.tooltipInfo.y))])]),_c('tr',[_c('th',[_vm._v(_vm._s(this._cScale.name))]),_c('td',[_vm._v(_vm._s(this.tooltipInfo.c))])])])])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <div>\n        <canvas \n            :id=\"this.plotElemID\" \n            class=\"vdp-plot\" \n            :style=\"{\n                'height': (this.pHeight) + 'px', \n                'width': (this.pWidth) + 'px',\n                'top': (this.pMarginTop) + 'px',\n                'left': (this.pMarginLeft) + 'px'\n            }\"\n        ></canvas>\n        <div v-show=\"this.highlightX1 !== null\" \n            :style=\"{\n                'height': (this.pHeight) + 'px', \n                'width': '1px',\n                'top': (this.pMarginTop) + 'px',\n                'left': (this.pMarginLeft + this.highlightX1 - 0.5) + 'px'\n            }\"\n            class=\"vdp-plot-highlight\"\n        ></div>\n        <div v-show=\"this.highlightY1 !== null\"\n            :style=\"{\n                'height': '1px', \n                'width': (this.pWidth) + 'px', \n                'top': (this.pMarginTop + this.highlightY1 - 0.5) + 'px',\n                'left': (this.pMarginLeft) + 'px'\n            }\"\n            class=\"vdp-plot-highlight\"\n        ></div>\n        <div :id=\"this.tooltipElemID\" class=\"vdp-tooltip\" :style=\"this.tooltipPositionAttribute\">\n            <table>\n                <tr>\n                    <th>Chromosome</th>\n                    <td>{{ this.tooltipInfo.chromosome }}</td>\n                </tr>\n                <tr>\n                    <th>Position</th>\n                    <td>{{ this.tooltipInfo.position }}</td>\n                </tr>\n                <tr>\n                    <th>{{ this._yScale.name }}</th>\n                    <td>{{ this.tooltipInfo.y }}</td>\n                </tr>\n                <tr>\n                    <th>{{ this._cScale.name }}</th>\n                    <td>{{ this.tooltipInfo.c }}</td>\n                </tr>\n            </table>\n        </div>\n    </div>\n</template>\n\n<script>\nimport Two from '../../two.js';\nimport { scaleLinear as d3_scaleLinear, scaleLog as d3_scaleLog } from 'd3-scale';\nimport { select as d3_select } from 'd3-selection';\nimport { mouse as d3_mouse, event as d3_event } from 'd3';\nimport debounce from 'lodash/debounce';\nimport { TOOLTIP_DEBOUNCE } from './../../constants.js';\nimport { getDelaunay } from './../../helpers.js';\n\nimport AbstractScale from './../../scales/AbstractScale.js';\nimport GenomeScale from './../../scales/GenomeScale.js';\n\nimport DataContainer from './../../data/DataContainer.js';\n\nimport mixin from './mixin.js';\n\nlet uuid = 0;\n/**\n * @prop {string} g The genome-scale variable key.\n * @prop {string} y The y-scale variable key.\n * @prop {string} c The color-scale variable key.\n * @prop {string} chromosomeVariable The axis chromosome variable key. Default: \"chromosome\"\n * @prop {string} positionVariable The axis position variable key. Default: \"position\"\n * @prop {boolean} logY Whether to have log scaled y. Default: false\n * @extends mixin\n * \n * @example\n * <GenomeScatterPlot\n *      data=\"rainfall_data\"\n *      g=\"genome\" \n *      y=\"mut_dist\"\n *      c=\"category\"\n *      :pWidth=\"500\"\n *      :pHeight=\"300\"\n *      :pMarginTop=\"10\"\n *      :pMarginLeft=\"120\"\n *      :pMarginRight=\"10\"\n *      :pMarginBottom=\"150\"\n *      :getData=\"getData\"\n *      :getScale=\"getScale\"\n *      :clickHandler=\"myClickHandler\"\n * />\n */\nexport default {\n    name: 'GenomeScatterPlot',\n    mixins: [mixin],\n    props: {\n        'g': {\n            type: String // genome\n        },\n        'y': {\n            type: String\n        },\n        'c': {\n            type: String // color\n        },\n        'chromosomeVariable': {\n            type: String,\n            default: \"chromosome\"\n        },\n        'positionVariable': {\n            type: String,\n            default: \"position\"\n        },\n        'logY': {\n            type: Boolean,\n            default: false\n        }\n        // TODO: allow optional dot size, dot shape variable\n        // TODO: allow specification of filled dots, static dot stroke/fill, etc...\n    },\n    data() {\n        return {\n            tooltipInfo: {\n                chromosome: '',\n                position: '',\n                y: '',\n                c: ''\n            },\n            highlightGScales: null,\n            highlightYScale: null,\n            highlightX1: null,\n            highlightY1: null\n        }\n    },\n    beforeCreate() {\n        this.uuid = this.$options.name + uuid.toString();\n        uuid += 1;\n    },\n    created() {\n        // Set data\n        this._dataContainer = this.getData(this.data);\n        console.assert(this._dataContainer instanceof DataContainer);\n        // Set scale variables\n        this._gScale = this.getScale(this.g);\n        this._yScale = this.getScale(this.y);\n        this._cScale = this.getScale(this.c);\n        console.assert(this._gScale instanceof GenomeScale);\n        console.assert(this._yScale instanceof AbstractScale);\n        console.assert(this._cScale instanceof AbstractScale);\n\n        // Subscribe to event publishers here\n        this._gScale.onUpdate(this.uuid, this.drawPlot);\n        this._yScale.onUpdate(this.uuid, this.drawPlot);\n        this._cScale.onUpdate(this.uuid, this.drawPlot);\n\n        // Subscribe to data mutations here\n        this._dataContainer.onUpdate(this.uuid, this.drawPlot);\n\n        // Subscribe to highlights here\n        this._gScale.onHighlight(this.uuid, this.highlightG);\n        this._gScale.onHighlightDestroy(this.uuid, this.highlightDestroy);\n\n        this._yScale.onHighlight(this.uuid, this.highlightY);\n        this._yScale.onHighlightDestroy(this.uuid, this.highlightDestroy);\n\n        // TODO: subscribe to color scale highlights??\n    },\n    mounted() {\n        this.drawPlot();\n    },\n    beforeDestroy() {\n        // Unsubscribe to events\n        this._yScale.onUpdate(this.uuid, null);\n        this._gScale.onUpdate(this.uuid, null);\n        this._cScale.onUpdate(this.uuid, null);\n\n        // Unsubscribe to data mutations here\n        this._dataContainer.onUpdate(this.uuid, null);\n\n        // Unsubscribe to highlights here\n        this._yScale.onHighlight(this.uuid, null);\n        this._yScale.onHighlightDestroy(this.uuid, null);\n\n        this._gScale.onHighlight(this.uuid, null);\n        this._gScale.onHighlightDestroy(this.uuid, null);\n    },\n    watch: {\n        logY() {\n            this.drawPlot();\n        }\n    },\n    methods: {\n        tooltip: function(mouseX, mouseY, chromosome, position, y, c) {\n            // Set values\n            this.tooltipInfo.chromosome = chromosome;\n            this.tooltipInfo.position = position.toLocaleString();\n\n            this.tooltipInfo.y = this._yScale.toHuman(y);\n            this.tooltipInfo.c = this._cScale.toHuman(c);\n\n            // Set position\n            this.tooltipPosition.left = mouseX;\n            this.tooltipPosition.top = mouseY;\n            \n            // Dispatch highlights\n            this._gScale.emitHighlight(chromosome, position);\n            this._yScale.emitHighlight(y);\n            this._cScale.emitHighlight(c);\n        },\n        tooltipDestroy: function() {\n            this.tooltipHide();\n\n            // Destroy all highlights here\n            this._gScale.emitHighlightDestroy();\n            this._yScale.emitHighlightDestroy();\n            this._cScale.emitHighlightDestroy();\n        },\n        highlightG(chromosome, position) {\n            this.highlightX1 = this.highlightGScales[chromosome](position);\n        },\n        highlightY(value) {\n            this.highlightY1 = this.highlightYScale(value);\n        },\n        highlightDestroy() {\n            this.highlightX1 = null;\n            this.highlightY1 = null;\n        },\n        drawPlot(d3Node) {\n            const vm = this;\n\n            if(vm._dataContainer.isLoading || vm._cScale.isLoading || vm._yScale.isLoading) {\n                return;\n            }\n            \n            let data = vm._dataContainer.dataCopy;\n\n            const cScale = vm._cScale;\n            const yScale = vm._yScale;\n            const gScale = vm._gScale;\n\n            let chromosomes = gScale.chromosomesFiltered;\n\n            data = data.filter((d) => chromosomes.includes(d[vm.chromosomeVariable]));\n\n\n            const g = {};\n            \n            let domains = gScale.getDomainsFiltered();\n            let chromosomeRatios = gScale.getChromosomeRatiosFiltered();\n            let chromosomeRatiosCumulative = gScale.getChromosomeRatiosCumulativeFiltered();\n\n            for(let i = 0; i < chromosomeRatios.length; i++) {\n                let currChromosome = chromosomes[i];\n                let currDomain = domains[i];\n                let currRatio = chromosomeRatios[i];\n                let currRatioCumulative = chromosomeRatiosCumulative[i];\n                g[currChromosome] = d3_scaleLinear()\n                    .domain(currDomain)\n                    .range([vm.pWidth * currRatioCumulative, vm.pWidth * (currRatioCumulative + currRatio)]);\n            }\n\n            vm.highlightGScales = g;\n\n            let yScaleFunc = d3_scaleLinear;\n            if(vm.logY) {\n                yScaleFunc = d3_scaleLog;\n            }\n            \n            const y = yScaleFunc()\n                .domain(yScale.domainFiltered)\n                .range([vm.pHeight, 0]);\n\n            // TODO: figure out option for scale log\n\n            vm.highlightYScale = y;\n            \n            \n            /*\n             * Scale up the canvas\n             */\n            let canvas;\n            if(d3Node) {\n                canvas = d3Node;\n            } else {\n                canvas = d3_select(this.plotSelector);\n            }\n\n            const canvasNode = canvas.node();\n\n            if(!canvasNode) {\n                return;\n            }\n\n            const two = new Two({ \n                width: vm.pWidth, \n                height: vm.pHeight, \n                domElement: canvasNode\n            });\n\n            if(!d3Node && data.length === 0) {\n                canvas.on(\"mousemove\", () => {});\n                canvas.on(\"mouseleave\", () => {});\n                return;\n            }\n\n\n            /*\n             * Draw the points\n             */\n            data.forEach((d) => {\n                const circle = two.makeCircle(g[d[vm.chromosomeVariable]](d[vm.positionVariable]), y(d[vm.y]), 3);\n                circle.fill = cScale.color(d[vm.c]);\n                circle.noStroke();\n            });\n\n            two.update();\n\n            if(d3Node) {\n                /* Ignore interactivity if SVG was passed in (for download). */\n                return;\n            }\n\n            /*\n             * Prepare for interactivity\n             */\n            const points = data.map((d) => [g[d[vm.chromosomeVariable]](d[vm.positionVariable]), y(d[vm.y])]);\n            const delaunay = getDelaunay(points, false);\n            \n            /*\n             * Listen for mouse events\n             */\n            const getDataFromMouse = (mouseX, mouseY) => {\n                const i = delaunay.find(mouseX, mouseY);\n                return data[i];\n            };\n\n            const debouncedTooltipDestroy = debounce(vm.tooltipDestroy, TOOLTIP_DEBOUNCE);\n            canvas.on(\"mousemove\", () => {\n                const mouse = d3_mouse(canvasNode);\n                const mouseX = mouse[0];\n                const mouseY = mouse[1];\n\n                const node = getDataFromMouse(mouseX, mouseY);\n\n                const mouseViewportX = d3_event.clientX;\n                const mouseViewportY = d3_event.clientY;\n\n                if(node) {\n                    vm.tooltip(mouseViewportX, mouseViewportY, node[vm.chromosomeVariable], node[vm.positionVariable], node[vm.y], node[vm.c]); \n                } else {\n                    debouncedTooltipDestroy();\n                }\n            })\n            .on(\"mouseleave\", vm.tooltipDestroy);\n\n            if(vm.clickHandler !== undefined) {\n                canvas.on(\"click\", () => {\n                    const mouse = d3_mouse(canvasNode);\n                    const mouseX = mouse[0];\n                    const mouseY = mouse[1];\n\n                    const node = getDataFromMouse(mouseX, mouseY);\n\n                    if(node) {\n                        vm.clickHandler(node[vm.chromosomeVariable], node[vm.positionVariable], node[vm.y], node[vm.c]); \n                    }\n                });\n            }\n        }\n    }\n}\n</script>\n\n<style>\n@import '../../style/plot-style.css';\n</style>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./GenomeScatterPlot.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./GenomeScatterPlot.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./GenomeScatterPlot.vue?vue&type=template&id=177cc5d4&\"\nimport script from \"./GenomeScatterPlot.vue?vue&type=script&lang=js&\"\nexport * from \"./GenomeScatterPlot.vue?vue&type=script&lang=js&\"\nimport style0 from \"./GenomeScatterPlot.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('canvas',{staticClass:\"vdp-plot\",style:({\n            'height': (this.pHeight) + 'px', \n            'width': (this.pWidth) + 'px',\n            'top': (this.pMarginTop) + 'px',\n            'left': (this.pMarginLeft) + 'px'\n        }),attrs:{\"id\":this.plotElemID}}),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(this.highlightX1 !== null),expression:\"this.highlightX1 !== null\"}],staticClass:\"vdp-plot-highlight\",style:({\n            'height': (this.pHeight) + 'px', \n            'width': '1px',\n            'top': (this.pMarginTop) + 'px',\n            'left': (this.pMarginLeft + this.highlightX1 - 0.5) + 'px'\n        })}),_c('div',{staticClass:\"vdp-tooltip\",style:(this.tooltipPositionAttribute),attrs:{\"id\":this.tooltipElemID}},[_c('table',[_c('tr',[_c('th',[_vm._v(\"Chromosome\")]),_c('td',[_vm._v(_vm._s(this.tooltipInfo.chromosome))])]),_c('tr',[_c('th',[_vm._v(\"Position\")]),_c('td',[_vm._v(_vm._s(this.tooltipInfo.position))])]),(this.hasC)?_c('tr',[_c('th',[_vm._v(_vm._s(this._cScale.name))]),_c('td',[_vm._v(_vm._s(this.tooltipInfo.c))])]):_vm._e()])])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <div>\n        <canvas \n            :id=\"this.plotElemID\" \n            class=\"vdp-plot\" \n            :style=\"{\n                'height': (this.pHeight) + 'px', \n                'width': (this.pWidth) + 'px',\n                'top': (this.pMarginTop) + 'px',\n                'left': (this.pMarginLeft) + 'px'\n            }\"\n        ></canvas>\n        <div v-show=\"this.highlightX1 !== null\"  \n            :style=\"{\n                'height': (this.pHeight) + 'px', \n                'width': '1px',\n                'top': (this.pMarginTop) + 'px',\n                'left': (this.pMarginLeft + this.highlightX1 - 0.5) + 'px'\n            }\"\n            class=\"vdp-plot-highlight\"\n        ></div>\n        <div :id=\"this.tooltipElemID\" class=\"vdp-tooltip\" :style=\"this.tooltipPositionAttribute\">\n            <table>\n                <tr>\n                    <th>Chromosome</th>\n                    <td>{{ this.tooltipInfo.chromosome }}</td>\n                </tr>\n                <tr>\n                    <th>Position</th>\n                    <td>{{ this.tooltipInfo.position }}</td>\n                </tr>\n                <tr v-if=\"this.hasC\">\n                    <th>{{ this._cScale.name }}</th>\n                    <td>{{ this.tooltipInfo.c }}</td>\n                </tr>\n            </table>\n        </div>\n    </div>\n</template>\n\n<script>\nimport Two from '../../two.js';\nimport { scaleLinear as d3_scaleLinear } from 'd3-scale';\nimport { select as d3_select } from 'd3-selection';\nimport { mouse as d3_mouse, event as d3_event } from 'd3';\nimport debounce from 'lodash/debounce';\nimport { TOOLTIP_DEBOUNCE, GENOME_EVENT_COLOR_DEFAULT } from './../../constants.js';\nimport { getDelaunay } from './../../helpers.js';\n\nimport AbstractScale from './../../scales/AbstractScale.js';\nimport GenomeScale from './../../scales/GenomeScale.js';\nimport DataContainer from './../../data/DataContainer.js';\n\nimport mixin from './mixin.js';\n\nlet uuid = 0;\n/**\n * @prop {string} g The genome-scale variable key.\n * @prop {string} c The event color-scale variable key. Takes precedence over eventColor prop.\n * @prop {string} chromosomeVariable The axis chromosome variable key. Default: \"chromosome\"\n * @prop {string} positionVariable The axis position variable key. Default: \"position\"\n * @prop {number} eventWidth The width of each observation rectangle. Default: 4\n * @prop {string} eventColor The color of each observation. Default: \"#000000\". \n * @prop {string} backgroundColor The background color of the track. Optional.\n * @prop {string} lineColor The background color of the track. Optional.\n * @extends mixin\n * \n * @example\n * <GenomeTrackPlot\n *      data=\"rand_genome_data\"\n *      g=\"genome\" \n *      c=\"event_type\"\n *      :pWidth=\"500\"\n *      :pHeight=\"40\"\n *      :pMarginTop=\"10\"\n *      :pMarginLeft=\"10\"\n *      :pMarginRight=\"10\"\n *      :pMarginBottom=\"150\"\n *      :getData=\"getData\"\n *      :getScale=\"getScale\"\n *      :getStack=\"getStack\"\n *      :clickHandler=\"myClickHandler\"\n * />\n */\nexport default {\n    name: 'GenomeTrackPlot',\n    mixins: [mixin],\n    props: {\n        'g': { // genome\n            required: true,\n            type: String\n        },\n        'c': { // event color\n            required: false,\n            type: String\n        },\n        'chromosomeVariable': {\n            type: String,\n            default: \"chromosome\"\n        },\n        'positionVariable': {\n            type: String,\n            default: \"position\"\n        },\n        'eventWidth': {\n            type: Number,\n            default: 4\n        },\n        'eventColor': {\n            type: String,\n            default: GENOME_EVENT_COLOR_DEFAULT\n        },\n        'backgroundColor': {\n            required: false,\n            type: String\n        },\n        'lineColor': {\n            required: false,\n            type: String\n        }\n    },\n    data() {\n        return {\n            hasC: true,\n            tooltipInfo: {\n                chromosome: '',\n                position: '',\n                c: ''\n            },\n            highlightGScales: null,\n            highlightX1: null\n        }\n    },\n    beforeCreate() {\n        this.uuid = this.$options.name + uuid.toString();\n        uuid += 1;\n    },\n    created() {\n        // Set data\n        this._dataContainer = this.getData(this.data);\n        console.assert(this._dataContainer instanceof DataContainer);\n        // Set scale variables\n        this._gScale = this.getScale(this.g);\n        this._cScale = this.getScale(this.c);\n        // Make assertions, but keep c scale optional\n        if(this._cScale === undefined) {\n            this.hasC = false;\n        } else {\n            console.assert(this._cScale instanceof AbstractScale);\n            this._cScale.onUpdate(this.uuid, this.drawPlot);\n        }\n        console.assert(this._gScale instanceof GenomeScale);\n        \n\n        // Subscribe to event publishers here\n        this._gScale.onUpdate(this.uuid, this.drawPlot);\n\n\n        // Subscribe to data mutations here\n        this._dataContainer.onUpdate(this.uuid, this.drawPlot);\n\n        // Subscribe to highlights here\n        this._gScale.onHighlight(this.uuid, this.highlightG);\n        this._gScale.onHighlightDestroy(this.uuid, this.highlightDestroy);\n\n        // TODO subscribe to other highlights?\n    },\n    mounted() {\n        this.drawPlot();\n    },\n    beforeDestroy() {\n        // Unsubscribe to events\n        this._gScale.onUpdate(this.uuid, null);\n        if(this.hasC) {\n            this._cScale.onUpdate(this.uuid, null);\n        }\n\n        // Unsubscribe to data mutations here\n        this._dataContainer.onUpdate(this.uuid, null);\n\n        // Unsubscribe to highlights here\n        this._gScale.onHighlight(this.uuid, null);\n        this._gScale.onHighlightDestroy(this.uuid, null);\n    },\n    watch: {\n        eventWidth() {\n            this.drawPlot();\n        },\n        eventColor() {\n            this.drawPlot();\n        },\n        backgroundColor() {\n            this.drawPlot();\n        },\n        lineColor() {\n            this.drawPlot();\n        },\n    },\n    methods: {\n        tooltip: function(mouseX, mouseY, chromosome, position, c) {\n            // Set values\n            this.tooltipInfo.chromosome = chromosome;\n            this.tooltipInfo.position = position.toLocaleString();\n\n            if(this.hasC) {\n                this.tooltipInfo.c = this._cScale.toHuman(c);\n            }\n\n            // Set position\n            this.tooltipPosition.left = mouseX;\n            this.tooltipPosition.top = mouseY;\n            \n            // Dispatch highlights\n            this._gScale.emitHighlight(chromosome, position);\n            if(this.hasC) {\n                this._cScale.emitHighlight(c);\n            }\n        },\n        tooltipDestroy: function() {\n            this.tooltipHide();\n\n            // Destroy all highlights here\n            this._gScale.emitHighlightDestroy();\n            if(this.hasC) {\n                this._cScale.emitHighlightDestroy();\n            }\n        },\n        highlightG(chromosome, position) {\n            this.highlightX1 = this.highlightGScales[chromosome](position);\n        },\n        highlightDestroy() {\n            this.highlightX1 = null;\n        },\n        drawPlot(d3Node) {\n            const vm = this;\n\n            if(vm._dataContainer.isLoading || (vm.hasC && vm._cScale.isLoading)) {\n                return;\n            }\n            \n            let data = this._dataContainer.dataCopy;\n\n            let cScale;\n            if(vm.hasC) {\n                cScale = vm._cScale;\n            }\n            const gScale = vm._gScale;\n\n            let chromosomes = gScale.chromosomesFiltered;\n\n            data = data.filter((d) => chromosomes.includes(d[vm.chromosomeVariable]));\n\n\n            const g = {};\n            \n            let domains = gScale.getDomainsFiltered();\n            let chromosomeRatios = gScale.getChromosomeRatiosFiltered();\n            let chromosomeRatiosCumulative = gScale.getChromosomeRatiosCumulativeFiltered();\n\n            for(let i = 0; i < chromosomeRatios.length; i++) {\n                let currChromosome = chromosomes[i];\n                let currDomain = domains[i];\n                let currRatio = chromosomeRatios[i];\n                let currRatioCumulative = chromosomeRatiosCumulative[i];\n                g[currChromosome] = d3_scaleLinear()\n                    .domain(currDomain)\n                    .range([vm.pWidth * currRatioCumulative, vm.pWidth * (currRatioCumulative + currRatio)]);\n            }\n\n            vm.highlightGScales = g;\n              \n            \n            /*\n             * Scale up the canvas\n             */\n            let canvas;\n            if(d3Node) {\n                canvas = d3Node;\n            } else {\n                canvas = d3_select(this.plotSelector);\n            }\n\n            const canvasNode = canvas.node();\n\n            if(!canvasNode) {\n                return;\n            }\n\n            const two = new Two({ \n                width: vm.pWidth, \n                height: vm.pHeight, \n                domElement: canvasNode\n            });\n\n\n            /*\n             * Draw the track\n             */\n            if(vm.backgroundColor !== undefined) {\n                const trackRect = two.makeRectangle(0 + vm.pWidth/2, 0 + vm.pHeight/2, vm.pWidth, vm.pHeight);\n                trackRect.fill = vm.backgroundColor;\n                trackRect.noStroke();\n            }\n\n            if(vm.lineColor !== undefined) {\n                const trackLineRect = two.makeRectangle(0 + vm.pWidth/2, vm.pHeight/2, vm.pWidth, 1);\n                trackLineRect.fill = vm.lineColor;\n                trackLineRect.noStroke();\n            }\n\n            data.forEach((d) => {\n                const xVal = g[d[vm.chromosomeVariable]](d[vm.positionVariable]) - (vm.eventWidth/2);\n                const eventRect = two.makeRectangle(xVal + vm.eventWidth/2, 0 + vm.pHeight/2, vm.eventWidth, vm.pHeight);\n                if(this.hasC) {\n                    eventRect.fill = cScale.color(d[vm.c]);\n                } else {\n                    eventRect.fill = vm.eventColor;\n                }\n                eventRect.noStroke();\n            });\n\n            two.update();\n\n            if(d3Node) {\n                /* Ignore interactivity if SVG was passed in (for download). */\n                return;\n            }\n\n            /*\n             * Prepare for interactivity\n             */\n            // TODO: remove this offset thing once delaunay library is fixed\n            const points = data.map((d) => [g[d[vm.chromosomeVariable]](d[vm.positionVariable]), (vm.pHeight / 2)]);\n            const delaunay = getDelaunay(points, true);\n            \n            /*\n             * Listen for mouse events\n             */\n            const getDataFromMouse = (mouseX, mouseY) => {\n                const i = delaunay.find(mouseX, mouseY);\n                return data[i];\n            };\n\n            const debouncedTooltipDestroy = debounce(vm.tooltipDestroy, TOOLTIP_DEBOUNCE);\n            canvas.on(\"mousemove\", () => {\n                const mouse = d3_mouse(canvasNode);\n                const mouseX = mouse[0];\n                const mouseY = mouse[1];\n\n                const node = getDataFromMouse(mouseX, mouseY);\n\n                const mouseViewportX = d3_event.clientX;\n                const mouseViewportY = d3_event.clientY;\n\n                if(node) {\n                    vm.tooltip(mouseViewportX, mouseViewportY, node[vm.chromosomeVariable], node[vm.positionVariable], node[vm.c]); \n                } else {\n                    debouncedTooltipDestroy();\n                }\n            })\n            .on(\"mouseleave\", vm.tooltipDestroy);\n\n            if(vm.clickHandler !== undefined) {\n                canvas.on(\"click\", () => {\n                    const mouse = d3_mouse(canvasNode);\n                    const mouseX = mouse[0];\n                    const mouseY = mouse[1];\n\n                    const node = getDataFromMouse(mouseX, mouseY);\n\n                    if(node) {\n                        vm.clickHandler(node[vm.chromosomeVariable], node[vm.positionVariable], node[vm.c]);\n                    }\n                });\n            }\n            \n        }\n    }\n}\n</script>\n\n<style>\n@import '../../style/plot-style.css';\n</style>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./GenomeTrackPlot.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./GenomeTrackPlot.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./GenomeTrackPlot.vue?vue&type=template&id=65449473&\"\nimport script from \"./GenomeTrackPlot.vue?vue&type=script&lang=js&\"\nexport * from \"./GenomeTrackPlot.vue?vue&type=script&lang=js&\"\nimport style0 from \"./GenomeTrackPlot.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('canvas',{staticClass:\"vdp-plot\",style:({\n            'height': (this.pHeight) + 'px', \n            'width': (this.pWidth) + 'px',\n            'top': (this.pMarginTop) + 'px',\n            'left': (this.pMarginLeft) + 'px'\n        }),attrs:{\"id\":this.plotElemID}}),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(this.highlightX1 !== null),expression:\"this.highlightX1 !== null\"}],staticClass:\"vdp-plot-highlight\",style:({\n            'height': (this.pHeight) + 'px', \n            'width': '1px',\n            'top': (this.pMarginTop) + 'px',\n            'left': (this.pMarginLeft + this.highlightX1 - 0.5) + 'px'\n        })}),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(this.highlightY1 !== null),expression:\"this.highlightY1 !== null\"}],staticClass:\"vdp-plot-highlight\",style:({\n            'height': '1px',\n            'width': (this.pWidth) + 'px',\n            'top': (this.pMarginTop + this.highlightY1 - 0.5) + 'px',\n            'left': (this.pMarginLeft) + 'px'\n        })}),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(this.highlightY2 !== null),expression:\"this.highlightY2 !== null\"}],staticClass:\"vdp-plot-highlight\",style:({\n            'height': '1px',\n            'width': (this.pWidth) + 'px',\n            'top': (this.pMarginTop + this.highlightY2 - 0.5) + 'px',\n            'left': (this.pMarginLeft) + 'px'\n        })}),_c('div',{staticClass:\"vdp-tooltip\",style:(this.tooltipPositionAttribute),attrs:{\"id\":this.tooltipElemID}},[_c('table',[_c('tr',[_c('th',[_vm._v(\"Chromosome\")]),_c('td',[_vm._v(_vm._s(this.tooltipInfo.chromosome))])]),_c('tr',[_c('th',[_vm._v(\"Position\")]),_c('td',[_vm._v(_vm._s(this.tooltipInfo.position))])]),_c('tr',[_c('th',[_vm._v(_vm._s(this._yScale.name))]),_c('td',[_vm._v(_vm._s(this.tooltipInfo.y))])]),(this.hasC)?_c('tr',[_c('th',[_vm._v(_vm._s(this._cScale.name))]),_c('td',[_vm._v(_vm._s(this.tooltipInfo.c))])]):_vm._e()])])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <div>\n        <canvas \n            :id=\"this.plotElemID\" \n            class=\"vdp-plot\" \n            :style=\"{\n                'height': (this.pHeight) + 'px', \n                'width': (this.pWidth) + 'px',\n                'top': (this.pMarginTop) + 'px',\n                'left': (this.pMarginLeft) + 'px'\n            }\"\n        ></canvas>\n        <div v-show=\"this.highlightX1 !== null\"  \n            :style=\"{\n                'height': (this.pHeight) + 'px', \n                'width': '1px',\n                'top': (this.pMarginTop) + 'px',\n                'left': (this.pMarginLeft + this.highlightX1 - 0.5) + 'px'\n            }\"\n            class=\"vdp-plot-highlight\"\n        ></div>\n        <div v-show=\"this.highlightY1 !== null\"  \n            :style=\"{\n                'height': '1px',\n                'width': (this.pWidth) + 'px',\n                'top': (this.pMarginTop + this.highlightY1 - 0.5) + 'px',\n                'left': (this.pMarginLeft) + 'px'\n            }\"\n            class=\"vdp-plot-highlight\"\n        ></div>\n        <div v-show=\"this.highlightY2 !== null\"  \n            :style=\"{\n                'height': '1px',\n                'width': (this.pWidth) + 'px',\n                'top': (this.pMarginTop + this.highlightY2 - 0.5) + 'px',\n                'left': (this.pMarginLeft) + 'px'\n            }\"\n            class=\"vdp-plot-highlight\"\n        ></div>\n        <div :id=\"this.tooltipElemID\" class=\"vdp-tooltip\" :style=\"this.tooltipPositionAttribute\">\n            <table>\n                <tr>\n                    <th>Chromosome</th>\n                    <td>{{ this.tooltipInfo.chromosome }}</td>\n                </tr>\n                <tr>\n                    <th>Position</th>\n                    <td>{{ this.tooltipInfo.position }}</td>\n                </tr>\n                <tr>\n                    <th>{{ this._yScale.name }}</th>\n                    <td>{{ this.tooltipInfo.y }}</td>\n                </tr>\n                <tr v-if=\"this.hasC\">\n                    <th>{{ this._cScale.name }}</th>\n                    <td>{{ this.tooltipInfo.c }}</td>\n                </tr>\n            </table>\n        </div>\n    </div>\n</template>\n\n<script>\nimport Two from '../../two.js';\nimport { scaleLinear as d3_scaleLinear, scaleBand as d3_scaleBand } from 'd3-scale';\nimport { select as d3_select } from 'd3-selection';\nimport { mouse as d3_mouse, event as d3_event } from 'd3';\nimport debounce from 'lodash/debounce';\nimport { TOOLTIP_DEBOUNCE, BAR_HEIGHT_MIN, BAR_MARGIN_DEFAULT } from './../../constants.js';\nimport { getDelaunay } from './../../helpers.js';\n\nimport AbstractScale from './../../scales/AbstractScale.js';\nimport GenomeScale from './../../scales/GenomeScale.js';\nimport DataContainer from './../../data/DataContainer.js';\n\nimport mixin from './mixin.js';\n\nlet uuid = 0;\n/**\n * @prop {string} g The genome-scale variable key.\n * @prop {string} c The event color-scale variable key. Takes precedence over eventColor prop.\n * @prop {string} y The y-scale variable key.\n * @prop {string} chromosomeVariable The axis chromosome variable key. Default: \"chromosome\"\n * @prop {string} positionVariable The axis position variable key. Default: \"position\"\n * @prop {number} eventWidth The width of each observation rectangle. Default: 4\n * @prop {string} eventColor The color of each observation. Default: \"#000000\". \n * @prop {string} backgroundColor The background color of the track. Optional.\n * @prop {string} lineColor The background color of the track. Optional.\n * @prop {number} barMarginY The value for the vertical margin between bars. Default: 2\n * // TODO: bar padding\n * @extends mixin\n * \n * @example\n * <GenomeMultiTrackPlot\n *      data=\"rand_genome_multi_data\"\n *      g=\"genome\" \n *      y=\"sample_id\"\n *      c=\"event_type\"\n *      :pWidth=\"500\"\n *      :pHeight=\"40\"\n *      :pMarginTop=\"10\"\n *      :pMarginLeft=\"10\"\n *      :pMarginRight=\"10\"\n *      :pMarginBottom=\"150\"\n *      :getData=\"getData\"\n *      :getScale=\"getScale\"\n *      :getStack=\"getStack\"\n *      :clickHandler=\"myClickHandler\"\n * />\n */\nexport default {\n    name: 'GenomeMultiTrackPlot',\n    mixins: [mixin],\n    props: {\n        'g': { // genome\n            required: true,\n            type: String\n        },\n        'y': {\n            required: true,\n            type: String\n        },\n        'c': { // event color\n            required: false,\n            type: String\n        },\n        'chromosomeVariable': {\n            type: String,\n            default: \"chromosome\"\n        },\n        'positionVariable': {\n            type: String,\n            default: \"position\"\n        },\n        'eventWidth': {\n            type: Number,\n            default: 4\n        },\n        'eventColor': {\n            type: String,\n            default: \"#aaa\"\n        },\n        'backgroundColor': {\n            required: false,\n            type: String\n        },\n        'lineColor': {\n            required: false,\n            type: String\n        },\n        'barMarginY': {\n            type: Number, \n            default: BAR_MARGIN_DEFAULT\n        }\n    },\n    data() {\n        return {\n            hasC: false,\n            tooltipInfo: {\n                chromosome: '',\n                position: '',\n                c: '',\n                y: ''\n            },\n            highlightGScales: null,\n            highlightYScale: null,\n            highlightX1: null,\n            highlightY1: null,\n            highlightY2: null,\n            barHeight: 0\n        }\n    },\n    beforeCreate() {\n        this.uuid = this.$options.name + uuid.toString();\n        uuid += 1;\n    },\n    created() {\n        // Set data\n        this._dataContainer = this.getData(this.data);\n        console.assert(this._dataContainer instanceof DataContainer);\n        // Set scale variables\n        this._gScale = this.getScale(this.g);\n        this._yScale = this.getScale(this.y);\n\n        console.assert(this._gScale instanceof GenomeScale);\n        console.assert(this._yScale instanceof AbstractScale);\n        \n        // Make assertions, but keep c scale optional\n        if(this.c !== undefined) {\n            this.hasC = true;\n            this._cScale = this.getScale(this.c);\n            console.assert(this._cScale instanceof AbstractScale);\n            this._cScale.onUpdate(this.uuid, this.drawPlot);\n        }\n        \n        // Subscribe to event publishers here\n        this._gScale.onUpdate(this.uuid, this.drawPlot);\n        this._yScale.onUpdate(this.uuid, this.drawPlot);\n\n        // Subscribe to data mutations here\n        this._dataContainer.onUpdate(this.uuid, this.drawPlot);\n\n        // Subscribe to highlights here\n        this._gScale.onHighlight(this.uuid, this.highlightG);\n        this._gScale.onHighlightDestroy(this.uuid, this.highlightDestroy);\n\n        this._yScale.onHighlight(this.uuid, this.highlightY);\n        this._yScale.onHighlightDestroy(this.uuid, this.highlightDestroy);\n    },\n    mounted() {\n        this.drawPlot();\n    },\n    beforeDestroy() {\n        // Unsubscribe to events\n        this._yScale.onUpdate(this.uuid, null);\n        this._gScale.onUpdate(this.uuid, null);\n        if(this.hasC) {\n            this._cScale.onUpdate(this.uuid, null);\n        }\n\n        // Unsubscribe to data mutations here\n        this._dataContainer.onUpdate(this.uuid, null);\n\n        // Unsubscribe to highlights here\n        this._yScale.onHighlight(this.uuid, null);\n        this._yScale.onHighlightDestroy(this.uuid, null);\n\n        this._gScale.onHighlight(this.uuid, null);\n        this._gScale.onHighlightDestroy(this.uuid, null);\n    },\n    watch: {\n        eventWidth() {\n            this.drawPlot();\n        },\n        eventColor() {\n            this.drawPlot();\n        },\n        backgroundColor() {\n            this.drawPlot();\n        },\n        lineColor() {\n            this.drawPlot();\n        },\n        barMarginY() {\n            this.drawPlot();\n        }\n    },\n    methods: {\n        tooltip: function(mouseX, mouseY, chromosome, position, y, c) {\n            // Set values\n            this.tooltipInfo.chromosome = chromosome;\n            this.tooltipInfo.position = position.toLocaleString();\n            this.tooltipInfo.y = this._yScale.toHuman(y);\n\n            if(this.hasC) {\n                this.tooltipInfo.c = this._cScale.toHuman(c);\n            }\n            // Set position\n            this.tooltipPosition.left = mouseX;\n            this.tooltipPosition.top = mouseY;\n            \n            // Dispatch highlights\n            this._gScale.emitHighlight(chromosome, position);\n            this._yScale.emitHighlight(y);\n            if(this.hasC) {\n                this._cScale.emitHighlight(c);\n            }\n        },\n        tooltipDestroy: function() {\n            this.tooltipHide();\n\n            // Destroy all highlights here\n            this._gScale.emitHighlightDestroy();\n            this._yScale.emitHighlightDestroy();\n            if(this.hasC) {\n                this._cScale.emitHighlightDestroy();\n            }\n        },\n        highlightG(chromosome, position) {\n            this.highlightX1 = this.highlightGScales[chromosome](position);\n        },\n        highlightY(val) {\n            this.highlightY1 = this.highlightYScale(val);\n            this.highlightY2 = this.highlightYScale(val) + this.barHeight;\n        },\n        highlightDestroy() {\n            this.highlightX1 = null;\n            this.highlightY1 = null;\n            this.highlightY2 = null;\n        },\n        drawPlot(d3Node) {\n            const vm = this;\n\n            if(vm._dataContainer.isLoading || vm._yScale.isLoading || (vm.hasC && vm._cScale.isLoading)) {\n                return;\n            }\n            \n            let data = vm._dataContainer.dataCopy;\n\n            let cScale;\n            if(this.hasC) {\n                cScale = this._cScale;\n            }\n            const gScale = this._gScale;\n            const yScale = this._yScale;\n\n            let chromosomes = gScale.chromosomesFiltered;\n\n            data = data.filter((d) => chromosomes.includes(d[vm.chromosomeVariable]));\n            data = data.filter((d) => yScale.domainFiltered.includes(d[vm.y]));\n\n            const g = {};\n            \n            let domains = gScale.getDomainsFiltered();\n            let chromosomeRatios = gScale.getChromosomeRatiosFiltered();\n            let chromosomeRatiosCumulative = gScale.getChromosomeRatiosCumulativeFiltered();\n\n            for(let i = 0; i < chromosomeRatios.length; i++) {\n                let currChromosome = chromosomes[i];\n                let currDomain = domains[i];\n                let currRatio = chromosomeRatios[i];\n                let currRatioCumulative = chromosomeRatiosCumulative[i];\n                g[currChromosome] = d3_scaleLinear()\n                    .domain(currDomain)\n                    .range([vm.pWidth * currRatioCumulative, vm.pWidth * (currRatioCumulative + currRatio)]);\n            }\n\n            vm.highlightGScales = g;\n\n            const y = d3_scaleBand()\n                .domain(yScale.domainFiltered.slice().reverse())\n                .range([vm.pHeight, 0]);\n\n            vm.highlightYScale = y;\n\n            const barHeight = vm.pHeight / yScale.domainFiltered.length;\n            vm.barHeight = barHeight;\n              \n            \n            /*\n             * Scale up the canvas\n             */\n            let canvas;\n            if(d3Node) {\n                canvas = d3Node;\n            } else {\n                canvas = d3_select(this.plotSelector);\n            }\n\n            const canvasNode = canvas.node();\n\n            if(!canvasNode) {\n                return;\n            }\n\n            const two = new Two({ \n                width: vm.pWidth, \n                height: vm.pHeight, \n                domElement: canvasNode\n            });\n\n            /*\n             * Draw the track\n             */\n            let barMarginY = vm.barMarginY;\n            if(barHeight - vm.barMarginY <= BAR_HEIGHT_MIN) {\n                barMarginY = 0;\n            }\n            // Draw track backgrounds\n            yScale.domainFiltered.forEach((yVal) => {\n                if(vm.backgroundColor !== undefined) {\n                    const trackBackgroundRect = two.makeRectangle(0 + vm.pWidth/2, y(yVal) + (barMarginY/2) + (barHeight - barMarginY)/2, vm.pWidth, barHeight - barMarginY);\n                    trackBackgroundRect.fill = vm.backgroundColor;\n                    trackBackgroundRect.noStroke();\n                }\n\n                if(vm.lineColor !== undefined) {\n                    const trackBackgroundLine = two.makeRectangle(0 + vm.pWidth/2, y(yVal) + (barHeight/2), vm.pWidth, 1);\n                    trackBackgroundLine.fill = vm.lineColor;\n                    trackBackgroundLine.noStroke();\n                }\n            });\n            // Draw events\n            data.forEach((d) => {\n                const xVal = g[d[vm.chromosomeVariable]](d[vm.positionVariable]) - (vm.eventWidth/2);\n                const yVal = y(d[vm.y]);\n                \n                const eventRect = two.makeRectangle(xVal + vm.eventWidth/2, yVal + (barMarginY/2) + (barHeight - barMarginY)/2, vm.eventWidth, barHeight - barMarginY);\n                eventRect.noStroke();\n                if(this.hasC) {\n                    eventRect.fill = cScale.color(d[vm.c]);\n                } else {\n                    eventRect.fill = vm.eventColor;\n                }\n            });\n\n            two.update();\n\n            if(d3Node) {\n                /* Ignore interactivity if SVG was passed in (for download). */\n                return;\n            }\n\n            /*\n             * Prepare for interactivity\n             */\n            // TODO: remove this offset thing once delaunay library is fixed\n            const points = data.map((d) => [g[d[vm.chromosomeVariable]](d[vm.positionVariable]), y(d[vm.y])]);\n            const delaunay = getDelaunay(points, true);\n            \n            /*\n             * Listen for mouse events\n             */\n            const getDataFromMouse = (mouseX, mouseY) => {\n                const i = delaunay.find(mouseX, mouseY);\n                return data[i];\n            };\n\n            const debouncedTooltipDestroy = debounce(vm.tooltipDestroy, TOOLTIP_DEBOUNCE);\n            canvas.on(\"mousemove\", () => {\n                const mouse = d3_mouse(canvasNode);\n                const mouseX = mouse[0];\n                const mouseY = mouse[1];\n\n                const node = getDataFromMouse(mouseX, mouseY);\n\n                const mouseViewportX = d3_event.clientX;\n                const mouseViewportY = d3_event.clientY;\n\n                if(node) {\n                    vm.tooltip(mouseViewportX, mouseViewportY, node[vm.chromosomeVariable], node[vm.positionVariable], node[vm.y], node[vm.c]); \n                } else {\n                    debouncedTooltipDestroy();\n                }\n            })\n            .on(\"mouseleave\", vm.tooltipDestroy);\n\n            if(vm.clickHandler !== undefined) {\n                canvas.on(\"click\", () => {\n                    const mouse = d3_mouse(canvasNode);\n                    const mouseX = mouse[0];\n                    const mouseY = mouse[1];\n\n                    const node = getDataFromMouse(mouseX, mouseY);\n\n                    if(node) {\n                        vm.clickHandler(node[vm.chromosomeVariable], node[vm.positionVariable], node[vm.y], node[vm.c]);\n                    }\n                });\n            }\n            \n        }\n    }\n}\n</script>\n\n<style>\n@import '../../style/plot-style.css';\n</style>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./GenomeMultiTrackPlot.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./GenomeMultiTrackPlot.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./GenomeMultiTrackPlot.vue?vue&type=template&id=5782f480&\"\nimport script from \"./GenomeMultiTrackPlot.vue?vue&type=script&lang=js&\"\nexport * from \"./GenomeMultiTrackPlot.vue?vue&type=script&lang=js&\"\nimport style0 from \"./GenomeMultiTrackPlot.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('canvas',{staticClass:\"vdp-plot\",style:({\n            'height': (this.pHeight) + 'px', \n            'width': (this.pWidth) + 'px',\n            'top': (this.pMarginTop) + 'px',\n            'left': (this.pMarginLeft) + 'px'\n        }),attrs:{\"id\":this.plotElemID}}),_c('canvas',{staticClass:\"vdp-plot-hidden\",style:({\n            'height': (this.pHeight) + 'px', \n            'width': (this.pWidth) + 'px',\n            'top': (this.pMarginTop) + 'px',\n            'left': (this.pMarginLeft) + 'px'\n        }),attrs:{\"id\":this.hiddenPlotElemID}}),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(this.highlightX1 !== null),expression:\"this.highlightX1 !== null\"}],staticClass:\"vdp-plot-highlight\",style:({\n            'height': (this.pHeight) + 'px', \n            'width': '1px',\n            'top': (this.pMarginTop) + 'px',\n            'left': (this.pMarginLeft + this.highlightX1 - 0.5) + 'px'\n        })}),_c('div',{staticClass:\"vdp-tooltip\",style:(this.tooltipPositionAttribute),attrs:{\"id\":this.tooltipElemID}},[_c('table',[_c('tr',[_c('th',[_vm._v(\"Chromosome\")]),_c('td',[_vm._v(_vm._s(this.tooltipInfo.chromosome))])]),_c('tr',[_c('th',[_vm._v(\"Position\")]),_c('td',[_vm._v(_vm._s(this.tooltipInfo.position))])]),_c('tr',[_c('th',[_vm._v(_vm._s(this._yScale.name))]),_c('td',[_vm._v(_vm._s(this.tooltipInfo.y))])]),_c('tr',[_c('th',[_vm._v(_vm._s(this._cScale.name))]),_c('td',[_vm._v(_vm._s(this.tooltipInfo.c))])])])])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <div>\n        <canvas \n            :id=\"this.plotElemID\" \n            class=\"vdp-plot\" \n            :style=\"{\n                'height': (this.pHeight) + 'px', \n                'width': (this.pWidth) + 'px',\n                'top': (this.pMarginTop) + 'px',\n                'left': (this.pMarginLeft) + 'px'\n            }\"\n        ></canvas>\n        <canvas \n            :id=\"this.hiddenPlotElemID\"\n            class=\"vdp-plot-hidden\" \n            :style=\"{\n                'height': (this.pHeight) + 'px', \n                'width': (this.pWidth) + 'px',\n                'top': (this.pMarginTop) + 'px',\n                'left': (this.pMarginLeft) + 'px'\n            }\"\n        ></canvas>\n        <div v-show=\"this.highlightX1 !== null\" \n            :style=\"{\n                'height': (this.pHeight) + 'px', \n                'width': '1px',\n                'top': (this.pMarginTop) + 'px',\n                'left': (this.pMarginLeft + this.highlightX1 - 0.5) + 'px'\n            }\"\n            class=\"vdp-plot-highlight\"\n        ></div>\n        <div :id=\"this.tooltipElemID\" class=\"vdp-tooltip\" :style=\"this.tooltipPositionAttribute\">\n            <table>\n                <tr>\n                    <th>Chromosome</th>\n                    <td>{{ this.tooltipInfo.chromosome }}</td>\n                </tr>\n                <tr>\n                    <th>Position</th>\n                    <td>{{ this.tooltipInfo.position }}</td>\n                </tr>\n                <tr>\n                    <th>{{ this._yScale.name }}</th>\n                    <td>{{ this.tooltipInfo.y }}</td>\n                </tr>\n                <tr>\n                    <th>{{ this._cScale.name }}</th>\n                    <td>{{ this.tooltipInfo.c }}</td>\n                </tr>\n            </table>\n        </div>\n    </div>\n</template>\n\n<script>\nimport Two from '../../two.js';\nimport { scaleLinear as d3_scaleLinear } from 'd3-scale';\nimport { stack as d3_stack, stackOrderNone as d3_stackOrderNone, stackOffsetNone as d3_stackOffsetNone } from 'd3-shape';\nimport { select as d3_select, create as d3_create } from 'd3-selection';\nimport { mouse as d3_mouse, event as d3_event } from 'd3';\nimport debounce from 'lodash/debounce';\nimport { TOOLTIP_DEBOUNCE } from './../../constants.js';\nimport { getRetinaRatio } from './../../helpers.js';\n\nimport AbstractScale from './../../scales/AbstractScale.js';\nimport GenomeScale from './../../scales/GenomeScale.js';\n\nimport DataContainer from './../../data/DataContainer.js';\n\nimport mixin from './mixin.js';\n\nlet uuid = 0;\n/**\n * @prop {string} g The genome-scale variable key.\n * @prop {string} y The y-scale variable key.\n * @prop {string} c The color-scale variable key.\n * @prop {string} chromosomeVariable The axis chromosome variable key. Default: \"chromosome\"\n * @prop {string} positionVariable The axis position variable key. Default: \"position\"\n * @extends mixin\n * \n * @example\n * <GenomeStackedBarPlot\n *      data=\"rainfall_data\"\n *      g=\"genome\" \n *      y=\"exposure\"\n *      c=\"signature\"\n *      :pWidth=\"500\"\n *      :pHeight=\"300\"\n *      :pMarginTop=\"10\"\n *      :pMarginLeft=\"120\"\n *      :pMarginRight=\"10\"\n *      :pMarginBottom=\"150\"\n *      :getData=\"getData\"\n *      :getScale=\"getScale\"\n *      :clickHandler=\"myClickHandler\"\n * />\n */\nexport default {\n    name: 'GenomeStackedBarPlot',\n    mixins: [mixin],\n    props: {\n        'g': {\n            type: String // genome\n        },\n        'y': {\n            type: String\n        },\n        'c': {\n            type: String // color\n        },\n        'chromosomeVariable': {\n            type: String,\n            default: \"chromosome\"\n        },\n        'positionVariable': {\n            type: String,\n            default: \"position\"\n        }\n    },\n    data() {\n        return {\n            tooltipInfo: {\n                chromosome: '',\n                position: '',\n                y: '',\n                c: ''\n            },\n            highlightGScales: null,\n            highlightX1: null\n        }\n    },\n    beforeCreate() {\n        this.uuid = this.$options.name + uuid.toString();\n        uuid += 1;\n    },\n    created() {\n        // Set data\n        this._dataContainer = this.getData(this.data);\n        console.assert(this._dataContainer instanceof DataContainer);\n        // Set scale variables\n        this._gScale = this.getScale(this.g);\n        this._yScale = this.getScale(this.y);\n        this._cScale = this.getScale(this.c);\n        console.assert(this._gScale instanceof GenomeScale);\n        console.assert(this._yScale instanceof AbstractScale);\n        console.assert(this._cScale instanceof AbstractScale);\n\n        // Subscribe to event publishers here\n        this._gScale.onUpdate(this.uuid, this.drawPlot);\n        this._yScale.onUpdate(this.uuid, this.drawPlot);\n        this._cScale.onUpdate(this.uuid, this.drawPlot);\n\n        // Subscribe to data mutations here\n        this._dataContainer.onUpdate(this.uuid, this.drawPlot);\n\n        // Subscribe to highlights here\n        this._gScale.onHighlight(this.uuid, this.highlightG);\n        this._gScale.onHighlightDestroy(this.uuid, this.highlightDestroy);\n\n    },\n    mounted() {\n        this.drawPlot();\n    },\n    beforeDestroy() {\n        // Unsubscribe to events\n        this._yScale.onUpdate(this.uuid, null);\n        this._gScale.onUpdate(this.uuid, null);\n        this._cScale.onUpdate(this.uuid, null);\n\n        // Unsubscribe to data mutations here\n        this._dataContainer.onUpdate(this.uuid, null);\n\n        // Unsubscribe to highlights here\n        this._gScale.onHighlight(this.uuid, null);\n        this._gScale.onHighlightDestroy(this.uuid, null);\n    },\n    methods: {\n        tooltip: function(mouseX, mouseY, chromosome, position, y, c) {\n            // Set values\n            this.tooltipInfo.chromosome = chromosome;\n            this.tooltipInfo.position = position.toLocaleString();\n\n            this.tooltipInfo.y = this._yScale.toHuman(y);\n            this.tooltipInfo.c = this._cScale.toHuman(c);\n\n            // Set position\n            this.tooltipPosition.left = mouseX;\n            this.tooltipPosition.top = mouseY;\n            \n            // Dispatch highlights\n            this._gScale.emitHighlight(chromosome, position);\n            this._yScale.emitHighlight(y);\n            this._cScale.emitHighlight(c);\n        },\n        tooltipDestroy: function() {\n            this.tooltipHide();\n\n            // Destroy all highlights here\n            this._gScale.emitHighlightDestroy();\n            this._yScale.emitHighlightDestroy();\n            this._cScale.emitHighlightDestroy();\n        },\n        highlightG(chromosome, position) {\n            this.highlightX1 = this.highlightGScales[chromosome](position);\n        },\n        highlightDestroy() {\n            this.highlightX1 = null;\n        },\n        drawPlot(d3Node) {\n            const vm = this;\n\n            if(vm._dataContainer.isLoading || vm._cScale.isLoading || vm._yScale.isLoading) {\n                return;\n            }\n            \n            let data = vm._dataContainer.dataCopy;\n\n            const cScale = vm._cScale;\n            const yScale = vm._yScale;\n            const gScale = vm._gScale;\n\n            let chromosomes = gScale.chromosomesFiltered;\n\n            data = data.filter((d) => chromosomes.includes(d[vm.chromosomeVariable]));\n\n\n            const g = {};\n            \n            let domains = gScale.getDomainsFiltered();\n            let chromosomeRatios = gScale.getChromosomeRatiosFiltered();\n            let chromosomeRatiosCumulative = gScale.getChromosomeRatiosCumulativeFiltered();\n\n            for(let i = 0; i < chromosomeRatios.length; i++) {\n                let currChromosome = chromosomes[i];\n                let currDomain = domains[i];\n                let currRatio = chromosomeRatios[i];\n                let currRatioCumulative = chromosomeRatiosCumulative[i];\n                g[currChromosome] = d3_scaleLinear()\n                    .domain(currDomain)\n                    .range([vm.pWidth * currRatioCumulative, vm.pWidth * (currRatioCumulative + currRatio)]);\n            }\n\n            vm.highlightGScales = g;\n            \n            const y = d3_scaleLinear()\n                .domain(yScale.domainFiltered)\n                .range([vm.pHeight, 0]);\n\n\n            vm.highlightYScale = y;\n\n            const stack = d3_stack()\n                .keys(cScale.domainFiltered.slice().reverse())\n                .value((d, key) => { return d[key] || 0; })\n                .order(d3_stackOrderNone)\n                .offset(d3_stackOffsetNone);\n\n            const series = stack(data);\n            \n            \n            /*\n             * Scale up the canvas\n             */\n            let canvas;\n            if(d3Node) {\n                canvas = d3Node;\n            } else {\n                canvas = d3_select(this.plotSelector);\n            }\n\n            const canvasNode = canvas.node();\n\n            if(!canvasNode) {\n                return;\n            }\n\n            const two = new Two({ \n                width: vm.pWidth, \n                height: vm.pHeight, \n                domElement: canvasNode\n            });\n\n            let canvasHidden, contextHidden;\n            try {\n                canvasHidden = d3_select(this.hiddenPlotSelector);\n                contextHidden = canvasHidden.node().getContext('2d');\n            } catch(e) {\n                canvasHidden = d3_create(\"canvas\");\n                contextHidden = canvasHidden.node().getContext('2d');\n            }\n\n            const ratio = getRetinaRatio(contextHidden);\n            const scaledWidth = vm.pWidth * ratio;\n            const scaledHeight = vm.pHeight * ratio;\n\n            canvasHidden\n                .attr(\"width\", scaledWidth)\n                .attr(\"height\", scaledHeight);\n            contextHidden.scale(ratio, ratio);\n\n            /*\n             * Set up the color mappings\n             */\n            const colToNode = {};\n\n            /*\n             * Generates the next color in the sequence, \n             * going from 0,0,0 to 255,255,255.\n             */\n            let nextCol = 1;\n            const genColor = () => {\n                let ret = [];\n                // via http://stackoverflow.com/a/15804183\n                if(nextCol < 16777215){\n                    ret.push(nextCol & 0xff); // R\n                    ret.push((nextCol & 0xff00) >> 8); // G \n                    ret.push((nextCol & 0xff0000) >> 16); // B\n\n                    nextCol += 20;\n                }\n                let col = \"rgb(\" + ret.join(',') + \")\";\n                return col;\n            }\n\n            /*\n             * Draw the bars\n             */\n            series.forEach((layer) => {\n                layer.forEach((d, i) => {\n                    const col = genColor();\n                    colToNode[col] = { \n                        \"chr\": d.data[vm.chromosomeVariable], \n                        \"pos\": d.data[vm.positionVariable], \n                        \"y\": d.data[layer[\"key\"]], \n                        \"c\": layer[\"key\"] \n                    };\n                    contextHidden.fillStyle = col;\n                    let height = y(d[0]) - y(d[1]);\n                    if(height + y(d[1]) > vm.pHeight) {\n                        height = vm.pHeight - y(d[1]);\n                    }\n                    const xVal = g[d.data[vm.chromosomeVariable]](d.data[vm.positionVariable]);\n                    // Compute width: get x val of next data point.\n                    // TODO: THIS ASSUMES SORTED DATA\n                    let barWidth = 0;\n                    if((i+1) < data.length) {\n                        const nextD = data[i+1];\n                        // Check for same chromosome\n                        if(nextD[vm.chromosomeVariable] === d.data[vm.chromosomeVariable]) {\n                            const nextXVal = g[nextD[vm.chromosomeVariable]](nextD[vm.positionVariable]);\n                            barWidth = nextXVal - xVal;\n                        }\n                    }\n                    if(barWidth === 0) {\n                        // Bar width has not yet been found, set to max of current chromosome scale\n                        barWidth = g[d.data[vm.chromosomeVariable]].range()[1] - xVal;\n                    }\n                    const rect = two.makeRectangle(xVal + barWidth/2, y(d[1]) + height/2, barWidth, height);\n                    rect.fill = cScale.color(layer[\"key\"]);\n                    rect.noStroke();\n\n                    contextHidden.fillRect(xVal, y(d[1]), barWidth, height);\n                });\n            });\n\n            two.update();\n\n            if(d3Node) {\n                /* Ignore interactivity if SVG was passed in (for download). */\n                return;\n            }\n\n            /*\n             * Listen for mouse events\n             */\n            const getDataFromMouse = (mouseX, mouseY) => {\n                // Get the corresponding pixel color on the hidden canvas\n                const col = contextHidden.getImageData(mouseX * ratio, mouseY * ratio, scaledWidth, scaledHeight).data;\n                const colString = \"rgb(\" + col[0] + \",\" + col[1] + \",\"+ col[2] + \")\";\n                // Look up the node in our map\n                return colToNode[colString];\n            };\n\n            const debouncedTooltipDestroy = debounce(vm.tooltipDestroy, TOOLTIP_DEBOUNCE);\n            canvas.on(\"mousemove\", () => {\n                const mouse = d3_mouse(canvasNode);\n                const mouseX = mouse[0];\n                const mouseY = mouse[1];\n\n                const node = getDataFromMouse(mouseX, mouseY);\n\n                const mouseViewportX = d3_event.clientX;\n                const mouseViewportY = d3_event.clientY;\n\n                if(node) {\n                    vm.tooltip(mouseViewportX, mouseViewportY, node[\"chr\"], node[\"pos\"], node[\"y\"], node[\"c\"]); \n                } else {\n                    debouncedTooltipDestroy();\n                }\n            })\n            .on(\"mouseleave\", vm.tooltipDestroy);\n            \n            if(vm.clickHandler !== undefined) {\n                canvas.on(\"click\", () => {\n                    const mouse = d3_mouse(canvasNode);\n                    const mouseX = mouse[0];\n                    const mouseY = mouse[1];\n\n                    const node = getDataFromMouse(mouseX, mouseY);\n\n                    if(node) {\n                        vm.clickHandler(node[\"chr\"], node[\"pos\"], node[\"y\"], node[\"c\"]); \n                    }\n                })\n            }\n        }\n    }\n}\n</script>\n\n<style>\n@import '../../style/plot-style.css';\n</style>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./GenomeStackedBarPlot.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./GenomeStackedBarPlot.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./GenomeStackedBarPlot.vue?vue&type=template&id=61dbb44e&\"\nimport script from \"./GenomeStackedBarPlot.vue?vue&type=script&lang=js&\"\nexport * from \"./GenomeStackedBarPlot.vue?vue&type=script&lang=js&\"\nimport style0 from \"./GenomeStackedBarPlot.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{staticClass:\"vdp-legend\",style:({\n            'height': this.computedHeight + 'px', \n            'width': this.computedWidth + 'px',\n            'top': this.computedTop + 'px',\n            'left': this.computedLeft + 'px'\n        }),attrs:{\"id\":this.legendElemID}}),(_vm.showColorScalePicker)?_c('ColorScalePicker',{attrs:{\"onSelect\":_vm.changeColorScale},on:{\"close\":function($event){_vm.showColorScalePicker = false}}}):_vm._e(),(_vm.showColorPicker)?_c('ColorPicker',{attrs:{\"onSelect\":_vm.changeColor,\"initialColor\":_vm.initialColor},on:{\"close\":function($event){_vm.showColorPicker = false}}}):_vm._e()],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('Modal',{attrs:{\"title\":\"Select a color scale\"},on:{\"close\":function($event){return _vm.$emit('close')}}},[_c('div',{attrs:{\"slot\":\"body\"},slot:\"body\"},[_c('div',{attrs:{\"id\":this.pickerElemID}})])])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{staticClass:\"modal\"},[_c('div',{staticClass:\"modal-inner\"},[_c('span',{staticClass:\"modal-close\",on:{\"click\":function($event){return _vm.$emit('close')}}},[_vm._v(\"Close\")]),_c('h3',[_vm._v(_vm._s(this.title))]),_vm._t(\"body\",[_vm._v(\"\\n                 default modal body\\n             \")])],2)]),_c('div',{staticClass:\"modal-background\",on:{\"click\":function($event){return _vm.$emit('close')}}})])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n   <div>\n        <div class=\"modal\">\n            <div class=\"modal-inner\">\n                <span class=\"modal-close\" v-on:click=\"$emit('close')\">Close</span>\n                <h3>{{ this.title }}</h3>\n                <slot name=\"body\">\n                    default modal body\n                </slot>\n            </div>\n        </div>\n        <div class=\"modal-background\" v-on:click=\"$emit('close')\"></div>\n    </div>\n</template>\n\n<script>\n\nexport default {\n    name: 'Modal',\n    props: {\n        title: {\n            type: String\n        }\n    },\n    data() {\n        return {\n            \n        }\n    },\n    watch: {\n        \n    },\n    created() {\n        \n    },\n    methods: {\n        \n    }\n}\n</script>\n\n<style scoped lang=\"scss\">\n\n.modal-background {\n    z-index: 199;\n    top: 0;\n    left: 0;\n    position: fixed;\n    width: 100%;\n    height: 100vh;\n    background-color: black;\n    opacity: 0.4;\n}\n.modal {\n    z-index: 200;\n    top: 10vh;\n    left: 10%;\n    height: 80vh;\n    width: 80%;\n    position: fixed;\n    background-color: white;\n    \n    .modal-inner {\n        box-sizing: border-box;\n        height: 100%;\n        overflow-y: scroll;\n        .modal-close {\n            position: absolute;\n            right: 1.5rem;\n            top: 1rem;\n            cursor: pointer;\n            user-select: none;\n        }\n        h3 {\n            margin-left: 1.5rem;\n        }\n    }\n}\n\n</style>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Modal.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Modal.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Modal.vue?vue&type=template&id=68b74996&scoped=true&\"\nimport script from \"./Modal.vue?vue&type=script&lang=js&\"\nexport * from \"./Modal.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Modal.vue?vue&type=style&index=0&id=68b74996&scoped=true&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"68b74996\",\n  null\n  \n)\n\nexport default component.exports","<template>\n    <div>\n        <Modal title=\"Select a color scale\" @close=\"$emit('close')\">\n            <div slot=\"body\">\n                <div :id=\"this.pickerElemID\"></div>\n            </div>\n        </Modal>\n    </div>\n</template>\n\n<script>\nimport Modal from './Modal.vue';\n\nimport { scaleBand as d3_scaleBand } from 'd3-scale';\n\nimport { select as d3_select } from 'd3-selection';\nimport debounce from 'lodash/debounce';\n\nimport AbstractScale from './../../scales/AbstractScale.js';\n\nlet uuid = 0;\nexport default {\n    name: 'ColorScalePicker',\n    components: {\n        Modal\n    },\n    props: {\n        onSelect: {\n            type: Function\n        }\n    },\n    beforeCreate() {\n        this.uuid = this.$options.name + uuid.toString();\n        uuid += 1;\n    },\n    beforeDestroy() {\n        this.removePicker();\n    },\n    mounted() {\n        const vm = this;\n        vm.drawPicker();\n\n        window.addEventListener('resize', debounce(vm.drawPicker, 250));\n        // TODO: remove event listener upon destroy\n    },\n    computed: {\n        pickerElemID: function() {\n            return 'picker_' + this.uuid;\n        },\n        pickerSelector: function() {\n            return \"#\" + this.pickerElemID;\n        }\n    },\n    methods: {\n        selectScale(scaleKey) {\n            this.onSelect(scaleKey);\n            this.$emit('close');\n        },\n        removePicker() {\n            d3_select(this.pickerSelector).select(\"svg\").remove();\n        },\n        drawPicker() {\n            const vm = this;\n            vm.removePicker();\n            \n            const rectHeight = 30;\n            const rectMarginY = 50;\n            const rectMarginX = 80;\n\n            const scales = AbstractScale.colorScales;\n            const scaleKeys = Object.keys(scales);\n\n            const numScales = scaleKeys.length;\n\n            const pickerHeight = (rectHeight+rectMarginY) * numScales;\n\n            /*\n             * Create the SVG elements\n             */\n            const div = d3_select(vm.pickerSelector);\n            const divNode = div.node();\n            if(divNode === null || divNode === undefined) {\n                return;\n            }\n            const divWidth = divNode.offsetWidth;\n            const container = d3_select(vm.pickerSelector)\n                .append(\"svg\")\n                    .attr(\"width\", divWidth)\n                    .attr(\"height\", pickerHeight);\n            \n            const defs = container.append(\"defs\");\n\n            const nStops = 10;\n            \n            for(let scaleKey of scaleKeys) {\n                const gradient = defs.append(\"linearGradient\")\n                    .attr(\"id\", vm.pickerElemID + '_' + scaleKey);\n                \n                for(let i = 0; i <= nStops; i++) {\n                    let stopColor = scales[scaleKey](i/nStops);\n                    gradient.append(\"stop\")\n                        .attr(\"offset\", ((100 / nStops) * i) + \"%\")\n                        .attr(\"stop-color\", stopColor);\n                }\n            }\n            \n            const picker = container.append(\"g\")\n                    .attr(\"class\", \"picker\");\n\n            const y = d3_scaleBand()\n                .domain(scaleKeys)\n                .range([pickerHeight, 0]);\n            \n            const items = picker.selectAll(\".csp-item\")\n                .data(scaleKeys)\n                .enter()\n                .append(\"g\")\n                    .attr(\"class\", \"csp-item\")\n                    .attr(\"transform\", (d) => \"translate(0,\" + y(d) + \")\");\n                \n            \n            items.append(\"rect\")\n                .attr(\"x\", rectMarginX/2)\n                .attr(\"y\", rectMarginY/2)\n                .attr(\"width\", divWidth - rectMarginX)\n                .attr(\"height\", rectHeight)\n                .attr(\"fill\", (d) => (\"url(\" + vm.pickerSelector + '_' + d + \")\"))\n                .style(\"cursor\", \"pointer\")\n                .on(\"click\", (d) => {\n                    this.selectScale(d);\n                });\n\n        }\n    }\n}\n</script>\n\n<style scoped lang=\"scss\">\n\n\n</style>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ColorScalePicker.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ColorScalePicker.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ColorScalePicker.vue?vue&type=template&id=362fd2e6&scoped=true&\"\nimport script from \"./ColorScalePicker.vue?vue&type=script&lang=js&\"\nexport * from \"./ColorScalePicker.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"362fd2e6\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('Modal',{attrs:{\"title\":\"Select a color\"},on:{\"close\":function($event){return _vm.$emit('close')}}},[_c('div',{attrs:{\"slot\":\"body\"},slot:\"body\"},[_c('div',{attrs:{\"id\":this.pickerElemID}}),_c('button',{on:{\"click\":_vm.selectColor}},[_vm._v(\"Select\")])])])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <div>\n        <Modal title=\"Select a color\" @close=\"$emit('close')\">\n            <div slot=\"body\">\n                <div :id=\"this.pickerElemID\"></div>\n                <button @click=\"selectColor\">Select</button>\n            </div>\n        </Modal>\n    </div>\n</template>\n\n<script>\nimport Modal from './Modal.vue';\n\nimport colorjoe from 'colorjoe';\n\nlet uuid = 0;\nexport default {\n    name: 'ColorPicker',\n    components: {\n        Modal\n    },\n    props: {\n        initialColor: {\n            type: String,\n            default: \"#000000\"\n        },\n        onSelect: {\n            type: Function\n        }\n    },\n    beforeCreate() {\n        this.uuid = this.$options.name + uuid.toString();\n        uuid += 1;\n    },\n    mounted() {\n        this.drawPicker();\n    },\n    beforeDestroy() {\n        this.removePicker(); \n    },\n    computed: {\n        pickerElemID: function() {\n            return 'picker_' + this.uuid;\n        },\n        pickerSelector: function() {\n            return \"#\" + this.pickerElemID;\n        }\n    },\n    methods: {\n        selectColor() {\n            const color = this.joe.get().css();\n            this.onSelect(color);\n            this.$emit('close');\n        },\n        removePicker() {\n            const vm = this;\n            if(vm.joe !== undefined) {\n                vm.joe.removeAllListeners();\n            }\n        },\n        drawPicker() {\n            const vm = this;\n            vm.joe = colorjoe.rgb(vm.pickerElemID, vm.initialColor);\n        }\n    }\n}\n</script>\n\n<style>\n\n@import '~colorjoe/css/colorjoe.css';\n.colorPicker {\n    background: #FFFFFF;\n    border: 0px solid #BBB;\n}\n</style>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ColorPicker.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ColorPicker.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ColorPicker.vue?vue&type=template&id=7f98529e&\"\nimport script from \"./ColorPicker.vue?vue&type=script&lang=js&\"\nexport * from \"./ColorPicker.vue?vue&type=script&lang=js&\"\nimport style0 from \"./ColorPicker.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\n    <div>\n        <div \n            :id=\"this.legendElemID\" \n            class=\"vdp-legend\" \n            :style=\"{\n                'height': this.computedHeight + 'px', \n                'width': this.computedWidth + 'px',\n                'top': this.computedTop + 'px',\n                'left': this.computedLeft + 'px'\n            }\"\n        ></div>\n\n        <ColorScalePicker \n            v-if=\"showColorScalePicker\" \n            @close=\"showColorScalePicker = false\" \n            :onSelect=\"changeColorScale\" \n        />\n        <ColorPicker \n            v-if=\"showColorPicker\" \n            @close=\"showColorPicker = false\" \n            :onSelect=\"changeColor\" \n            :initialColor=\"initialColor\" \n        />\n    </div>\n</template>\n\n<script>\nimport { scaleBand as d3_scaleBand } from 'd3-scale';\nimport { select as d3_select } from 'd3-selection';\nimport { create as d3_create } from 'd3';\n\n\nimport CategoricalScale from './../../scales/CategoricalScale.js';\nimport HistoryEvent from './../../history/HistoryEvent.js';\nimport HistoryStack from './../../history/HistoryStack.js';\n\nimport ColorScalePicker from './../modals/ColorScalePicker.vue';\nimport ColorPicker from './../modals/ColorPicker.vue';\n\nimport { COLOR_PICKER_PATH, EYE_PATH, EYE_DISABLED_PATH, PAINT_BUCKET_PATH, DOWNLOAD_PATH } from './../../icons.js';\nimport { EVENT_TYPES, EVENT_SUBTYPES } from '../../history/base-events.js';\n\nimport { downloadSvg } from './../../helpers.js';\n\nconst STYLES = Object.freeze({ \"BAR\": 1, \"DOT\": 2, \"LINE\": 3, \"SHAPE\": 4 });\n\nlet uuid = 0;\n/**\n * @prop {string} variable The legend variable key.\n * @prop {string} lStyle The legend style.\n * @prop {number} lWidth The legend width.\n * @prop {number} lItemHeight The height of each legend item.\n * @prop {function} getScale Function that takes a scale key string and returns a scale instance.\n * @prop {function} getStack Function that returns a HistoryStack instance.\n * @prop {function} clickHandler Function that is called when clicking on legend element names. Optional.\n * \n * @example\n * <CategoricalLegend\n *      variable=\"y\"\n *      lStyle=\"bar\"\n *      :lWidth=\"500\"\n *      :getScale=\"getScale\"\n *      :getStack=\"getStack\"\n *  />\n */\nexport default {\n    name: 'CategoricalLegend',\n    components: {\n        ColorScalePicker,\n        ColorPicker\n    },\n    props: {\n        'variable': {\n            type: String\n        },\n        'lStyle': {\n            type: String\n        },\n        'lWidth': {\n            type: Number\n        },\n        'lItemHeight': {\n            type: Number,\n            default: 20\n        },\n        'getScale': {\n            type: Function\n        },\n        'getStack': {\n            type: Function\n        },\n        'clickHandler': {\n            type: Function\n        },\n        'showDownloadButton': {\n            type: Boolean,\n            default: false\n        },\n        'downloadName': {\n            type: String,\n            default: 'legend'\n        }\n    },\n    data() {\n        return {\n            lHeight: 0,\n            highlightScale: null,\n            showColorScalePicker: false,\n            showColorPicker: false,\n            initialColor: \"#FFFFFF\",\n            changeColor: () => {}\n        }\n    },\n    computed: {\n        legendElemID: function() {\n            return 'l_ctgrcl_' + this.uuid;\n        },\n        legendSelector: function() {\n            return \"#\" + this.legendElemID;\n        },\n        computedHeight: function() {\n            return this.lHeight;\n        },\n        computedWidth: function() {\n            return this.lWidth;\n        },\n        computedTop: function() {\n            return 0;\n        },\n        computedLeft: function() {\n            return 0;\n        },\n        computedTranslateX: function() {\n            return 0;\n        },\n        computedTranslateY: function() {\n            return 0;\n        }\n    },\n    watch: {\n        lWidth: function () {\n            this.drawLegend();\n        }\n    },\n    beforeCreate() {\n        this.uuid = this.$options.name + uuid.toString();\n        uuid += 1;\n    },\n    created() {\n        // Set style enum value from style prop\n        let styleString = this.lStyle.toUpperCase();\n        console.assert(Object.keys(STYLES).includes(styleString));\n        this._style = STYLES[styleString];\n        \n        // Set the scale variable\n        this._varScale = this.getScale(this.variable);\n        console.assert(this._varScale instanceof CategoricalScale);\n        // Subscribe to event publishers\n        this._varScale.onUpdate(this.uuid, this.drawLegend);\n\n        this._stack = this.getStack();\n        console.assert(this._stack instanceof HistoryStack);\n\n        // Subscribe to highlights here\n        this._varScale.onHighlight(this.uuid, this.highlightY);\n        this._varScale.onHighlightDestroy(this.uuid, this.highlightDestroy);\n    },\n    mounted() {\n        this.drawLegend();\n    },\n    beforeDestroy() {\n        // Unsubscribe to events\n        this._varScale.onUpdate(this.uuid, null);\n        this._varScale.onHighlight(this.uuid, null);\n        this.removeLegend();\n    },\n    methods: {\n        removeLegend() {\n            d3_select(this.legendSelector).select(\"svg\").remove();\n        },\n        highlightY(value) {\n            if(this.highlightScale && this.highlightScale.domain().includes(value)) {\n                const highlightY1 = this.highlightScale(value) - 0.5;\n                const highlight = d3_select(this.legendSelector).select(\"svg\").select(\".highlight\");\n                highlight.attr(\"transform\", \"translate(0,\" + highlightY1 + \")\");\n                highlight.selectAll(\"rect\")\n                    .attr(\"fill-opacity\", 1);\n            }\n        },\n        highlightDestroy() {\n            const highlight = d3_select(this.legendSelector).select(\"svg\").select(\".highlight\");\n            highlight.selectAll(\"rect\")\n                .attr(\"fill-opacity\", 0);\n        },\n        changeColorScale(scaleKey) {\n            this._varScale.setColorScaleByKey(scaleKey);\n\n            this._stack.push(new HistoryEvent(\n                EVENT_TYPES.SCALE,\n                EVENT_SUBTYPES.SCALE_COLOR_SCALE,\n                this._varScale.id,\n                \"setColorScaleByKey\",\n                [scaleKey]\n            ));\n        },\n        drawLegend(d3Node) {\n            const vm = this;\n            vm.removeLegend();\n            \n            const varScale = vm._varScale;\n            const stack = vm._stack;\n\n            const titleHeight = 30\n            const textOffset = 30;\n            const marginX = 4;\n            const marginY = 2;\n            const buttonWidth = 16;\n\n            vm.lHeight = vm.lItemHeight * varScale.domain.length + titleHeight;\n\n            /*\n             * Create the SVG elements\n             */\n            let container;\n            if(d3Node) {\n                container = d3Node;\n            } else {\n                container = d3_select(vm.legendSelector)\n                    .append(\"svg\")\n                        .attr(\"width\", vm.computedWidth)\n                        .attr(\"height\", vm.computedHeight);\n            }\n            \n            const legend = container.append(\"g\")\n                    .attr(\"class\", \"legend\")\n                    .attr(\"transform\", \"translate(\" + vm.computedTranslateX + \",\" + vm.computedTranslateY + \")\");\n            \n            const title = legend.append(\"g\")\n                .attr(\"width\", vm.lWidth);\n            \n            const titleText = title.append(\"text\")\n                .style(\"text-anchor\", \"start\")\n                .style(\"font-family\", \"Avenir\")\n                .text(varScale.name);\n            const titleTextBbox = titleText.node().getBBox();\n            titleText.attr(\"transform\", \"translate(\" + 0 + \",\" + titleTextBbox.height + \")\");\n\n            \n\n            const legendInner = legend.append(\"g\")\n                .attr(\"class\", \"legend-inner\");\n\n            const highlight = legend.append(\"g\")\n                .attr(\"class\", \"highlight\")\n            \n            highlight.append(\"rect\")\n                .attr(\"x\", 0)\n                .attr(\"y\", 0)\n                .attr(\"width\", vm.lWidth)\n                .attr(\"height\", \"1px\")\n                .attr(\"fill\", \"black\")\n                .attr(\"fill-opacity\", 0)\n                .style(\"user-select\", \"none\");\n            \n            highlight.append(\"rect\")\n                .attr(\"x\", 0)\n                .attr(\"y\", 0)\n                .attr(\"width\", vm.lWidth)\n                .attr(\"height\", 1)\n                .attr(\"fill\", \"black\")\n                .attr(\"fill-opacity\", 0)\n                .attr(\"transform\", \"translate(0,\" + (vm.lItemHeight) + \")\")\n                .style(\"user-select\", \"none\");\n\n            \n            \n            const range = [vm.lHeight, titleHeight];\n\n            const scale = d3_scaleBand()\n                .domain(varScale.domain.slice().reverse())\n                .range(range);\n\n            vm.highlightScale = scale;\n\n            const items = legendInner.selectAll(\".legend-item\")\n                .data(scale.domain())\n                .enter()\n                .append(\"g\")\n                    .attr(\"class\", \"legend-item\")\n                    .attr(\"transform\", (d) => \"translate(0,\" + scale(d) + \")\")\n                    .on(\"mouseenter\", (d) => {\n                        if(varScale.domainFiltered.includes(d)) {\n                            varScale.emitHighlight(d);\n                        }\n                    })\n                    .on(\"mouseleave\", () => {\n                        varScale.emitHighlightDestroy();\n                    });\n            \n            items.append(\"rect\")\n                .attr(\"y\", 0)\n                .attr(\"x\", 0)\n                .attr(\"width\", vm.lWidth)\n                .attr(\"height\", scale.bandwidth())\n                .attr(\"fill\", \"transparent\");\n\n            const itemText = items.append(\"text\")\n                .style(\"text-anchor\", \"start\")\n                .style(\"font-family\", \"Avenir\")\n                .attr(\"y\", scale.bandwidth() - 5)\n                .attr(\"x\", (textOffset + marginX) + \"px\")\n                .style(\"font-size\", \"13px\")\n                .text((d) => varScale.toHuman(d))\n                .attr(\"fill\", (d) => varScale.domainFiltered.includes(d) ? \"black\" : \"silver\");\n            \n            if(vm.clickHandler !== undefined) {\n                itemText\n                    .style(\"text-decoration\", \"underline\")\n                    .style(\"cursor\", \"pointer\")\n                    .on(\"click\", (d) => {\n                        vm.clickHandler(d);\n                    });\n            }\n            \n            if(vm._style === STYLES.BAR) {\n                items.append(\"rect\")\n                    .attr(\"x\", marginX)\n                    .attr(\"y\", marginY)\n                    .attr(\"width\", textOffset - marginX) \n                    .attr(\"height\", scale.bandwidth() - 2*marginY)\n                    .attr(\"fill\", (d) => varScale.color(d))\n                    .attr(\"fill-opacity\", (d) => varScale.domainFiltered.includes(d) ? 1 : 0);\n            }\n\n            if(d3Node) {\n                return; /* SVG passed in to function, so not interactive */\n            }\n            \n            \n            // Action buttons\n\n            const colorScaleButtonG = title\n                .append(\"g\")\n                    .attr(\"width\", 20)\n                    .attr(\"height\", 20)\n                    .attr(\"transform\", \"translate(\" + (vm.lWidth - 1.5*marginX) + \",\" + (titleTextBbox.height/2) + \") scale(-0.7 0.7)\")\n                    .style(\"cursor\", \"pointer\")\n                    .on(\"click\", () => {\n                        vm.showColorScalePicker = true;\n                    });\n                colorScaleButtonG.append(\"rect\")\n                        .attr(\"width\", 20)\n                        .attr(\"height\", 20)\n                        .attr(\"fill\", \"transparent\");\n                colorScaleButtonG.append(\"path\")\n                    .attr(\"d\", PAINT_BUCKET_PATH)\n                    .attr(\"fill\", \"silver\");\n            \n            if(vm.showDownloadButton) {\n                const downloadButtonG = title\n                    .append(\"g\")\n                        .attr(\"width\", 20)\n                        .attr(\"height\", 20)\n                        .attr(\"transform\", \"translate(\" + (vm.lWidth - 2*(buttonWidth) + marginX/2) + \",\" + (titleTextBbox.height/2) + \") scale(-0.7 0.7)\")\n                        .style(\"cursor\", \"pointer\")\n                        .on(\"click\", vm.downloadViaButton);\n                    \n                    downloadButtonG.append(\"rect\")\n                        .attr(\"width\", 20)\n                        .attr(\"height\", 20)\n                        .attr(\"fill\", \"transparent\");\n                    downloadButtonG.append(\"path\")\n                        .attr(\"d\", DOWNLOAD_PATH)\n                        .attr(\"fill\", \"silver\");\n                        \n            }\n\n            const filterButtons = items.append(\"g\")\n                .attr(\"transform\", \"translate(\" + (vm.lWidth - 2*(buttonWidth + 2*marginX)) + \",0)\")\n                .style(\"cursor\", \"pointer\")\n                .on(\"click\", (d) => {\n                    let newDomainIndices;\n                    if(varScale.domainFiltered.includes(d)) {\n                        // Remove element\n                        let newDomain = varScale.domainFiltered.slice();\n                        newDomain.splice(newDomain.indexOf(d), 1);\n                        newDomainIndices = newDomain.map((el) => varScale.domain.indexOf(el));\n                    } else {\n                        // Add element\n                        let newDomain = varScale.domainFiltered.slice();\n                        newDomainIndices = newDomain.map((el) => varScale.domain.indexOf(el));\n                        newDomainIndices.push(varScale.domain.indexOf(d));\n                        // TODO: check if this sorting introduces other bugs. if so, maybe use (d, i)\n                        // and get the index of the legend item, then use that to add\n                        newDomainIndices.sort((a, b) => (a - b));\n                    }\n                    varScale.filter(newDomainIndices);\n                    stack.push(new HistoryEvent(\n                        EVENT_TYPES.SCALE,\n                        EVENT_SUBTYPES.SCALE_DOMAIN_FILTER,\n                        varScale.id,\n                        \"filter\",\n                        [newDomainIndices]\n                    ));\n                });\n\n            filterButtons.append(\"rect\")\n                .attr(\"x\", 0)\n                .attr(\"y\", marginY)\n                .attr(\"width\", buttonWidth)\n                .attr(\"height\", scale.bandwidth() - 2*marginY)\n                .attr(\"fill\", \"transparent\")\n                .attr(\"stroke\", \"transparent\")\n            \n            filterButtons.append(\"path\")\n                .attr(\"d\", (d) => (varScale.domainFiltered.includes(d) ? EYE_PATH : EYE_DISABLED_PATH))\n                .attr(\"y\", scale.bandwidth() - 5)\n                .attr(\"x\", buttonWidth / 2)\n                .attr(\"transform\", \"scale(0.8 0.8)\")\n                .attr(\"fill\", \"silver\");\n            \n\n            const colorButtons = items.append(\"g\")\n                .attr(\"transform\", \"translate(\" + (vm.lWidth - 1*(buttonWidth + 2*marginX)) + \",0)\")\n                .style(\"cursor\", \"pointer\")\n                .on(\"click\", (d) => {\n                    vm.initialColor = varScale.color(d);\n                    vm.changeColor = (color) => {\n                        const colorOverrides = varScale.colorOverrides;\n                        colorOverrides[d] = color;\n                        varScale.setColorOverrides(colorOverrides);\n\n                        stack.push(new HistoryEvent(\n                            EVENT_TYPES.SCALE,\n                            EVENT_SUBTYPES.SCALE_COLOR_OVERRIDE,\n                            varScale.id,\n                            \"setColorOverrides\",\n                            [Object.assign({}, colorOverrides)] \n                        ));\n                    };\n                    vm.showColorPicker = true;\n                });\n\n            colorButtons.append(\"rect\")\n                .attr(\"x\", 0)\n                .attr(\"y\", marginY)\n                .attr(\"width\", buttonWidth)\n                .attr(\"height\", scale.bandwidth() - 2*marginY)\n                .attr(\"fill\", \"transparent\")\n                .attr(\"stroke\", \"transparent\")\n            \n            colorButtons.append(\"path\")\n                .attr(\"d\", COLOR_PICKER_PATH)\n                .attr(\"y\", scale.bandwidth() - 5)\n                .attr(\"x\", buttonWidth / 2)\n                .attr(\"transform\", \"scale(0.7 0.7)\")\n                .attr(\"fill\", \"silver\");\n            \n        },\n        download() {\n            const svg = d3_create(\"svg\")\n                .attr(\"width\", this.computedWidth)\n                .attr(\"height\", this.computedHeight)\n                .attr(\"viewBox\", `0 0 ${this.computedWidth} ${this.computedHeight}`);\n            \n            this.drawLegend(svg);\n            this.drawLegend();\n\n            return svg;\n        },\n        downloadViaButton() {\n            const svg = this.download();\n            downloadSvg(svg, this.downloadName);\n        }\n    }\n}\n</script>\n\n<style>\n@import '../../style/axis-style.css';\n</style>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CategoricalLegend.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CategoricalLegend.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./CategoricalLegend.vue?vue&type=template&id=1a3c23b0&\"\nimport script from \"./CategoricalLegend.vue?vue&type=script&lang=js&\"\nexport * from \"./CategoricalLegend.vue?vue&type=script&lang=js&\"\nimport style0 from \"./CategoricalLegend.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"vdp-legend\",style:({\n        'height': this.computedHeight + 'px', \n        'width': this.computedWidth + 'px',\n        'top': this.computedTop + 'px',\n        'left': this.computedLeft + 'px',\n        'position': 'relative'\n    })},[_c('div',{style:({\n            'position': 'absolute'\n        }),attrs:{\"id\":this.legendElemID}}),_c('div',[_c('Axis',{ref:\"continuous-legend-axis\",attrs:{\"pWidth\":30,\"pHeight\":this.lHeight - 30,\"pMarginTop\":30,\"pMarginLeft\":0,\"pMarginRight\":this.lWidth - 100,\"pMarginBottom\":5,\"variable\":this.variable,\"side\":\"right\",\"getScale\":this.getScale,\"getStack\":this.getStack,\"showLabel\":false}})],1),(_vm.showColorScalePicker)?_c('ColorScalePicker',{attrs:{\"onSelect\":_vm.changeColorScale},on:{\"close\":function($event){_vm.showColorScalePicker = false}}}):_vm._e()],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <div\n        class=\"vdp-legend\" \n        :style=\"{\n            'height': this.computedHeight + 'px', \n            'width': this.computedWidth + 'px',\n            'top': this.computedTop + 'px',\n            'left': this.computedLeft + 'px',\n            'position': 'relative'\n        }\"\n    >\n        <div \n            :id=\"this.legendElemID\"\n            :style=\"{\n                'position': 'absolute'\n            }\"\n        ></div>\n        <div>\n            <Axis\n                ref=\"continuous-legend-axis\"\n                :pWidth=\"30\"\n                :pHeight=\"this.lHeight - 30\"\n                :pMarginTop=\"30\"\n                :pMarginLeft=\"0\"\n                :pMarginRight=\"this.lWidth - 100\"\n                :pMarginBottom=\"5\"\n                :variable=\"this.variable\"\n                side=\"right\" \n                :getScale=\"this.getScale\"\n                :getStack=\"this.getStack\"\n                :showLabel=\"false\"\n            />\n        </div>\n\n        <ColorScalePicker v-if=\"showColorScalePicker\" @close=\"showColorScalePicker = false\" :onSelect=\"changeColorScale\" />\n    </div>\n</template>\n\n<script>\nimport { scaleLinear as d3_scaleLinear } from 'd3-scale';\nimport { select as d3_select } from 'd3-selection';\nimport { mouse as d3_mouse, create as d3_create } from 'd3';\n\nimport ContinuousScale from './../../scales/ContinuousScale.js';\nimport HistoryEvent from './../../history/HistoryEvent.js';\nimport HistoryStack from './../../history/HistoryStack.js';\n\nimport ColorScalePicker from './../modals/ColorScalePicker.vue';\nimport Axis from './../axes/Axis.vue';\n\nimport { PAINT_BUCKET_PATH, DOWNLOAD_PATH } from './../../icons.js';\nimport { EVENT_TYPES, EVENT_SUBTYPES } from '../../history/base-events.js';\n\nimport { downloadSvg } from './../../helpers.js';\n\n\nlet uuid = 0;\n/**\n * @prop {string} variable The legend variable key.\n * @prop {number} lWidth The legend width.\n * @prop {function} getScale Function that takes a scale key string and returns a scale instance.\n * @prop {function} getStack Function that returns a HistoryStack instance.\n * @prop {boolean} disableBrushing Whether to disable brushing functionality and hide the zoomed-out \"context\" view. Default: false\n * \n * @example\n * <ContinuousLegend\n *      variable=\"y\"\n *      :lWidth=\"500\"\n *      :getScale=\"getScale\"\n *      :getStack=\"getStack\"\n *  />\n */\nexport default {\n    name: 'ContinuousLegend',\n    components: {\n        Axis,\n        ColorScalePicker\n    },\n    props: {\n        'variable': {\n            type: String\n        },\n        'lWidth': {\n            type: Number\n        },\n        'lItemHeight': {\n            type: Number,\n            default: 20\n        },\n        'getScale': {\n            type: Function\n        },\n        'getStack': {\n            type: Function\n        },\n        'showDownloadButton': {\n            type: Boolean,\n            default: false\n        },\n        'downloadName': {\n            type: String,\n            default: 'legend'\n        }\n    },\n    data() {\n        return {\n            lHeight: 200,\n            highlightScale: null,\n            showColorScalePicker: false\n        }\n    },\n    computed: {\n        legendElemID: function() {\n            return 'l_cntns_' + this.uuid;\n        },\n        legendSelector: function() {\n            return \"#\" + this.legendElemID;\n        },\n        gradientElemID: function() {\n            return 'l_cntns_g_' + this.uuid;\n        },\n        gradientSelector: function() {\n            return \"#\" + this.gradientElemID;\n        },\n        computedHeight: function() {\n            return this.lHeight;\n        },\n        computedWidth: function() {\n            return this.lWidth;\n        },\n        computedTop: function() {\n            return 0;\n        },\n        computedLeft: function() {\n            return 0;\n        },\n        computedTranslateX: function() {\n            return 0;\n        },\n        computedTranslateY: function() {\n            return 0;\n        }\n    },\n    watch: {\n        lWidth: function () {\n            this.drawLegend();\n        }\n    },\n    beforeCreate() {\n        this.uuid = this.$options.name + uuid.toString();\n        uuid += 1;\n    },\n    created() {\n        \n        // Set the scale variable\n        this._varScale = this.getScale(this.variable);\n        console.assert(this._varScale instanceof ContinuousScale);\n        // Subscribe to event publishers\n        this._varScale.onUpdate(this.uuid, this.drawLegend);\n\n        this._stack = this.getStack();\n        console.assert(this._stack instanceof HistoryStack);\n\n        // Subscribe to highlights here\n        this._varScale.onHighlight(this.uuid, this.highlightY);\n        this._varScale.onHighlightDestroy(this.uuid, this.highlightDestroy);\n    },\n    mounted() {\n        this.drawLegend();\n    },\n    beforeDestroy() {\n        // Unsubscribe to events\n        this._varScale.onUpdate(this.uuid, null);\n        this._varScale.onHighlight(this.uuid, null);\n        this.removeLegend();\n    },\n    methods: {\n        removeLegend() {\n            d3_select(this.legendSelector).select(\"svg\").remove();\n        },\n        highlightY(value) {\n            if(this.highlightScale) {\n                const highlightY1 = this.highlightScale(value) - 0.5;\n                const highlight = d3_select(this.legendSelector).select(\"svg\").select(\".highlight\");\n                highlight.attr(\"transform\", \"translate(0,\" + highlightY1 + \")\");\n                highlight.selectAll(\"rect\")\n                    .attr(\"fill-opacity\", 1);\n            }\n        },\n        highlightDestroy() {\n            const highlight = d3_select(this.legendSelector).select(\"svg\").select(\".highlight\");\n            highlight.selectAll(\"rect\")\n                .attr(\"fill-opacity\", 0);\n        },\n        changeColorScale(scaleKey) {\n            this._varScale.setColorScaleByKey(scaleKey);\n\n            this._stack.push(new HistoryEvent(\n                EVENT_TYPES.SCALE,\n                EVENT_SUBTYPES.SCALE_COLOR_SCALE,\n                this._varScale.id,\n                \"setColorScaleByKey\",\n                [scaleKey]\n            ));\n        },\n        drawLegend(d3Node) {\n            const vm = this;\n            vm.removeLegend();\n            \n            const varScale = vm._varScale;\n            //const stack = vm._stack;\n\n            const titleHeight = 30\n            const textOffset = 30;\n            const marginX = 4;\n            const buttonWidth = 16;\n\n            /*\n             * Create the SVG elements\n             */\n            let container;\n            if(d3Node) {\n                container = d3Node;\n            } else {\n                container = d3_select(vm.legendSelector)\n                    .append(\"svg\")\n                        .attr(\"width\", vm.computedWidth)\n                        .attr(\"height\", vm.computedHeight);\n            }\n            \n            const legend = container.append(\"g\")\n                    .attr(\"class\", \"legend\")\n                    .attr(\"transform\", \"translate(\" + vm.computedTranslateX + \",\" + vm.computedTranslateY + \")\");\n            \n            \n            const title = legend.append(\"g\")\n                .attr(\"width\", vm.lWidth);\n            \n            const titleText = title.append(\"text\")\n                .style(\"text-anchor\", \"start\")\n                .style(\"font-family\", \"Avenir\")\n                .text(varScale.name);\n            const titleTextBbox = titleText.node().getBBox();\n            titleText.attr(\"transform\", \"translate(\" + 0 + \",\" + titleTextBbox.height + \")\");\n                \n\n            const legendInner = legend.append(\"g\")\n                .attr(\"class\", \"legend-inner\");\n\n            const innerHeight = (vm.lHeight - titleHeight);\n\n            const gradient = container.append(\"defs\")\n                .append(\"linearGradient\")\n                    .attr(\"gradientTransform\", \"rotate(90)\")\n                    .attr(\"id\", vm.gradientElemID);\n\n            const nStops = 10;\n            const domainRange = varScale.domainFiltered[1] - varScale.domainFiltered[0];\n            const domainStep = domainRange/nStops;\n\n            for(let i = 0; i <= nStops; i++) {\n                let stopValue = varScale.domainFiltered[0] + (i*domainStep);\n                gradient.append(\"stop\")\n                    .attr(\"offset\", ((100 / nStops) * i) + \"%\")\n                    .attr(\"stop-color\", varScale.color(stopValue));\n            }\n            \n            legendInner.append(\"rect\")\n                .attr(\"x\", -textOffset)\n                .attr(\"y\", -innerHeight - titleHeight)\n                .attr(\"width\", (textOffset - marginX))\n                .attr(\"height\", innerHeight)\n                .attr(\"fill\", \"url(\" + vm.gradientSelector + \")\")\n                .attr(\"transform\", \"rotate(180)\");\n\n            if(d3Node) {\n                return; /* SVG passed in to function, so not interactive */\n            }\n\n            const colorScaleButtonG = title\n                .append(\"g\")\n                    .attr(\"width\", 20)\n                    .attr(\"height\", 20)\n                    .attr(\"transform\", \"translate(\" + (vm.lWidth - 1.5*marginX) + \",\" + (titleTextBbox.height/2) + \") scale(-0.7 0.7)\")\n                    .style(\"cursor\", \"pointer\")\n                    .on(\"click\", () => {\n                        vm.showColorScalePicker = true;\n                    });\n            \n            colorScaleButtonG.append(\"rect\")\n                .attr(\"width\", 20)\n                .attr(\"height\", 20)\n                .attr(\"fill\", \"transparent\");\n            colorScaleButtonG.append(\"path\")\n                .attr(\"d\", PAINT_BUCKET_PATH)\n                .attr(\"fill\", \"silver\")\n            \n            if(vm.showDownloadButton) {\n                const downloadButtonG = title\n                    .append(\"g\")\n                        .attr(\"width\", 20)\n                        .attr(\"height\", 20)\n                        .attr(\"transform\", \"translate(\" + (vm.lWidth - 2*(buttonWidth) + marginX/2) + \",\" + (titleTextBbox.height/2) + \") scale(-0.7 0.7)\")\n                        .style(\"cursor\", \"pointer\")\n                        .on(\"click\", vm.downloadViaButton);\n                    \n                    downloadButtonG.append(\"rect\")\n                        .attr(\"width\", 20)\n                        .attr(\"height\", 20)\n                        .attr(\"fill\", \"transparent\");\n                    downloadButtonG.append(\"path\")\n                        .attr(\"d\", DOWNLOAD_PATH)\n                        .attr(\"fill\", \"silver\");\n                        \n            }\n            \n            const hoverRect = legendInner.append(\"rect\")\n                .attr(\"x\", marginX)\n                .attr(\"y\", titleHeight)\n                .attr(\"width\", (textOffset - marginX))\n                .attr(\"height\", innerHeight)\n                .attr(\"fill\", \"transparent\");\n\n            const highlight = legendInner.append(\"g\")\n                .attr(\"class\", \"highlight\")\n                .attr(\"transform\", \"translate(\" + marginX + \",\" + titleHeight + \")\");\n            \n            highlight.append(\"rect\")\n                .attr(\"x\", marginX)\n                .attr(\"y\", titleHeight)\n                .attr(\"width\", (textOffset - marginX))\n                .attr(\"height\", \"1px\")\n                .attr(\"fill\", \"black\")\n                .attr(\"fill-opacity\", 0);\n            \n            \n            const hoverRectNode = hoverRect.node();\n\n            const y = d3_scaleLinear()\n                .domain(varScale.domainFiltered)\n                .range([innerHeight, 0]);\n\n            vm.highlightScale = y;\n            \n            \n\n            hoverRect.on(\"mousemove\", () => {\n                const mouse = d3_mouse(hoverRectNode);\n                const mouseY = mouse[1] - titleHeight;\n                const yVal = y.invert(mouseY);\n                if(yVal >= varScale.domain[0] && yVal <= varScale.domain[1]) {\n                    varScale.emitHighlight(yVal);\n                }\n            })\n            .on(\"mouseleave\", () => {\n                varScale.emitHighlightDestroy();\n            });\n        },\n        download() {\n            const svg = d3_create(\"svg\")\n                .attr(\"width\", this.computedWidth)\n                .attr(\"height\", this.computedHeight+5)\n                .attr(\"viewBox\", `0 0 ${this.computedWidth} ${this.computedHeight+5}`);\n            \n            this.drawLegend(svg);\n            this.drawLegend();\n\n            const axisWidth = this.lWidth - 100;\n            const axisHeight = this.lHeight - 30 + 5;\n\n            const axisSvg = d3_create(\"svg\")\n                .attr(\"width\", axisWidth)\n                .attr(\"height\", axisHeight);\n\n            this.$refs[\"continuous-legend-axis\"].drawAxis(axisSvg, true);\n            this.$refs[\"continuous-legend-axis\"].drawAxis();\n\n            const axisG = svg\n                .append(\"g\")\n                    .attr(\"class\", 'download-g-legend-axis')\n                    .attr(\"width\", axisWidth)\n                    .attr(\"height\", axisHeight)\n                    .attr(\"transform\", `translate(${30},${0})`);\n            \n            axisG.html(axisSvg.node().innerHTML);\n\n            return svg;\n        },\n        downloadViaButton() {\n            const svg = this.download();\n            downloadSvg(svg, this.downloadName);\n        }\n    }\n}\n</script>\n\n<style>\n@import '../../style/axis-style.css';\n</style>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ContinuousLegend.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ContinuousLegend.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ContinuousLegend.vue?vue&type=template&id=454016b6&\"\nimport script from \"./ContinuousLegend.vue?vue&type=script&lang=js&\"\nexport * from \"./ContinuousLegend.vue?vue&type=script&lang=js&\"\nimport style0 from \"./ContinuousLegend.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[(_vm.legendType === 'categorical')?_c('CategoricalLegend',{attrs:{\"variable\":_vm.variable,\"lStyle\":_vm.lStyle,\"lWidth\":_vm.lWidth,\"lItemHeight\":_vm.lItemHeight,\"getScale\":_vm.getScale,\"getStack\":_vm.getStack,\"clickHandler\":_vm.clickHandler,\"showDownloadButton\":_vm.showDownloadButton,\"downloadName\":_vm.downloadName}}):_vm._e(),(_vm.legendType === 'continuous')?_c('ContinuousLegend',{attrs:{\"variable\":_vm.variable,\"lWidth\":_vm.lWidth,\"lItemHeight\":_vm.lItemHeight,\"getScale\":_vm.getScale,\"getStack\":_vm.getStack,\"showDownloadButton\":_vm.showDownloadButton,\"downloadName\":_vm.downloadName}}):_vm._e()],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <div>\n        <CategoricalLegend v-if=\"legendType === 'categorical'\"\n            :variable=\"variable\"\n            :lStyle=\"lStyle\"\n            :lWidth=\"lWidth\"\n            :lItemHeight=\"lItemHeight\"\n            :getScale=\"getScale\"\n            :getStack=\"getStack\"\n            :clickHandler=\"clickHandler\"\n            :showDownloadButton=\"showDownloadButton\"\n            :downloadName=\"downloadName\"\n         />\n        <ContinuousLegend v-if=\"legendType === 'continuous'\" \n            :variable=\"variable\"\n            :lWidth=\"lWidth\"\n            :lItemHeight=\"lItemHeight\"\n            :getScale=\"getScale\"\n            :getStack=\"getStack\"\n            :showDownloadButton=\"showDownloadButton\"\n            :downloadName=\"downloadName\"\n        />\n    </div>\n</template>\n\n<script>\n\nimport ContinuousLegend from './ContinuousLegend.vue';\nimport CategoricalLegend from './CategoricalLegend.vue';\n\nimport ContinuousScale from '../../scales/ContinuousScale';\nimport CategoricalScale from '../../scales/CategoricalScale';\n\n\nlet uuid = 0;\n/**\n * @prop {string} variable The legend variable key.\n * Accepts any props that CategoricalLegend or ContinuousLegend accept and passes them on.\n * \n * @example\n * <Legend\n *      variable=\"y\"\n *      :lWidth=\"500\"\n *      :getScale=\"getScale\"\n *      :getStack=\"getStack\"\n *  />\n */\nexport default {\n    name: 'Legend',\n    components: {\n        ContinuousLegend,\n        CategoricalLegend\n    },\n    props: {\n        'variable': {\n            type: String\n        },\n        'lStyle': {\n            type: String\n        },\n        'lWidth': {\n            type: Number\n        },\n        'lItemHeight': {\n            type: Number,\n            default: 20\n        },\n        'getScale': {\n            type: Function\n        },\n        'getStack': {\n            type: Function\n        },\n        'clickHandler': {\n            type: Function\n        },\n        'showDownloadButton': {\n            type: Boolean,\n            default: false\n        },\n        'downloadName': {\n            type: String,\n            default: 'legend'\n        }\n    },\n    data() {\n        return {\n            legendType: null\n        }\n    },\n    beforeCreate() {\n        this.uuid = this.$options.name + uuid.toString();\n        uuid += 1;\n    },\n    created() {\n        // Set the scale variable\n        const varScale = this.getScale(this.variable);\n        if(varScale instanceof ContinuousScale) {\n            this.legendType = 'continuous';\n        } else if(varScale instanceof CategoricalScale) {\n            this.legendType = 'categorical';\n        }\n    }\n}\n</script>\n\n<style>\n</style>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Legend.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Legend.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Legend.vue?vue&type=template&id=340974d4&\"\nimport script from \"./Legend.vue?vue&type=script&lang=js&\"\nexport * from \"./Legend.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import { dispatch as d3_dispatch } from \"d3-dispatch-nosplit\";\n\nconst DISPATCH_RECEIVED_EXPECTED_DATA = \"received-expected-data\";\n\n/** \n * Represents an object on which an external consumer \n * may await data from a particular source.\n * \n * Schema for emitted data payloads:\n * {\n *   \"data\": {\n *     \"my-dataset-id\": <some data to pass to a DataContainer>,\n *     ...\n *   },\n *   \"scales\": {\n *     \"my-scale-id\": <some data to pass to a scale class>,\n *     ...\n *   }\n * }\n */\nexport default class Expected {\n\n    /**\n     * Create an expected data source object.\n     */\n    constructor() {\n        this._dispatch = d3_dispatch(DISPATCH_RECEIVED_EXPECTED_DATA);\n    }\n\n    /**\n     * Called by an external data provider that receives data.\n     */\n    emitData(data) {\n        this._dispatch.call(DISPATCH_RECEIVED_EXPECTED_DATA, null, data);\n    }\n\n    /**\n     * Subscribe to emitted data updates from this data source.\n     * @param {string} receiverType The class name of the subscriber, e.g. DataContainer or CategoricalScale\n     * @param {string} receiverId The id of the subscriber, e.g. proj_id or age\n     * @param {Function} callback The function to call when emitting received data.\n     */\n    onData(receiverType, receiverId, callback) {\n        this._dispatch.on(DISPATCH_RECEIVED_EXPECTED_DATA + \".\" + \"type-\" + receiverType + \",id-\" + receiverId, callback);\n    }\n}","import PlotContainer from './components/PlotContainer.vue';\nimport SortOptions from './components/SortOptions.vue';\n// Axes\nimport Axis from './components/axes/Axis.vue';\nimport GenomeAxis from './components/axes/GenomeAxis.vue';\nimport DendrogramAxis from './components/axes/DendrogramAxis.vue';\n\n// Plots\nimport StackedBarPlot from './components/plots/StackedBarPlot.vue';\nimport BarPlot from './components/plots/BarPlot.vue';\nimport ScatterPlot from './components/plots/ScatterPlot.vue';\nimport BoxPlot from './components/plots/BoxPlot.vue';\nimport MultiBoxPlot from './components/plots/MultiBoxPlot.vue';\nimport TrackPlot from './components/plots/TrackPlot.vue';\nimport RectPlot from './components/plots/RectPlot.vue';\nimport MultiDataRectPlot from './components/plots/MultiDataRectPlot.vue';\nimport MultiTrackPlot from './components/plots/MultiTrackPlot.vue';\nimport MultiDataTrackPlot from './components/plots/MultiDataTrackPlot.vue';\nimport HierarchicalMultiTrackPlot from './components/plots/HierarchicalMultiTrackPlot.vue';\nimport StratifiedBoxPlot from './components/plots/StratifiedBoxPlot.vue';\nimport DoubleStratifiedBoxPlot from './components/plots/DoubleStratifiedBoxPlot.vue';\nimport StratifiedScatterPlot from './components/plots/StratifiedScatterPlot.vue';\nimport DoubleStratifiedScatterPlot from './components/plots/DoubleStratifiedScatterPlot.vue';\nimport StratifiedSinaPlot from './components/plots/StratifiedSinaPlot.vue';\nimport DoubleStratifiedSinaPlot from './components/plots/DoubleStratifiedSinaPlot.vue';\nimport StratifiedKaplanMeierPlot from './components/plots/StratifiedKaplanMeierPlot.vue';\nimport CountBarPlot from './components/plots/CountBarPlot.vue';\n\n// Genome Plots\nimport GenomeScatterPlot from './components/plots/GenomeScatterPlot.vue';\nimport GenomeTrackPlot from './components/plots/GenomeTrackPlot.vue';\nimport GenomeMultiTrackPlot from './components/plots/GenomeMultiTrackPlot.vue';\nimport GenomeStackedBarPlot from './components/plots/GenomeStackedBarPlot.vue';\n\n// Legends\nimport CategoricalLegend from './components/legends/CategoricalLegend.vue';\nimport ContinuousLegend from './components/legends/ContinuousLegend.vue';\nimport Legend from './components/legends/Legend.vue';\n\n// Classes\nimport DataContainer from './data/DataContainer';\nimport HistoryStack, { computedParam } from './history/HistoryStack';\nimport HistoryEvent from './history/HistoryEvent';\nimport AbstractScale from './scales/AbstractScale';\nimport BinaryScale from './scales/BinaryScale';\nimport CategoricalScale from './scales/CategoricalScale';\nimport ContinuousScale from './scales/ContinuousScale';\nimport GenomeScale from './scales/GenomeScale';\nimport Expected from './expected';\n\n// Other\nimport { EVENT_TYPES, EVENT_SUBTYPES, EVENT_SUBTYPE_RESETS } from './history/base-events';\nimport { downloadSvg } from './helpers';\n\n// Reference: https://stackoverflow.com/questions/28282295/getbbox-of-svg-when-hidden\nconst _getBBox = SVGGraphicsElement.prototype.getBBox;   \nSVGGraphicsElement.prototype.getBBox = function() {\n  let bbox, tempDiv, tempSvg;\n  if (document.contains(this)) {\n    return _getBBox.apply(this);\n  } else {\n    tempDiv = document.createElement(\"div\");\n    tempDiv.setAttribute(\"style\", \"position:absolute; visibility:hidden; width:0; height:0\");\n    if (this.tagName === \"svg\") {\n      tempSvg = this.cloneNode(true);\n     } else {\n      tempSvg = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n      tempSvg.appendChild(this.cloneNode(true));\n    }\n    tempDiv.appendChild(tempSvg);\n    document.body.appendChild(tempDiv);\n    bbox = _getBBox.apply(tempSvg);\n    document.body.removeChild(tempDiv);\n    return bbox;\n  }\n};\n\nexport {\n    // Components\n    PlotContainer,\n    SortOptions,\n    Axis,\n    GenomeAxis,\n    DendrogramAxis,\n    StackedBarPlot,\n    BarPlot,\n    ScatterPlot,\n    BoxPlot,\n    MultiBoxPlot,\n    TrackPlot,\n    RectPlot,\n    MultiDataRectPlot,\n    MultiTrackPlot,\n    MultiDataTrackPlot,\n    HierarchicalMultiTrackPlot,\n    StratifiedBoxPlot,\n    DoubleStratifiedBoxPlot,\n    StratifiedScatterPlot,\n    DoubleStratifiedScatterPlot,\n    StratifiedSinaPlot,\n    DoubleStratifiedSinaPlot,\n    StratifiedKaplanMeierPlot,\n    CountBarPlot,\n    GenomeScatterPlot,\n    GenomeTrackPlot,\n    GenomeMultiTrackPlot,\n    GenomeStackedBarPlot,\n    CategoricalLegend,\n    ContinuousLegend,\n    Legend,\n    // Classes\n    DataContainer,\n    HistoryStack,\n    HistoryEvent,\n    AbstractScale,\n    BinaryScale,\n    CategoricalScale,\n    ContinuousScale,\n    GenomeScale,\n    Expected,\n    // Other\n    computedParam,\n    EVENT_TYPES, EVENT_SUBTYPES, EVENT_SUBTYPE_RESETS,\n    downloadSvg,\n}","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('button',{staticClass:\"stack-button\",attrs:{\"disabled\":!_vm.stack.canGoBack()},on:{\"click\":function($event){return _vm.stack.goBack()}}},[_vm._v(\"Back\")]),_c('button',{staticClass:\"stack-button\",attrs:{\"disabled\":!_vm.stack.canGoForward()},on:{\"click\":function($event){return _vm.stack.goForward()}}},[_vm._v(\"Forward\")]),_c('button',{staticClass:\"stack-button\",on:{\"click\":_vm.exportStack}},[_vm._v(\"Export (to console)\")]),_c('div',{staticClass:\"stack-elements\"},_vm._l((_vm.elementsReversed),function(el,index){return _c('div',{key:index},[(_vm.isCurrent(index))?_c('span',{staticClass:\"pointer\"},[_vm._v(\">\")]):_vm._e(),_vm._v(\"\\n          \"+_vm._s(el.toJson())+\"\\n      \")])}),0)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div>\n      <button @click=\"stack.goBack()\" :disabled=\"!stack.canGoBack()\" class=\"stack-button\">Back</button>\n      <button @click=\"stack.goForward()\" :disabled=\"!stack.canGoForward()\" class=\"stack-button\">Forward</button>\n      <button @click=\"exportStack\" class=\"stack-button\">Export (to console)</button>\n      <div class=\"stack-elements\">\n        <div v-for=\"(el, index) in elementsReversed\" :key=\"index\">\n            <span v-if=\"isCurrent(index)\" class=\"pointer\">&gt;</span>\n            {{ el.toJson() }}\n        </div>\n      </div>\n  </div>\n</template>\n\n<script>\n\nexport default {\n  name: 'Stack',\n  props: ['getStack'],\n  data() {\n      return {\n          elements: this.getStack()._stack,\n          stack: this.getStack()\n      }\n  },\n  computed: {\n      elementsReversed() {\n          return this.elements.slice().reverse();\n      }\n  },\n  methods: {\n      isCurrent(index) {\n          return (this.stack._pointer == (this.elements.length - 1 - index));\n      },\n      exportStack() {\n          console.log(JSON.stringify(this.stack.export()));\n      }\n  }\n}\n</script>\n\n<style>\n.stack-button {\n    z-index: 5;\n}\n.pointer {\n    color: red;\n}\n.stack-elements {\n    position: absolute;\n    bottom: 0;\n    width: 400px;\n}\n</style>\n","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./Stack.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./Stack.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Stack.vue?vue&type=template&id=416858b6&\"\nimport script from \"./Stack.vue?vue&type=script&lang=js&\"\nexport * from \"./Stack.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Stack.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\n  <div id=\"app\">\n    <h1>vueplotlib</h1>\n    <div class=\"top-links\">\n      <a href=\"https://keller-mark.github.io/vueplotlib/docs/\" title=\"Read the docs\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"40\" height=\"40\" viewBox=\"0 0 24 24\"><path d=\"M5.495 2h16.505v-2h-17c-1.657 0-3 1.343-3 3v18c0 1.657 1.343 3 3 3h17v-20h-16.505c-1.375 0-1.375-2 0-2zm.505 4h14v16h-14v-16z\"/></svg>\n      </a>\n      <a href=\"https://github.com/keller-mark/vueplotlib\" title=\"View on GitHub\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"40\" height=\"40\" viewBox=\"0 0 16 16\"><path fill-rule=\"evenodd\" d=\"M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0 0 16 8c0-4.42-3.58-8-8-8z\"/></svg>\n      </a>\n    </div>\n\n    <button @click=\"showStack = !showStack\" :style=\"{display: 'block'}\">Toggle Stack</button>\n\n    <PlotContainer\n      :pWidth=\"500\"\n      :pHeight=\"dynamicPlotHeight\"\n      :pMarginTop=\"100\"\n      :pMarginLeft=\"100\"\n      :pMarginRight=\"100\"\n      :pMarginBottom=\"100\"\n      :showDownloadButton=\"true\"\n      :downloadButtonOffsetX=\"0\"\n      :downloadButtonOffsetY=\"60\"\n      :showResizeButton=\"true\"\n    >\n      <Axis\n        slot=\"axisTop\"\n        variable=\"vue_x\"\n        side=\"top\" \n        :tickRotation=\"0\"\n        :getScale=\"getScale\"\n        :getStack=\"getStack\"\n      />\n      <Axis\n        slot=\"axisLeft\"\n        variable=\"vue_y\"\n        side=\"left\" \n        :tickRotation=\"-35\"\n        :getScale=\"getScale\"\n        :getStack=\"getStack\"\n      />\n      <ScatterPlot\n        slot=\"plot\"\n        data=\"vue_data\"\n        x=\"vue_x\"\n        y=\"vue_y\"\n        c=\"vue_c\"\n        :pointSize=\"5\"\n        :fillPoints=\"true\"\n        :getData=\"getData\"\n        :getScale=\"getScale\"\n        :clickHandler=\"exampleClickHandler\"\n      />\n      <Axis\n        slot=\"axisRight\"\n        variable=\"vue_y\"\n        side=\"right\" \n        :tickRotation=\"-35\"\n        :getScale=\"getScale\"\n        :getStack=\"getStack\"\n      />\n      <Axis\n        slot=\"axisBottom\"\n        variable=\"vue_x\"\n        side=\"bottom\" \n        :tickRotation=\"0\"\n        :getScale=\"getScale\"\n        :getStack=\"getStack\"\n      />\n    </PlotContainer>\n\n    <button @click=\"exampleDynamicPlotHeight\">Change Plot Height</button>\n\n    <h3>&lt;StackedBarPlot/&gt;</h3>\n    <PlotContainer\n      :pWidth=\"800\"\n      :pHeight=\"300\"\n      :pMarginTop=\"10\"\n      :pMarginLeft=\"120\"\n      :pMarginRight=\"10\"\n      :pMarginBottom=\"150\"\n      :showDownloadButton=\"true\"\n      :showResizeButton=\"true\"\n    >\n      <Axis\n        slot=\"axisLeft\"\n        variable=\"exposure\"\n        side=\"left\" \n        :tickRotation=\"-35\"\n        :getScale=\"getScale\"\n        :getStack=\"getStack\"\n      />\n      <StackedBarPlot\n        slot=\"plot\"\n        data=\"exposures_data\"\n        x=\"sample_id\" \n        y=\"exposure\"\n        c=\"signature\"\n        :getData=\"getData\"\n        :getScale=\"getScale\"\n        :clickHandler=\"exampleClickHandler\"\n      />\n      <Axis\n        slot=\"axisBottom\"\n        variable=\"sample_id\"\n        side=\"bottom\" \n        :tickRotation=\"-65\"\n        :maxCharacters=\"3\"\n        :getScale=\"getScale\"\n        :getStack=\"getStack\"\n      />\n    </PlotContainer>\n\n    <h3>&lt;CategoricalLegend/&gt;</h3>\n    <CategoricalLegend\n      variable=\"signature\"\n      lStyle=\"bar\"\n      :lWidth=\"250\"\n      :getScale=\"getScale\"\n      :getStack=\"getStack\"\n      :showDownloadButton=\"true\"\n    />\n\n    <h3>&lt;ContinuousLegend/&gt;</h3>\n    <ContinuousLegend\n      variable=\"age\"\n      :lWidth=\"250\"\n      :getScale=\"getScale\"\n      :getStack=\"getStack\"\n      :showDownloadButton=\"true\"\n    />\n\n    <h3>&lt;BarPlot/&gt;</h3>\n    <PlotContainer\n      :pWidth=\"500\"\n      :pHeight=\"300\"\n      :pMarginTop=\"10\"\n      :pMarginLeft=\"120\"\n      :pMarginRight=\"10\"\n      :pMarginBottom=\"100\"\n      :showDownloadButton=\"true\"\n    >\n      <Axis\n        slot=\"axisLeft\"\n        variable=\"exposure\"\n        side=\"left\" \n        :tickRotation=\"-35\"\n        :getScale=\"getScale\"\n        :getStack=\"getStack\"\n      />\n      <BarPlot\n        slot=\"plot\"\n        data=\"exposures_single_data\"\n        x=\"signature\" \n        y=\"exposure\"\n        :getData=\"getData\"\n        :getScale=\"getScale\"\n        :clickHandler=\"exampleClickHandler\"\n      />\n      <Axis\n        slot=\"axisBottom\"\n        variable=\"signature\"\n        side=\"bottom\" \n        :tickRotation=\"-65\"\n        :getScale=\"getScale\"\n        :getStack=\"getStack\"\n        :disableBrushing=\"true\"\n      />\n    </PlotContainer>\n\n    <PlotContainer\n      :pWidth=\"500\"\n      :pHeight=\"300\"\n      :pMarginTop=\"10\"\n      :pMarginLeft=\"120\"\n      :pMarginRight=\"10\"\n      :pMarginBottom=\"100\"\n      :showDownloadButton=\"true\"\n    >\n      <Axis\n        slot=\"axisLeft\"\n        variable=\"exposure_error\"\n        side=\"left\" \n        :tickRotation=\"-35\"\n        :getScale=\"getScale\"\n        :getStack=\"getStack\"\n      />\n      <BarPlot\n        slot=\"plot\"\n        data=\"exposures_error_single_data\"\n        x=\"signature\" \n        y=\"exposure_error\"\n        barColor=\"gray\"\n        :getData=\"getData\"\n        :getScale=\"getScale\"\n        :clickHandler=\"exampleClickHandler\"\n      />\n      <Axis\n        slot=\"axisBottom\"\n        variable=\"signature\"\n        side=\"bottom\" \n        :tickRotation=\"-65\"\n        :getScale=\"getScale\"\n        :getStack=\"getStack\"\n        :disableBrushing=\"true\"\n      />\n    </PlotContainer>\n\n    <h3>&lt;ScatterPlot/&gt;</h3>\n    <PlotContainer\n      :pWidth=\"500\"\n      :pHeight=\"300\"\n      :pMarginTop=\"10\"\n      :pMarginLeft=\"120\"\n      :pMarginRight=\"10\"\n      :pMarginBottom=\"100\"\n      :showDownloadButton=\"true\"\n    >\n      <Axis\n        slot=\"axisLeft\"\n        variable=\"y\"\n        side=\"left\" \n        :tickRotation=\"-35\"\n        :getScale=\"getScale\"\n        :getStack=\"getStack\"\n      />\n      <ScatterPlot\n        slot=\"plot\"\n        data=\"xy_data\"\n        x=\"x\"\n        y=\"y\"\n        :getData=\"getData\"\n        :getScale=\"getScale\"\n        :clickHandler=\"exampleClickHandler\"\n      />\n      <Axis\n        slot=\"axisBottom\"\n        variable=\"x\"\n        side=\"bottom\" \n        :tickRotation=\"0\"\n        :getScale=\"getScale\"\n        :getStack=\"getStack\"\n      />\n    </PlotContainer>\n\n    <button @click=\"exampleModifyData\">Modify data: double all coordinates</button>\n    <button @click=\"exampleModifyScale\">Modify scales: triple Y range</button>\n\n    <h3>&lt;ScatterPlot/&gt; and asynchronous data</h3>\n    <PlotContainer\n      :pWidth=\"500\"\n      :pHeight=\"300\"\n      :pMarginTop=\"10\"\n      :pMarginLeft=\"120\"\n      :pMarginRight=\"10\"\n      :pMarginBottom=\"100\"\n      :showDownloadButton=\"true\"\n    >\n      <Axis\n        slot=\"axisLeft\"\n        variable=\"Horsepower\"\n        side=\"left\" \n        :tickRotation=\"-35\"\n        :getScale=\"getScale\"\n        :getStack=\"getStack\"\n      />\n      <ScatterPlot\n        slot=\"plot\"\n        data=\"async_cars_data\"\n        x=\"Cylinders\"\n        y=\"Horsepower\"\n        :getData=\"getData\"\n        :getScale=\"getScale\"\n        :clickHandler=\"exampleClickHandler\"\n      />\n      <Axis\n        slot=\"axisBottom\"\n        variable=\"Cylinders\"\n        side=\"bottom\" \n        :tickRotation=\"0\"\n        :getScale=\"getScale\"\n        :getStack=\"getStack\"\n      />\n    </PlotContainer>\n\n    <h3>&lt;BoxPlot/&gt;</h3>\n    <PlotContainer\n      :pWidth=\"200\"\n      :pHeight=\"300\"\n      :pMarginTop=\"10\"\n      :pMarginLeft=\"120\"\n      :pMarginRight=\"10\"\n      :pMarginBottom=\"50\"\n      :showDownloadButton=\"true\"\n    >\n      <Axis\n        slot=\"axisLeft\"\n        variable=\"exposure\"\n        side=\"left\" \n        :tickRotation=\"-35\"\n        :getScale=\"getScale\"\n        :getStack=\"getStack\"\n      />\n      <BoxPlot\n        slot=\"plot\"\n        data=\"exposures_data\"\n        variable=\"COSMIC 3\"\n        y=\"exposure\"\n        o=\"sample_id\"\n        :getData=\"getData\"\n        :getScale=\"getScale\"\n        :clickHandler=\"exampleClickHandler\"\n        :drawOutliers=\"true\"\n      />\n    </PlotContainer>\n\n    <h3>&lt;MultiBoxPlot/&gt;</h3>\n    <PlotContainer\n      :pWidth=\"500\"\n      :pHeight=\"300\"\n      :pMarginTop=\"10\"\n      :pMarginLeft=\"120\"\n      :pMarginRight=\"10\"\n      :pMarginBottom=\"180\"\n      :showDownloadButton=\"true\"\n    >\n      <Axis\n        slot=\"axisLeft\"\n        variable=\"exposure\"\n        side=\"left\" \n        :tickRotation=\"-35\"\n        :getScale=\"getScale\"\n        :getStack=\"getStack\"\n      />\n      <MultiBoxPlot\n        slot=\"plot\"\n        data=\"exposures_data\"\n        x=\"signature\"\n        y=\"exposure\"\n        o=\"sample_id\"\n        :getData=\"getData\"\n        :getScale=\"getScale\"\n        :clickHandler=\"exampleClickHandler\"\n        :drawOutliers=\"true\"\n      />\n      <Axis\n        slot=\"axisBottom\"\n        variable=\"signature\"\n        side=\"bottom\" \n        :tickRotation=\"-65\"\n        :getScale=\"getScale\"\n        :getStack=\"getStack\"\n      />\n    </PlotContainer>\n\n    <h3>&lt;TrackPlot/&gt;</h3>\n    <PlotContainer\n      :pWidth=\"700\"\n      :pHeight=\"40\"\n      :pMarginTop=\"10\"\n      :pMarginLeft=\"40\"\n      :pMarginRight=\"10\"\n      :pMarginBottom=\"180\"\n      :showDownloadButton=\"true\"\n    >\n      <TrackPlot\n        slot=\"plot\"\n        data=\"clinical_data\"\n        x=\"sample_id\"\n        c=\"age\"\n        :getData=\"getData\"\n        :getScale=\"getScale\"\n        :clickHandler=\"exampleClickHandler\"\n      />\n      <Axis\n        slot=\"axisBottom\"\n        variable=\"sample_id\"\n        side=\"bottom\" \n        :tickRotation=\"-65\"\n        :getScale=\"getScale\"\n        :getStack=\"getStack\"\n      />\n    </PlotContainer>\n\n    <h3>&lt;GenomeScatterPlot/&gt;</h3>\n    <PlotContainer\n      :pWidth=\"800\"\n      :pHeight=\"500\"\n      :pMarginTop=\"20\"\n      :pMarginLeft=\"150\"\n      :pMarginRight=\"20\"\n      :pMarginBottom=\"80\"\n      :showDownloadButton=\"true\"\n    > \n      <Axis\n        slot=\"axisLeft\"\n        variable=\"mut_dist\"\n        side=\"left\"\n        :log=\"true\"\n        :getScale=\"getScale\"\n        :getStack=\"getStack\"\n      />\n      <GenomeScatterPlot\n        slot=\"plot\"\n        data=\"rainfall_data\"\n        g=\"genome\"\n        chromosomeVariable=\"chr\"\n        positionVariable=\"pos\"\n        c=\"cat\"\n        y=\"mut_dist\"\n        :log=\"true\"\n        :getData=\"getData\"\n        :getScale=\"getScale\"\n        :clickHandler=\"exampleClickHandler\"\n      />\n      <GenomeAxis\n        slot=\"axisBottom\"\n        scaleKey=\"genome\"\n        side=\"bottom\"\n        :getScale=\"getScale\"\n        :getStack=\"getStack\"\n      />\n    </PlotContainer>\n\n    <h3>&lt;GenomeStackedBarPlot/&gt;</h3>\n    <PlotContainer\n      :pWidth=\"800\"\n      :pHeight=\"500\"\n      :pMarginTop=\"20\"\n      :pMarginLeft=\"150\"\n      :pMarginRight=\"20\"\n      :pMarginBottom=\"80\"\n      :showDownloadButton=\"true\"\n    > \n      <Axis\n        slot=\"axisLeft\"\n        variable=\"genome_exposure\"\n        side=\"left\"\n        :getScale=\"getScale\"\n        :getStack=\"getStack\"\n      />\n      <GenomeStackedBarPlot\n        slot=\"plot\"\n        data=\"genome_bins_data\"\n        g=\"genome\"\n        chromosomeVariable=\"chr\"\n        positionVariable=\"pos\"\n        c=\"signature\"\n        y=\"genome_exposure\"\n        :getData=\"getData\"\n        :getScale=\"getScale\"\n        :clickHandler=\"exampleClickHandler\"\n      />\n      <GenomeAxis\n        slot=\"axisBottom\"\n        scaleKey=\"genome\"\n        side=\"bottom\"\n        :getScale=\"getScale\"\n        :getStack=\"getStack\"\n      />\n    </PlotContainer>\n\n    <h3>&lt;MultiTrackPlot/&gt;</h3>\n    <PlotContainer\n      :pWidth=\"780\"\n      :pHeight=\"500\"\n      :pMarginTop=\"20\"\n      :pMarginLeft=\"180\"\n      :pMarginRight=\"20\"\n      :pMarginBottom=\"20\"\n      :showDownloadButton=\"true\"\n    >\n      <Axis\n        slot=\"axisLeft\"\n        variable=\"signature\"\n        side=\"left\"\n        :getScale=\"getScale\"\n        :getStack=\"getStack\"\n      />\n      <MultiTrackPlot\n        slot=\"plot\"\n        data=\"exposures_data\"\n        x=\"sample_id\"\n        y=\"signature\"\n        c=\"exposure\"\n        :getScale=\"getScale\"\n        :getStack=\"getStack\"\n        :getData=\"getData\"\n        :clickHandler=\"exampleClickHandler\"\n      />\n    </PlotContainer>\n\n    <h3>&lt;DendrogramAxis/&gt; and &lt;HierarchicalMultiTrackPlot/&gt;</h3>\n    <PlotContainer\n      :pWidth=\"780\"\n      :pHeight=\"500\"\n      :pMarginTop=\"200\"\n      :pMarginLeft=\"180\"\n      :pMarginRight=\"20\"\n      :pMarginBottom=\"200\"\n      :showDownloadButton=\"true\"\n    >\n      <DendrogramAxis\n        slot=\"axisTop\"\n        variable=\"sample_id\"\n        h=\"clustering\"\n        side=\"top\"\n        :getScale=\"getScale\"\n        :getStack=\"getStack\"\n        :getData=\"getData\"\n        :clickHandler=\"exampleClickHandler\"\n      />\n      <Axis\n        slot=\"axisLeft\"\n        variable=\"signature\"\n        side=\"left\"\n        :getScale=\"getScale\"\n        :getStack=\"getStack\"\n      />\n      <HierarchicalMultiTrackPlot\n        slot=\"plot\"\n        data=\"exposures_data\"\n        h=\"clustering\"\n        x=\"sample_id\"\n        y=\"signature\"\n        c=\"exposure\"\n        :getScale=\"getScale\"\n        :getStack=\"getStack\"\n        :getData=\"getData\"\n        :clickHandler=\"exampleClickHandler\"\n      />\n      <DendrogramAxis\n        slot=\"axisBottom\"\n        variable=\"sample_id\"\n        h=\"clustering\"\n        side=\"bottom\"\n        :getScale=\"getScale\"\n        :getStack=\"getStack\"\n        :getData=\"getData\"\n        :clickHandler=\"exampleClickHandler\"\n      />\n    </PlotContainer>\n\n    <h3>&lt;GenomeTrackPlot/&gt;</h3>\n    <PlotContainer\n      :pWidth=\"800\"\n      :pHeight=\"40\"\n      :pMarginTop=\"20\"\n      :pMarginLeft=\"20\"\n      :pMarginRight=\"20\"\n      :pMarginBottom=\"80\"\n      :showDownloadButton=\"true\"\n    > \n      <GenomeTrackPlot\n        slot=\"plot\"\n        data=\"rand_genome_data\"\n        g=\"genome\"\n        eventColor=\"#fa0000\"\n        lineColor=\"#DCDCDC\"\n        chromosomeVariable=\"chr\"\n        positionVariable=\"pos\"\n        :getData=\"getData\"\n        :getScale=\"getScale\"\n        :clickHandler=\"exampleClickHandler\"\n      />\n      <GenomeAxis\n        slot=\"axisBottom\"\n        scaleKey=\"genome\"\n        side=\"bottom\"\n        :getScale=\"getScale\"\n        :getStack=\"getStack\"\n      />\n    </PlotContainer>\n\n    <h3>&lt;GenomeMultiTrackPlot/&gt;</h3>\n    <PlotContainer\n      :pWidth=\"800\"\n      :pHeight=\"700\"\n      :pMarginTop=\"20\"\n      :pMarginLeft=\"150\"\n      :pMarginRight=\"20\"\n      :pMarginBottom=\"80\"\n      :showDownloadButton=\"true\"\n    > \n      <Axis\n        slot=\"axisLeft\"\n        variable=\"sample_id\"\n        side=\"left\"\n        :getScale=\"getScale\"\n        :getStack=\"getStack\"\n      />\n      <GenomeMultiTrackPlot\n        slot=\"plot\"\n        data=\"rand_genome_multi_data\"\n        g=\"genome\"\n        c=\"e_type\"\n        y=\"sample_id\"\n        lineColor=\"#DCDCDC\"\n        chromosomeVariable=\"chr\"\n        positionVariable=\"pos\"\n        :getData=\"getData\"\n        :getScale=\"getScale\"\n        :clickHandler=\"exampleClickHandler\"\n      />\n      <GenomeAxis\n        slot=\"axisBottom\"\n        scaleKey=\"genome\"\n        side=\"bottom\"\n        :getScale=\"getScale\"\n        :getStack=\"getStack\"\n      />\n    </PlotContainer>\n\n\n    <h3>&lt;SortOptions/&gt;</h3>\n    <SortOptions \n      variable=\"sample_id\" \n      data=\"exposures_data\" \n      optionScale=\"signature\"\n      comparatorScale=\"exposure\"\n      :getScale=\"getScale\" \n      :getData=\"getData\"\n      :getStack=\"getStack\"\n    />\n    <SortOptions \n      variable=\"sample_id\" \n      data=\"clinical_data\"\n      optionVariable=\"age\" \n      optionName=\"Age\" \n      comparatorScale=\"age\"\n      :getScale=\"getScale\" \n      :getData=\"getData\"\n      :getStack=\"getStack\"\n    />\n    <h3>&lt;StratifiedBoxPlot/&gt;</h3>\n    <PlotContainer\n      :pWidth=\"500\"\n      :pHeight=\"300\"\n      :pMarginTop=\"10\"\n      :pMarginLeft=\"120\"\n      :pMarginRight=\"10\"\n      :pMarginBottom=\"180\"\n    >\n      <Axis\n        slot=\"axisLeft\"\n        variable=\"exposure\"\n        side=\"left\" \n        :tickRotation=\"-35\"\n        :getScale=\"getScale\"\n        :getStack=\"getStack\"\n      />\n      <StratifiedBoxPlot\n        slot=\"plot\"\n        data=\"exposures_data\"\n        variable=\"COSMIC 1\"\n        s=\"clinical_data\"\n        x=\"sex\"\n        y=\"exposure\"\n        o=\"sample_id\"\n        :getData=\"getData\"\n        :getScale=\"getScale\"\n        :clickHandler=\"exampleClickHandler\"\n        :drawOutliers=\"true\"\n      />\n      <Axis\n        slot=\"axisBottom\"\n        variable=\"sex\"\n        side=\"bottom\" \n        :tickRotation=\"-65\"\n        :getScale=\"getScale\"\n        :getStack=\"getStack\"\n      />\n    </PlotContainer>\n\n    <h3>&lt;DoubleStratifiedBoxPlot/&gt;</h3>\n    <PlotContainer\n      :pWidth=\"500\"\n      :pHeight=\"300\"\n      :pMarginTop=\"10\"\n      :pMarginLeft=\"120\"\n      :pMarginRight=\"10\"\n      :pMarginBottom=\"180\"\n      :showDownloadButton=\"true\"\n    >\n      <Axis\n        slot=\"axisLeft\"\n        variable=\"exposure\"\n        side=\"left\" \n        :tickRotation=\"-35\"\n        :getScale=\"getScale\"\n        :getStack=\"getStack\"\n      />\n      <DoubleStratifiedBoxPlot\n        slot=\"plot\"\n        data=\"exposures_data\"\n        variable=\"COSMIC 1\"\n        s=\"clinical_data\"\n        x=\"sex\"\n        s2=\"clinical_data\"\n        x2=\"sex\"\n        y=\"exposure\"\n        o=\"sample_id\"\n        :getData=\"getData\"\n        :getScale=\"getScale\"\n        :clickHandler=\"exampleClickHandler\"\n        :drawOutliers=\"true\"\n      />\n      <Axis\n        slot=\"axisBottom\"\n        variable=\"sex\"\n        side=\"bottom\" \n        :tickRotation=\"-65\"\n        :getScale=\"getScale\"\n        :getStack=\"getStack\"\n      />\n    </PlotContainer>\n\n    <h3>&lt;StratifiedSinaPlot/&gt;</h3>\n    <PlotContainer\n      :pWidth=\"500\"\n      :pHeight=\"300\"\n      :pMarginTop=\"10\"\n      :pMarginLeft=\"120\"\n      :pMarginRight=\"10\"\n      :pMarginBottom=\"180\"\n      :showDownloadButton=\"true\"\n    >\n      <Axis\n        slot=\"axisLeft\"\n        variable=\"exposure\"\n        side=\"left\" \n        :tickRotation=\"-35\"\n        :getScale=\"getScale\"\n        :getStack=\"getStack\"\n      />\n      <StratifiedSinaPlot\n        slot=\"plot\"\n        data=\"exposures_data\"\n        variable=\"COSMIC 1\"\n        s=\"clinical_data\"\n        x=\"sex\"\n        y=\"exposure\"\n        o=\"sample_id\"\n        :getData=\"getData\"\n        :getScale=\"getScale\"\n        :clickHandler=\"exampleClickHandler\"\n        :fillPoints=\"true\"\n        strokeColor=\"gray\"\n      />\n      <Axis\n        slot=\"axisBottom\"\n        variable=\"sex\"\n        side=\"bottom\" \n        :tickRotation=\"-65\"\n        :getScale=\"getScale\"\n        :getStack=\"getStack\"\n      />\n    </PlotContainer>\n\n    <h3>&lt;DoubleStratifiedSinaPlot/&gt;</h3>\n    <PlotContainer\n      :pWidth=\"500\"\n      :pHeight=\"300\"\n      :pMarginTop=\"10\"\n      :pMarginLeft=\"120\"\n      :pMarginRight=\"10\"\n      :pMarginBottom=\"180\"\n      :showDownloadButton=\"true\"\n    >\n      <Axis\n        slot=\"axisLeft\"\n        variable=\"exposure\"\n        side=\"left\" \n        :tickRotation=\"-35\"\n        :getScale=\"getScale\"\n        :getStack=\"getStack\"\n      />\n      <DoubleStratifiedSinaPlot\n        slot=\"plot\"\n        data=\"exposures_data\"\n        variable=\"COSMIC 1\"\n        s=\"clinical_data\"\n        x=\"sex\"\n        s2=\"clinical_data\"\n        x2=\"sex\"\n        y=\"exposure\"\n        o=\"sample_id\"\n        :getData=\"getData\"\n        :getScale=\"getScale\"\n        :clickHandler=\"exampleClickHandler\"\n        :fillPoints=\"true\"\n        strokeColor=\"gray\"\n      />\n      <Axis\n        slot=\"axisBottom\"\n        variable=\"sex\"\n        side=\"bottom\" \n        :tickRotation=\"-65\"\n        :getScale=\"getScale\"\n        :getStack=\"getStack\"\n      />\n    </PlotContainer>\n\n    <h3>&lt;StratifiedScatterPlot/&gt;</h3>\n    <PlotContainer\n      :pWidth=\"500\"\n      :pHeight=\"300\"\n      :pMarginTop=\"10\"\n      :pMarginLeft=\"120\"\n      :pMarginRight=\"10\"\n      :pMarginBottom=\"180\"\n      :showDownloadButton=\"true\"\n    >\n      <Axis\n        slot=\"axisLeft\"\n        variable=\"exposure\"\n        side=\"left\" \n        :tickRotation=\"-35\"\n        :getScale=\"getScale\"\n        :getStack=\"getStack\"\n      />\n      <StratifiedScatterPlot\n        slot=\"plot\"\n        data=\"exposures_data\"\n        variable=\"COSMIC 1\"\n        s=\"clinical_data\"\n        x=\"age\"\n        y=\"exposure\"\n        o=\"sample_id\"\n        :fillPoints=\"true\"\n        strokeColor=\"gray\"\n        :getData=\"getData\"\n        :getScale=\"getScale\"\n        :clickHandler=\"exampleClickHandler\"\n      />\n      <Axis\n        slot=\"axisBottom\"\n        variable=\"age\"\n        side=\"bottom\" \n        :getScale=\"getScale\"\n        :getStack=\"getStack\"\n      />\n    </PlotContainer>\n\n    <h3>&lt;DoubleStratifiedScatterPlot/&gt;</h3>\n    <PlotContainer\n      :pWidth=\"500\"\n      :pHeight=\"300\"\n      :pMarginTop=\"10\"\n      :pMarginLeft=\"120\"\n      :pMarginRight=\"10\"\n      :pMarginBottom=\"180\"\n      :showDownloadButton=\"true\"\n    >\n      <Axis\n        slot=\"axisLeft\"\n        variable=\"exposure\"\n        side=\"left\" \n        :tickRotation=\"-35\"\n        :getScale=\"getScale\"\n        :getStack=\"getStack\"\n      />\n      <DoubleStratifiedScatterPlot\n        slot=\"plot\"\n        data=\"exposures_data\"\n        variable=\"COSMIC 1\"\n        s=\"clinical_data\"\n        x=\"age\"\n        s2=\"clinical_data\"\n        x2=\"sex\"\n        y=\"exposure\"\n        o=\"sample_id\"\n        :fillPoints=\"true\"\n        strokeColor=\"gray\"\n        :getData=\"getData\"\n        :getScale=\"getScale\"\n        :clickHandler=\"exampleClickHandler\"\n      />\n      <Axis\n        slot=\"axisBottom\"\n        variable=\"age\"\n        side=\"bottom\" \n        :getScale=\"getScale\"\n        :getStack=\"getStack\"\n      />\n    </PlotContainer>\n\n    <h3>&lt;RectPlot/&gt;</h3>\n    <PlotContainer\n      :pWidth=\"50\"\n      :pHeight=\"30\"\n      :pMarginTop=\"5\"\n      :pMarginLeft=\"40\"\n      :pMarginRight=\"40\"\n      :pMarginBottom=\"50\"\n      :showDownloadButton=\"true\"\n    >\n      <RectPlot\n        slot=\"plot\"\n        data=\"clinical_data\"\n        z=\"sample_id\"\n        o=\"SA569315\"\n        c=\"age\"\n        :getData=\"getData\"\n        :getScale=\"getScale\"\n        :clickHandler=\"exampleClickHandler\"\n      />\n    </PlotContainer>\n\n    <h3>&lt;MultiDataRectPlot/&gt; with value labels</h3>\n    <PlotContainer\n      :pWidth=\"200\"\n      :pHeight=\"60\"\n      :pMarginTop=\"5\"\n      :pMarginLeft=\"100\"\n      :pMarginRight=\"40\"\n      :pMarginBottom=\"50\"\n      :showDownloadButton=\"true\"\n    >\n      <Axis\n        slot=\"axisLeft\"\n        variable=\"multi_rect_plot_scale\"\n        side=\"left\" \n        :disableBrushing=\"true\"\n        :tickRotation=\"0\"\n        :getScale=\"getScale\"\n        :getStack=\"getStack\"\n      />\n      <MultiDataRectPlot\n        slot=\"plot\"\n        :dataArray=\"['clinical_data', 'clinical_data']\"\n        :cArray=\"['age', 'sex']\"\n        z=\"sample_id\"\n        o=\"SA569952\"\n        :disableText=\"false\"\n        :disableTooltip=\"true\"\n        :rectSize=\"30\"\n        :textSize=\"14\"\n        textColor=\"#2c3e50\"\n        :getData=\"getData\"\n        :getScale=\"getScale\"\n        :clickHandler=\"exampleClickHandler\"\n      />\n    </PlotContainer>\n\n    <h3>&lt;MultiDataTrackPlot/&gt;</h3>\n    <PlotContainer\n      :pWidth=\"700\"\n      :pHeight=\"60\"\n      :pMarginTop=\"10\"\n      :pMarginLeft=\"100\"\n      :pMarginRight=\"10\"\n      :pMarginBottom=\"180\"\n      :showDownloadButton=\"true\"\n    >\n      <Axis\n        slot=\"axisLeft\"\n        variable=\"multi_rect_plot_scale\"\n        side=\"left\" \n        :disableBrushing=\"true\"\n        :tickRotation=\"0\"\n        :getScale=\"getScale\"\n        :getStack=\"getStack\"\n      />\n      <MultiDataTrackPlot\n        slot=\"plot\"\n        :dataArray=\"['clinical_data', 'clinical_data']\"\n        :cArray=\"['age', 'sex']\"\n        x=\"sample_id\"\n        :getData=\"getData\"\n        :getScale=\"getScale\"\n        :clickHandler=\"exampleClickHandler\"\n      />\n      <Axis\n        slot=\"axisBottom\"\n        variable=\"sample_id\"\n        side=\"bottom\" \n        :tickRotation=\"-65\"\n        :getScale=\"getScale\"\n        :getStack=\"getStack\"\n      />\n    </PlotContainer>\n\n    <h3>&lt;StratifiedKaplanMeierPlot/&gt;</h3>\n    <PlotContainer\n      :pWidth=\"500\"\n      :pHeight=\"300\"\n      :pMarginTop=\"10\"\n      :pMarginLeft=\"120\"\n      :pMarginRight=\"10\"\n      :pMarginBottom=\"180\"\n      :showDownloadButton=\"true\"\n    >\n      <Axis\n        slot=\"axisLeft\"\n        variable=\"survival_pct\"\n        side=\"left\" \n        :tickRotation=\"-35\"\n        :getScale=\"getScale\"\n        :getStack=\"getStack\"\n      />\n      <StratifiedKaplanMeierPlot\n        slot=\"plot\"\n        data=\"survival_data\"\n        deathVariable=\"Days to Death\"\n        followupVariable=\"Days to Last Followup\"\n        s=\"survival_data\"\n        c=\"sex\"\n        variable=\"Sex\"\n        x=\"survival_time\"\n        y=\"survival_pct\"\n        o=\"survival_patient\"\n        :getData=\"getData\"\n        :getScale=\"getScale\"\n        :clickHandler=\"exampleClickHandler\"\n      />\n      <Axis\n        slot=\"axisBottom\"\n        variable=\"survival_time\"\n        side=\"bottom\" \n        :getScale=\"getScale\"\n        :getStack=\"getStack\"\n      />\n    </PlotContainer>\n\n    <h3>&lt;CountBarPlot/&gt;</h3>\n    <PlotContainer\n      :pWidth=\"500\"\n      :pHeight=\"300\"\n      :pMarginTop=\"10\"\n      :pMarginLeft=\"120\"\n      :pMarginRight=\"10\"\n      :pMarginBottom=\"180\"\n    >\n      <Axis\n        slot=\"axisLeft\"\n        variable=\"num_samples\"\n        side=\"left\" \n        :tickRotation=\"-35\"\n        :getScale=\"getScale\"\n        :getStack=\"getStack\"\n      />\n      <CountBarPlot\n        slot=\"plot\"\n        data=\"exposures_data\"\n        x=\"signature\"\n        y=\"num_samples\"\n        o=\"sample_id\"\n        :filterFunction=\"countBarPlotFilterFunction\"\n        :getData=\"getData\"\n        :getScale=\"getScale\"\n        :clickHandler=\"exampleClickHandler\"\n      />\n      <Axis\n        slot=\"axisBottom\"\n        variable=\"signature\"\n        side=\"bottom\" \n        :tickRotation=\"-65\"\n        :getScale=\"getScale\"\n        :getStack=\"getStack\"\n      />\n    </PlotContainer>\n\n\n\n    <h3>v-if</h3>\n    <button @click=\"togglePlot = !togglePlot\">Toggle Plot</button>\n    <PlotContainer v-if=\"togglePlot\"\n      :pWidth=\"500\"\n      :pHeight=\"300\"\n      :pMarginTop=\"10\"\n      :pMarginLeft=\"120\"\n      :pMarginRight=\"10\"\n      :pMarginBottom=\"180\"\n    >\n      <Axis\n        slot=\"axisLeft\"\n        variable=\"exposure\"\n        side=\"left\" \n        :tickRotation=\"-35\"\n        :getScale=\"getScale\"\n        :getStack=\"getStack\"\n      />\n      <StratifiedBoxPlot\n        slot=\"plot\"\n        data=\"exposures_data\"\n        variable=\"COSMIC 1\"\n        s=\"clinical_data\"\n        x=\"sex\"\n        y=\"exposure\"\n        o=\"sample_id\"\n        :getData=\"getData\"\n        :getScale=\"getScale\"\n        :clickHandler=\"exampleClickHandler\"\n        :drawOutliers=\"true\"\n      />\n      <Axis\n        slot=\"axisBottom\"\n        variable=\"sex\"\n        side=\"bottom\" \n        :tickRotation=\"-65\"\n        :getScale=\"getScale\"\n        :getStack=\"getStack\"\n      />\n    </PlotContainer>\n    \n\n    <div class=\"stack-wrapper\" v-show=\"showStack\">\n      <h3>&lt;Stack/&gt;</h3>\n      <Stack :getStack=\"getStack\" />\n    </div>\n  </div>\n</template>\n\n<script>\nimport { set as d3_set } from 'd3-collection';\n// Components\nimport { \n  // Components\n    PlotContainer,\n    SortOptions,\n    Axis,\n    GenomeAxis,\n    DendrogramAxis,\n    StackedBarPlot,\n    BarPlot,\n    ScatterPlot,\n    BoxPlot,\n    MultiBoxPlot,\n    TrackPlot,\n    RectPlot,\n    MultiTrackPlot,\n    MultiDataRectPlot,\n    MultiDataTrackPlot,\n    HierarchicalMultiTrackPlot,\n    StratifiedBoxPlot,\n    DoubleStratifiedBoxPlot,\n    StratifiedScatterPlot,\n    DoubleStratifiedScatterPlot,\n    StratifiedSinaPlot,\n    DoubleStratifiedSinaPlot,\n    StratifiedKaplanMeierPlot,\n    CountBarPlot,\n    GenomeScatterPlot,\n    GenomeTrackPlot,\n    GenomeMultiTrackPlot,\n    GenomeStackedBarPlot,\n    CategoricalLegend,\n    ContinuousLegend,\n    Legend,\n    // Classes\n    DataContainer,\n    HistoryStack,\n    CategoricalScale,\n    ContinuousScale,\n    GenomeScale,\n    Expected,\n} from '../src/index.js';\n\n\n// Data\nimport exposuresData from './data/exposures.json';\nimport exposuresSingleData from './data/exposures_single.json';\nimport exposuresErrorSingleData from './data/error_single.json';\nimport rainfallData from './data/rainfall.json';\nimport xyData from './data/xy.json';\nimport clinicalData from './data/clinical_data.json';\nimport clusteringData from './data/clustering.json';\nimport randomGenomeData from './data/random_genome_data.json';\nimport randomGenomeMultiData from './data/random_genome_multi_data.json';\nimport genomeBinsData from './data/genome_bins.json';\nimport vueData from './data/vue.json';\nimport survivalData from './data/survival.json';\n\n\n// History\nimport Stack from './Stack.vue';\nimport { EVENT_TYPES, EVENT_SUBTYPE_RESETS } from '../src/history/base-events.js';\n\nconst expectedDataSource = new Expected();\n\nconst exposuresDataContainer = new DataContainer(\n  'exposures_data', \n  'SBS Exposures', \n  exposuresData\n);\nconst exposuresSingleDataContainer = new DataContainer(\n  'exposures_single_data', \n  'SBS Exposures for SA542425', \n  exposuresSingleData\n);\nconst exposuresErrorSingleDataContainer = new DataContainer(\n  'exposures_error_single_data', \n  'SBS Exposures Error for SA542425', \n  exposuresErrorSingleData\n);\nconst rainfallDataContainer = new DataContainer(\n  'rainfall_data', \n  'Rainfall for SA543567', \n  rainfallData\n);\nconst xyDataContainer = new DataContainer(\n  'xy_data',\n  'Random Data',\n  xyData,\n  expectedDataSource\n);\nconst clinicalDataContainer = new DataContainer(\n  'clinical_data',\n  'Clinical Data',\n  clinicalData\n);\nconst clusteringDataContainer = new DataContainer(\n  'clustering',\n  'Samples clustered by Exposure',\n  clusteringData\n);\nconst randomGenomeDataContainer = new DataContainer(\n  'rand_genome_data',\n  'Random Genome Data',\n  randomGenomeData\n);\nconst randomGenomeMultiDataContainer = new DataContainer(\n  'rand_genome_multi_data',\n  'Random Genome Multi Data',\n  randomGenomeMultiData\n);\nconst genomeBinsDataContainer = new DataContainer(\n  'genome_bins_data',\n  'Signature Exposures across the Genome',\n  genomeBinsData\n);\nconst vueDataContainer = new DataContainer(\n  'vue_data',\n  'Vue Logo',\n  vueData\n);\n\nconst carsAsyncDataContainer = new DataContainer(\n  'async_cars_data',\n  'Cars',\n  fetch('https://vega.github.io/vega-datasets/data/cars.json', {mode: 'cors'}).then(function(response) {\n    return response.json();\n  })\n);\n\nconst survivalDataContainer = new DataContainer(\n  'survival_data',\n  'Survival',\n  survivalData\n);\n\n\n// Initialize data\nconst getData = function(dataKey) {\n  switch(dataKey) {\n    case 'exposures_data':\n      return exposuresDataContainer;\n    case 'exposures_single_data':\n      return exposuresSingleDataContainer;\n    case 'exposures_error_single_data':\n      return exposuresErrorSingleDataContainer;\n    case 'rainfall_data':\n      return rainfallDataContainer;\n    case 'xy_data':\n      return xyDataContainer;\n    case 'clinical_data':\n      return clinicalDataContainer;\n    case 'clustering':\n      return clusteringDataContainer;\n    case 'rand_genome_data':\n      return randomGenomeDataContainer;\n    case 'rand_genome_multi_data':\n      return randomGenomeMultiDataContainer;\n    case 'genome_bins_data':\n      return genomeBinsDataContainer;\n    case 'async_cars_data':\n      return carsAsyncDataContainer;\n    case 'vue_data':\n      return vueDataContainer;\n    case 'survival_data':\n      return survivalDataContainer;\n  }\n};\n\n\n// Initialize scales\nconst sampleIdScale = new CategoricalScale(\n  'sample_id', \n  'Sample', \n  d3_set(exposuresData.map(el => el.sample_id)).values()\n);\nconst numSamplesScale = new ContinuousScale(\n  'num_samples', \n  'Number of Samples', \n  [0, d3_set(exposuresData.map(el => el.sample_id)).values().length]\n);\nconst exposureScale = new ContinuousScale(\n  'exposure',\n  'Exposure',\n  [0, 90000]\n);\nconst exposureErrorScale = new ContinuousScale(\n  'exposure_error',\n  'Error',\n  [-10, 10]\n);\nconst signatureScale = new CategoricalScale(\n  'signature',\n  'Signature',\n  [\"COSMIC 1\",\"COSMIC 2\",\"COSMIC 3\",\"COSMIC 4\",\"COSMIC 5\",\"COSMIC 6\",\"COSMIC 7\",\"COSMIC 8\",\"COSMIC 9\",\"COSMIC 10\",\"COSMIC 11\",\"COSMIC 12\",\"COSMIC 13\",\"COSMIC 14\",\"COSMIC 15\",\"COSMIC 16\",\"COSMIC 17\",\"COSMIC 18\",\"COSMIC 19\",\"COSMIC 20\",\"COSMIC 21\",\"COSMIC 22\",\"COSMIC 23\",\"COSMIC 24\",\"COSMIC 25\",\"COSMIC 26\",\"COSMIC 27\",\"COSMIC 28\",\"COSMIC 29\",\"COSMIC 30\",\"5* A\"],\n  undefined,\n  {\"5* A\": \"#FF0000\"}\n);\nconst xyYScale = new ContinuousScale(\n  'y',\n  'Random Y',\n  [0, 100],\n  undefined,\n  expectedDataSource\n);\nconst xyXScale = new ContinuousScale(\n  'x',\n  'Random X',\n  [0, 50]\n);\nconst ageScale = new ContinuousScale(\n  'age',\n  'Age',\n  [0, 100]\n);\nconst sexScale = new CategoricalScale(\n  'sex',\n  'Sex',\n  [\"Male\", \"Female\"]\n);\nconst genomeScale = new GenomeScale(\"genome\", \"Genome\");\nconst SBS_96_CATEGORIES = [\n    'A[C>A]A', 'A[C>A]C', 'A[C>A]G', 'A[C>A]T', \n    'C[C>A]A', 'C[C>A]C', 'C[C>A]G', 'C[C>A]T', \n    'G[C>A]A', 'G[C>A]C', 'G[C>A]G', 'G[C>A]T', \n    'T[C>A]A', 'T[C>A]C', 'T[C>A]G', 'T[C>A]T', \n    \n    'A[C>G]A', 'A[C>G]C', 'A[C>G]G', 'A[C>G]T', \n    'C[C>G]A', 'C[C>G]C', 'C[C>G]G', 'C[C>G]T', \n    'G[C>G]A', 'G[C>G]C', 'G[C>G]G', 'G[C>G]T', \n    'T[C>G]A', 'T[C>G]C', 'T[C>G]G', 'T[C>G]T', \n    \n    'A[C>T]A', 'A[C>T]C', 'A[C>T]G', 'A[C>T]T', \n    'C[C>T]A', 'C[C>T]C', 'C[C>T]G', 'C[C>T]T',\n    'G[C>T]A', 'G[C>T]C', 'G[C>T]G', 'G[C>T]T', \n    'T[C>T]A', 'T[C>T]C', 'T[C>T]G', 'T[C>T]T',  \n    \n    'A[T>A]A', 'A[T>A]C', 'A[T>A]G', 'A[T>A]T', \n    'C[T>A]A', 'C[T>A]C', 'C[T>A]G', 'C[T>A]T', \n    'G[T>A]A', 'G[T>A]C', 'G[T>A]G', 'G[T>A]T',\n    'T[T>A]A', 'T[T>A]C', 'T[T>A]G', 'T[T>A]T', \n    \n    'A[T>C]A', 'A[T>C]C', 'A[T>C]G', 'A[T>C]T', \n    'C[T>C]A', 'C[T>C]C', 'C[T>C]G', 'C[T>C]T', \n    'G[T>C]A', 'G[T>C]C', 'G[T>C]G', 'G[T>C]T', \n    'T[T>C]A', 'T[T>C]C', 'T[T>C]G', 'T[T>C]T', \n    \n    'A[T>G]A', 'A[T>G]C', 'A[T>G]G', 'A[T>G]T', \n    'C[T>G]A', 'C[T>G]C', 'C[T>G]G', 'C[T>G]T', \n    'G[T>G]A', 'G[T>G]C', 'G[T>G]G', 'G[T>G]T', \n    'T[T>G]A', 'T[T>G]C', 'T[T>G]G', 'T[T>G]T'\n];\nconst catScale = new CategoricalScale(\n  'cat',\n  'Mutation Category',\n  SBS_96_CATEGORIES\n);\nconst mutDistScale = new ContinuousScale(\n  'mut_dist',\n  'Distance to Previous Mutation',\n  [1, 6000000]\n);\nconst projScale = new CategoricalScale(\n  'proj_id',\n  'Project',\n  [\"ICGC-BRCA-EU\",\"TCGA-UCEC\",\"TCGA-BRCA\"]\n);\nconst eventScale = new CategoricalScale(\n  'e_type',\n  'Event Type',\n  [\"e1\",\"e2\",\"e3\"],\n  [\"My Event 1\",\"My Event 2\",\"My Event 3\"]\n);\n\nconst genomeExposureScale = new ContinuousScale(\n  'genome_exposure',\n  'Exposure per Genome Bin',\n  [0, 50]\n);\n\nconst carsCylinderScale = new ContinuousScale(\n  'Cylinders',\n  'Cylinders',\n  [0, 10]\n);\nconst carsHorsepowerScale = new ContinuousScale(\n  'Horsepower',\n  'Horsepower',\n  [0, 400]\n);\n\nconst vueXScale = new ContinuousScale(\n  'vue_x',\n  'Vue X',\n  [0, 12]\n);\nconst vueYScale = new ContinuousScale(\n  'vue_y',\n  'Vue Y',\n  [-0.5, 10]\n);\nconst vueColorScale = new CategoricalScale(\n  'vue_c',\n  'Vue Color',\n  [\"0\", \"1\", \"2\"],\n  undefined,\n  { \"0\": \"#45B280\", \"1\": \"#36495D\" }\n);\n\n\nconst survivalPctScale = new ContinuousScale(\n  'survival_pct',\n  'Percent Survival',\n  [0, 100]\n);\n\nconst survivalTimeScale = new ContinuousScale(\n  'survival_time',\n  'Days',\n  [0, 4680]\n);\n\nconst multiRectPlotScale = new CategoricalScale(\n  'multi_rect_plot_scale',\n  'Variable',\n  [\"Age\", \"Sex\"]\n);\n\nconst survivalPatientScale = new CategoricalScale(\n  'survival_patient',\n  'Patient',\n  Array.from((new Set(survivalData.map(d => d[\"survival_patient\"]))).values())\n);\n\n\n\n\nconst getScale = function(scaleKey) {\n  switch(scaleKey) {\n    case 'sample_id':\n      return sampleIdScale;\n    case 'num_samples':\n      return numSamplesScale;\n    case 'exposure':\n      return exposureScale;\n    case 'signature':\n      return signatureScale;\n    case 'y':\n      return xyYScale;\n    case 'x':\n      return xyXScale;\n    case 'age':\n      return ageScale;\n    case 'sex':\n      return sexScale;\n    case 'genome':\n      return genomeScale;\n    case 'cat':\n      return catScale;\n    case 'mut_dist':\n      return mutDistScale;\n    case 'proj_id':\n      return projScale;\n    case 'e_type':\n      return eventScale;\n    case 'genome_exposure':\n      return genomeExposureScale;\n    case 'Cylinders':\n      return carsCylinderScale;\n    case 'Horsepower':\n      return carsHorsepowerScale;\n    case 'vue_x':\n      return vueXScale;\n    case 'vue_y':\n      return vueYScale;\n    case 'vue_c':\n      return vueColorScale;\n    case 'exposure_error':\n      return exposureErrorScale;\n    case 'survival_pct':\n      return survivalPctScale;\n    case 'survival_time':\n      return survivalTimeScale;\n    case 'survival_patient':\n      return survivalPatientScale;\n    case 'multi_rect_plot_scale':\n      return multiRectPlotScale;\n  }\n};\n\n\n// Initialize the stack\nconst stack = new HistoryStack(\n  {\n    [EVENT_TYPES.SCALE]: getScale,\n    [EVENT_TYPES.DATA]: getData\n  }, \n  EVENT_SUBTYPE_RESETS\n);\n\n\n\nconst getStack = function() {\n  return stack;\n}\n\n\n\nexport default {\n  name: 'app',\n  components: {\n    PlotContainer,\n    Axis,\n    GenomeAxis,\n    DendrogramAxis,\n    StackedBarPlot,\n    BarPlot,\n    SortOptions,\n    Stack,\n    ScatterPlot,\n    BoxPlot,\n    MultiBoxPlot,\n    TrackPlot,\n    RectPlot,\n    MultiTrackPlot,\n    MultiDataRectPlot,\n    MultiDataTrackPlot,\n    HierarchicalMultiTrackPlot,\n    StratifiedBoxPlot,\n    DoubleStratifiedBoxPlot,\n    StratifiedScatterPlot,\n    DoubleStratifiedScatterPlot,\n    StratifiedSinaPlot,\n    DoubleStratifiedSinaPlot,\n    StratifiedKaplanMeierPlot,\n    CountBarPlot,\n    GenomeScatterPlot,\n    GenomeTrackPlot,\n    GenomeMultiTrackPlot,\n    GenomeStackedBarPlot,\n    CategoricalLegend,\n    ContinuousLegend,\n    Legend,\n  },\n  data() {\n    return {\n      dynamicPlotHeight: 300,\n      getData: getData,\n      getScale: getScale,\n      getStack: getStack,\n      showStack: false,\n      togglePlot: false\n    }\n  },\n  mounted() {\n    \n  },\n  methods: {\n    exampleClickHandler() {\n      alert(\"You clicked something with data: \" + JSON.stringify([...arguments]));\n    },\n    countBarPlotFilterFunction(val) {\n      return (val > 1);\n    },\n    exampleDynamicPlotHeight() {\n      this.dynamicPlotHeight += 100;\n    },\n    exampleModifyData() {\n      expectedDataSource.emitData({\n          \"data\": {\n              \"xy_data\": xyData.map(d => ({x: 2*d.x, y: 2*d.y}))\n          }\n      });\n    },\n    exampleModifyScale() {\n      expectedDataSource.emitData({\n          \"scales\": {\n              \"y\": [0, 300]\n          }\n      });\n    }\n  }\n}\n</script>\n\n<style>\n@import url('https://fonts.googleapis.com/css?family=IBM+Plex+Mono');\n\n#app {\n  font-family: Avenir,Helvetica,Arial,sans-serif;\n  -moz-osx-font-smoothing: grayscale;\n  color: #2c3e50;\n  margin: 1em;\n  position: relative;\n}\npre {\n  font-family: 'IBM Plex Mono', monospace;\n  background-color: #DDD;\n  padding: 1em;\n}\nh1 {\n  display: inline-block;\n}\na {\n  color: black;\n  text-decoration: none;\n}\n.top-links {\n  float: right;\n  margin-top: 20px;\n}\n.top-links a {\n  margin-left: 20px;\n}\n.top-links a svg path {\n  fill: #2c3e50;\n}\n\n.clearfix {\n  float: none;\n  clear: both;\n}\n\n.plot-group {\n  position: relative;\n}\n\n.stack-wrapper {\n  float: right;\n  position: fixed;\n  top: 8vh;\n  right: 1rem;\n  width: 400px;\n  background-color: lightsteelblue;\n  padding: 0.5rem;\n  height: 89vh;\n  \n}\n\n.stack-wrapper h3 {\n  margin: 5px auto;\n}\n\n.stack-wrapper > div > div > div {\n  overflow-x: scroll;\n  white-space: nowrap;\n  border-left: 3px solid dimgray;\n  padding: 3px;\n  margin-bottom: 5px;\n}\n\n</style>\n","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=1aeded7f&\"\nimport script from \"./App.vue?vue&type=script&lang=js&\"\nexport * from \"./App.vue?vue&type=script&lang=js&\"\nimport style0 from \"./App.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue'\nimport App from './App.vue'\n\nconst app = new Vue({\n  el: '#app',\n  render: h => h(App)\n})\n","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./GenomeStackedBarPlot.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./GenomeStackedBarPlot.vue?vue&type=style&index=0&lang=css&\"","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Modal.vue?vue&type=style&index=0&id=68b74996&scoped=true&lang=scss&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Modal.vue?vue&type=style&index=0&id=68b74996&scoped=true&lang=scss&\"","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./GenomeScatterPlot.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./GenomeScatterPlot.vue?vue&type=style&index=0&lang=css&\"","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./DendrogramAxis.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./DendrogramAxis.vue?vue&type=style&index=0&lang=css&\"","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MultiDataRectPlot.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MultiDataRectPlot.vue?vue&type=style&index=0&lang=css&\"","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ColorPicker.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ColorPicker.vue?vue&type=style&index=0&lang=css&\"","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./StratifiedBoxPlot.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./StratifiedBoxPlot.vue?vue&type=style&index=0&lang=css&\"","import mod from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./Stack.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./Stack.vue?vue&type=style&index=0&lang=css&\""],"sourceRoot":""}